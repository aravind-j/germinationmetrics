[{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"The `germinationmetrics` Package: A Brief Introduction","text":"package germinationmetrics collection functions implements various methods describing time-course germination terms single-value germination indices well fitted curves. goal vignette introduce users functions get started describing sequentially recorded germination count data. document assumes basic knowledge R programming language.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"The `germinationmetrics` Package: A Brief Introduction","text":"package can installed using following functions: package can loaded using function","code":"# Install from CRAN install.packages('germinationmetrics', dependencies=TRUE)  # Install development version from Github devtools::install_github(\"aravind-j/germinationmetrics\") library(germinationmetrics) -------------------------------------------------------------------------------- Welcome to germinationmetrics version 0.1.8.9000   # To know how to use this package type:   browseVignettes(package = 'germinationmetrics')   for the package vignette.  # To know whats new in this version type:   news(package='germinationmetrics')   for the NEWS file.  # To cite the methods in the package type:   citation(package='germinationmetrics')  # To suppress this message use:   suppressPackageStartupMessages(library(germinationmetrics)) --------------------------------------------------------------------------------"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"version-history","dir":"Articles","previous_headings":"","what":"Version History","title":"The `germinationmetrics` Package: A Brief Introduction","text":"current version package 0.1.8. previous versions follows. Table 1. Version history germinationmetrics R package. know detailed history changes use news(package='germinationmetrics').","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"germination-count-data","dir":"Articles","previous_headings":"","what":"Germination count data","title":"The `germinationmetrics` Package: A Brief Introduction","text":"Typically germination test, germination count data fixed number seeds recorded regular intervals definite period time seeds germinated. germination count data can either partial cumulative (Table 2). Table 2 : typical germination count data. time-course germination can plotted follows.","code":"data <- data.frame(intervals = 1:14,                    counts = c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0))  # Partial germination counts x <- data$counts # Cumulative germination counts y <- cumsum(x) # Time intervals of observations int <- data$intervals  plot(int, cumsum(x))"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"single-value-germination-indices","dir":"Articles","previous_headings":"","what":"Single-value germination indices","title":"The `germinationmetrics` Package: A Brief Introduction","text":"details single-value germination indices implemented germinationmetrics described Table 3. Table 3 : Single-value germination indices implemented germinationmetrics.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"germpercent","dir":"Articles","previous_headings":"Single-value germination indices","what":"GermPercent()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) z <- c(0, 0, 0, 0, 11, 11, 9, 7, 1, 0, 1, 0, 0, 0) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- GermPercent(germ.counts = x, total.seeds = 50) [1] 80 PeakGermPercent(germ.counts = x, intervals = int, total.seeds = 50) [1] 34 # For multiple peak germination times PeakGermPercent(germ.counts = z, intervals = int, total.seeds = 50) Warning in PeakGermPercent(germ.counts = z, intervals = int, total.seeds = 50): Multiple peak germination times exist. [1] 22 # From cumulative germination counts #---------------------------------------------------------------------------- GermPercent(germ.counts = y, total.seeds = 50, partial = FALSE) [1] 80 PeakGermPercent(germ.counts = y, intervals = int, total.seeds = 50,                 partial = FALSE) [1] 34 # For multiple peak germination times PeakGermPercent(germ.counts = cumsum(z), intervals = int, total.seeds = 50,                 partial = FALSE) Warning in PeakGermPercent(germ.counts = cumsum(z), intervals = int, total.seeds = 50, : Multiple peak germination times exist. [1] 22 # From number of germinated seeds #---------------------------------------------------------------------------- GermPercent(germinated.seeds = 40, total.seeds = 50) [1] 80"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"firstgermtime-lastgermtime-peakgermtime-timespreadgerm","dir":"Articles","previous_headings":"Single-value germination indices","what":"FirstGermTime(), LastGermTime(), PeakGermTime(), TimeSpreadGerm()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) z <- c(0, 0, 0, 0, 11, 11, 9, 7, 1, 0, 1, 0, 0, 0) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- FirstGermTime(germ.counts = x, intervals = int) [1] 5 LastGermTime(germ.counts = x, intervals = int) [1] 11 TimeSpreadGerm(germ.counts = x, intervals = int) [1] 6 PeakGermTime(germ.counts = x, intervals = int) [1] 6 # For multiple peak germination times PeakGermTime(germ.counts = z, intervals = int) Warning in PeakGermTime(germ.counts = z, intervals = int): Multiple peak germination times exist. [1] 5 6 # From cumulative germination counts #---------------------------------------------------------------------------- FirstGermTime(germ.counts = y, intervals = int, partial = FALSE) [1] 5 LastGermTime(germ.counts = y, intervals = int, partial = FALSE) [1] 11 TimeSpreadGerm(germ.counts = y, intervals = int, partial = FALSE) [1] 6 PeakGermTime(germ.counts = y, intervals = int, partial = FALSE) [1] 6 # For multiple peak germination time PeakGermTime(germ.counts = cumsum(z), intervals = int, partial = FALSE) Warning in PeakGermTime(germ.counts = cumsum(z), intervals = int, partial = FALSE): Multiple peak germination times exist. [1] 5 6"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"t50","dir":"Articles","previous_headings":"Single-value germination indices","what":"t50()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- t50(germ.counts = x, intervals = int, method = \"coolbear\") [1] 5.970588 t50(germ.counts = x, intervals = int, method = \"farooq\") [1] 5.941176 # From cumulative germination counts #---------------------------------------------------------------------------- t50(germ.counts = y, intervals = int, partial = FALSE, method = \"coolbear\") [1] 5.970588 t50(germ.counts = y, intervals = int, partial = FALSE, method = \"farooq\") [1] 5.941176"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"meangermtime-vargermtime-segermtime-cvgermtime","dir":"Articles","previous_headings":"Single-value germination indices","what":"MeanGermTime(), VarGermTime(), SEGermTime(), CVGermTime()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- MeanGermTime(germ.counts = x, intervals = int) [1] 6.7 VarGermTime(germ.counts = x, intervals = int) [1] 1.446154 SEGermTime(germ.counts = x, intervals = int) [1] 0.1901416 CVGermTime(germ.counts = x, intervals = int) [1] 0.1794868 # From cumulative germination counts #---------------------------------------------------------------------------- MeanGermTime(germ.counts = y, intervals = int, partial = FALSE) [1] 6.7 VarGermTime(germ.counts = y, intervals = int, partial = FALSE) [1] 1.446154 SEGermTime(germ.counts = y, intervals = int, partial = FALSE) [1] 0.1901416 CVGermTime(germ.counts = y, intervals = int, partial = FALSE) [1] 0.1794868"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"meangermrate-cvg-vargermrate-segermrate-germraterecip","dir":"Articles","previous_headings":"Single-value germination indices","what":"MeanGermRate(), CVG(), VarGermRate(), SEGermRate(), GermRateRecip()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- MeanGermRate(germ.counts = x, intervals = int) [1] 0.1492537 CVG(germ.counts = x, intervals = int) [1] 14.92537 VarGermRate(germ.counts = x, intervals = int) [1] 0.0007176543 SEGermRate(germ.counts = x, intervals = int) [1] 0.004235724 GermRateRecip(germ.counts = x, intervals = int, method = \"coolbear\") [1] 0.1674877 GermRateRecip(germ.counts = x, intervals = int, method = \"farooq\") [1] 0.1683168 # From cumulative germination counts #---------------------------------------------------------------------------- MeanGermRate(germ.counts = y, intervals = int, partial = FALSE) [1] 0.1492537 CVG(germ.counts = y, intervals = int, partial = FALSE) [1] 14.92537 VarGermRate(germ.counts = y, intervals = int, partial = FALSE) [1] 0.0007176543 SEGermRate(germ.counts = y, intervals = int, partial = FALSE) [1] 0.004235724 GermRateRecip(germ.counts = y, intervals = int,               method = \"coolbear\", partial = FALSE) [1] 0.1674877 GermRateRecip(germ.counts = y, intervals = int,               method = \"farooq\", partial = FALSE) [1] 0.1683168"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"germspeed-germspeedaccumulated-germspeedcorrected","dir":"Articles","previous_headings":"Single-value germination indices","what":"GermSpeed(), GermSpeedAccumulated(), GermSpeedCorrected()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- GermSpeed(germ.counts = x, intervals = int) [1] 6.138925 GermSpeedAccumulated(germ.counts = x, intervals = int) [1] 34.61567 GermSpeedCorrected(germ.counts = x, intervals = int, total.seeds = 50,                    method = \"normal\") [1] 0.1534731 GermSpeedCorrected(germ.counts = x, intervals = int, total.seeds = 50,                    method = \"accumulated\") [1] 0.8653917 # From partial germination counts (with percentages instead of counts) #---------------------------------------------------------------------------- GermSpeed(germ.counts = x, intervals = int,           percent = TRUE, total.seeds = 50) [1] 12.27785 GermSpeedAccumulated(germ.counts = x, intervals = int,                      percent = TRUE, total.seeds = 50) [1] 69.23134 # From cumulative germination counts #---------------------------------------------------------------------------- GermSpeed(germ.counts = y, intervals = int, partial = FALSE) [1] 6.138925 GermSpeedAccumulated(germ.counts = y, intervals = int, partial = FALSE) [1] 34.61567 GermSpeedCorrected(germ.counts = y, intervals = int,                    partial = FALSE, total.seeds = 50, method = \"normal\") [1] 0.1534731 GermSpeedCorrected(germ.counts = y, intervals = int,                    partial = FALSE, total.seeds = 50, method = \"accumulated\") [1] 0.8653917 # From cumulative germination counts (with percentages instead of counts) #---------------------------------------------------------------------------- GermSpeed(germ.counts = y, intervals = int, partial = FALSE,           percent = TRUE, total.seeds = 50) [1] 12.27785 GermSpeedAccumulated(germ.counts = y, intervals = int, partial = FALSE,                      percent = TRUE, total.seeds = 50) [1] 69.23134"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"weightgermpercent","dir":"Articles","previous_headings":"Single-value germination indices","what":"WeightGermPercent()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- WeightGermPercent(germ.counts = x, total.seeds = 50, intervals = int) [1] 47.42857 # From cumulative germination counts #---------------------------------------------------------------------------- WeightGermPercent(germ.counts = y, total.seeds = 50, intervals = int,                   partial = FALSE) [1] 47.42857"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"meangermpercent-meangermnumber","dir":"Articles","previous_headings":"Single-value germination indices","what":"MeanGermPercent(), MeanGermNumber()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- MeanGermPercent(germ.counts = x, total.seeds = 50, intervals = int) [1] 5.714286 MeanGermNumber(germ.counts = x, intervals = int) [1] 2.857143 # From cumulative germination counts #---------------------------------------------------------------------------- MeanGermPercent(germ.counts = y, total.seeds = 50, intervals = int, partial = FALSE) [1] 5.714286 MeanGermNumber(germ.counts = y, intervals = int, partial = FALSE) [1] 2.857143 # From number of germinated seeds #---------------------------------------------------------------------------- MeanGermPercent(germinated.seeds = 40, total.seeds = 50, intervals = int) [1] 5.714286"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"timsonsindex-germrategeorge","dir":"Articles","previous_headings":"Single-value germination indices","what":"TimsonsIndex(), GermRateGeorge()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- # Without max specified TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50) [1] 664 TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50,              modification = \"none\") [1] 664 TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50,              modification = \"labouriau\") [1] 8.3 TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50,              modification = \"khanungar\") [1] 47.42857 GermRateGeorge(germ.counts = x, intervals = int) [1] 332 # With max specified TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50, max = 10) [1] 344 TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50,              max = 10, modification = \"none\") [1] 344 TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50,              max = 10, modification = \"labouriau\") [1] 4.410256 TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50,              max = 10, modification = \"khanungar\") [1] 24.57143 GermRateGeorge(germ.counts = x, intervals = int, max = 10) [1] 172 GermRateGeorge(germ.counts = x, intervals = int, max = 14) [1] 332 # From cumulative germination counts #---------------------------------------------------------------------------- # Without max specified TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50) [1] 664 TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50,              modification = \"none\") [1] 664 TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50,              modification = \"labouriau\") [1] 8.3 TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50,              modification = \"khanungar\") [1] 47.42857 GermRateGeorge(germ.counts = y, intervals = int, partial = FALSE) [1] 332 # With max specified TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50, max = 10) [1] 344 TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50,              max = 10, modification = \"none\") [1] 344 TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50,              max = 10, modification = \"labouriau\") [1] 4.410256 TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50,              max = 10, modification = \"khanungar\") [1] 24.57143 GermRateGeorge(germ.counts = y, intervals = int, partial = FALSE,                max = 10) [1] 172 GermRateGeorge(germ.counts = y, intervals = int, partial = FALSE,                max = 14) [1] 332"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"germindex","dir":"Articles","previous_headings":"Single-value germination indices","what":"GermIndex()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- GermIndex(germ.counts = x, intervals = int, total.seeds = 50) [1] 5.84 GermIndex(germ.counts = x, intervals = int, total.seeds = 50,           modification = \"none\") [1] 5.84 GermIndex(germ.counts = x, intervals = int, total.seeds = 50,           modification = \"santanaranal\") [1] 7.3 # From cumulative germination counts #---------------------------------------------------------------------------- GermIndex(germ.counts = y, intervals = int, partial = FALSE,           total.seeds = 50) [1] 5.84 GermIndex(germ.counts = y, intervals = int, partial = FALSE,           total.seeds = 50,           modification = \"none\") [1] 5.84 GermIndex(germ.counts = y, intervals = int, partial = FALSE,           total.seeds = 50,           modification = \"santanaranal\") [1] 7.3"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"emergencerateindex","dir":"Articles","previous_headings":"Single-value germination indices","what":"EmergenceRateIndex()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- EmergenceRateIndex(germ.counts = x, intervals = int, total.seeds = 50) [1] 292 EmergenceRateIndex(germ.counts = x, intervals = int, total.seeds = 50,                    method = \"shmueligoldberg\") [1] 292 EmergenceRateIndex(germ.counts = x, intervals = int, total.seeds = 50,                    method = \"sgsantanaranal\") [1] 7.3 EmergenceRateIndex(germ.counts = x, intervals = int, total.seeds = 50,                    method = \"bilbrowanjura\") [1] 5.970149 EmergenceRateIndex(germ.counts = x, intervals = int, total.seeds = 50,                    method = \"fakorede\") [1] 8.375 # From cumulative germination counts #---------------------------------------------------------------------------- EmergenceRateIndex(germ.counts = y, intervals = int, total.seeds = 50,                    partial = FALSE) [1] 292 EmergenceRateIndex(germ.counts = y, intervals = int, total.seeds = 50,                    partial = FALSE,                    method = \"shmueligoldberg\") [1] 292 EmergenceRateIndex(germ.counts = y, intervals = int, total.seeds = 50,                    partial = FALSE,                    method = \"sgsantanaranal\") [1] 7.3 EmergenceRateIndex(germ.counts = y, intervals = int, total.seeds = 50,                    partial = FALSE,                    method = \"bilbrowanjura\") [1] 5.970149 EmergenceRateIndex(germ.counts = y, intervals = int, total.seeds = 50,                    partial = FALSE,                    method = \"fakorede\") [1] 8.375"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"peakvalue-germvalue","dir":"Articles","previous_headings":"Single-value germination indices","what":"PeakValue(), GermValue()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 34, 40, 21, 10, 4, 5, 3, 5, 8, 7, 7, 6, 6, 4, 0, 2, 0, 2) y <- c(0, 0, 34, 74, 95, 105, 109, 114, 117, 122, 130, 137, 144, 150,       156, 160, 160, 162, 162, 164) int <- 1:length(x) total.seeds = 200  # From partial germination counts #---------------------------------------------------------------------------- PeakValue(germ.counts = x, intervals = int, total.seeds = 200) [1] 9.5 GermValue(germ.counts = x, intervals = int, total.seeds = 200,           method = \"czabator\") $`Germination Value` [1] 38.95  [[2]]    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent 3           34         3                     34                    17.0 4           40         4                     74                    37.0 5           21         5                     95                    47.5 6           10         6                    105                    52.5 7            4         7                    109                    54.5 8            5         8                    114                    57.0 9            3         9                    117                    58.5 10           5        10                    122                    61.0 11           8        11                    130                    65.0 12           7        12                    137                    68.5 13           7        13                    144                    72.0 14           6        14                    150                    75.0 15           6        15                    156                    78.0 16           4        16                    160                    80.0 17           0        17                    160                    80.0 18           2        18                    162                    81.0 19           0        19                    162                    81.0 20           2        20                    164                    82.0         DGS 3  5.666667 4  9.250000 5  9.500000 6  8.750000 7  7.785714 8  7.125000 9  6.500000 10 6.100000 11 5.909091 12 5.708333 13 5.538462 14 5.357143 15 5.200000 16 5.000000 17 4.705882 18 4.500000 19 4.263158 20 4.100000 GermValue(germ.counts = x, intervals = int, total.seeds = 200,           method = \"dp\", k = 10) $`Germination Value` [1] 53.36595  [[2]]    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent 3           34         3                     34                    17.0 4           40         4                     74                    37.0 5           21         5                     95                    47.5 6           10         6                    105                    52.5 7            4         7                    109                    54.5 8            5         8                    114                    57.0 9            3         9                    117                    58.5 10           5        10                    122                    61.0 11           8        11                    130                    65.0 12           7        12                    137                    68.5 13           7        13                    144                    72.0 14           6        14                    150                    75.0 15           6        15                    156                    78.0 16           4        16                    160                    80.0 17           0        17                    160                    80.0 18           2        18                    162                    81.0 19           0        19                    162                    81.0 20           2        20                    164                    82.0         DGS SumDGSbyN        GV 3  5.666667  5.666667  9.633333 4  9.250000  7.458333 27.595833 5  9.500000  8.138889 38.659722 6  8.750000  8.291667 43.531250 7  7.785714  8.190476 44.638095 8  7.125000  8.012897 45.673512 9  6.500000  7.796769 45.611097 10 6.100000  7.584673 46.266503 11 5.909091  7.398497 48.090230 12 5.708333  7.229481 49.521942 13 5.538462  7.075752 50.945411 14 5.357143  6.932534 51.994006 15 5.200000  6.799262 53.034246 16 5.000000  6.670744 53.365948 17 4.705882  6.539753 52.318022 18 4.500000  6.412268 51.939373 19 4.263158  6.285850 50.915385 20 4.100000  6.164414 50.548194  $testend [1] 16 GermValue(germ.counts = x, intervals = int, total.seeds = 200,           method = \"czabator\", from.onset = FALSE) $`Germination Value` [1] 38.95  [[2]]    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent 1            0         1                      0                     0.0 2            0         2                      0                     0.0 3           34         3                     34                    17.0 4           40         4                     74                    37.0 5           21         5                     95                    47.5 6           10         6                    105                    52.5 7            4         7                    109                    54.5 8            5         8                    114                    57.0 9            3         9                    117                    58.5 10           5        10                    122                    61.0 11           8        11                    130                    65.0 12           7        12                    137                    68.5 13           7        13                    144                    72.0 14           6        14                    150                    75.0 15           6        15                    156                    78.0 16           4        16                    160                    80.0 17           0        17                    160                    80.0 18           2        18                    162                    81.0 19           0        19                    162                    81.0 20           2        20                    164                    82.0         DGS 1  0.000000 2  0.000000 3  5.666667 4  9.250000 5  9.500000 6  8.750000 7  7.785714 8  7.125000 9  6.500000 10 6.100000 11 5.909091 12 5.708333 13 5.538462 14 5.357143 15 5.200000 16 5.000000 17 4.705882 18 4.500000 19 4.263158 20 4.100000 GermValue(germ.counts = x, intervals = int, total.seeds = 200,           method = \"dp\", k = 10, from.onset = FALSE) $`Germination Value` [1] 46.6952  [[2]]    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent 1            0         1                      0                     0.0 2            0         2                      0                     0.0 3           34         3                     34                    17.0 4           40         4                     74                    37.0 5           21         5                     95                    47.5 6           10         6                    105                    52.5 7            4         7                    109                    54.5 8            5         8                    114                    57.0 9            3         9                    117                    58.5 10           5        10                    122                    61.0 11           8        11                    130                    65.0 12           7        12                    137                    68.5 13           7        13                    144                    72.0 14           6        14                    150                    75.0 15           6        15                    156                    78.0 16           4        16                    160                    80.0 17           0        17                    160                    80.0 18           2        18                    162                    81.0 19           0        19                    162                    81.0 20           2        20                    164                    82.0         DGS SumDGSbyN        GV 1  0.000000  0.000000  0.000000 2  0.000000  0.000000  0.000000 3  5.666667  1.888889  3.211111 4  9.250000  3.729167 13.797917 5  9.500000  4.883333 23.195833 6  8.750000  5.527778 29.020833 7  7.785714  5.850340 31.884354 8  7.125000  6.009673 34.255134 9  6.500000  6.064153 35.475298 10 6.100000  6.067738 37.013202 11 5.909091  6.053316 39.346552 12 5.708333  6.024567 41.268285 13 5.538462  5.987174 43.107655 14 5.357143  5.942172 44.566291 15 5.200000  5.892694 45.963013 16 5.000000  5.836901 46.695205 17 4.705882  5.770370 46.162961 18 4.500000  5.699794 46.168331 19 4.263158  5.624182 45.555871 20 4.100000  5.547972 45.493374  $testend [1] 16 # From cumulative germination counts #---------------------------------------------------------------------------- PeakValue(germ.counts = y, interval = int, total.seeds = 200,           partial = FALSE) [1] 9.5 GermValue(germ.counts = y, intervals = int, total.seeds = 200,           partial = FALSE, method = \"czabator\") $`Germination Value` [1] 38.95  [[2]]    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent 3           34         3                     34                    17.0 4           40         4                     74                    37.0 5           21         5                     95                    47.5 6           10         6                    105                    52.5 7            4         7                    109                    54.5 8            5         8                    114                    57.0 9            3         9                    117                    58.5 10           5        10                    122                    61.0 11           8        11                    130                    65.0 12           7        12                    137                    68.5 13           7        13                    144                    72.0 14           6        14                    150                    75.0 15           6        15                    156                    78.0 16           4        16                    160                    80.0 17           0        17                    160                    80.0 18           2        18                    162                    81.0 19           0        19                    162                    81.0 20           2        20                    164                    82.0         DGS 3  5.666667 4  9.250000 5  9.500000 6  8.750000 7  7.785714 8  7.125000 9  6.500000 10 6.100000 11 5.909091 12 5.708333 13 5.538462 14 5.357143 15 5.200000 16 5.000000 17 4.705882 18 4.500000 19 4.263158 20 4.100000 GermValue(germ.counts = y, intervals = int, total.seeds = 200,           partial = FALSE, method = \"dp\", k = 10) $`Germination Value` [1] 53.36595  [[2]]    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent 3           34         3                     34                    17.0 4           40         4                     74                    37.0 5           21         5                     95                    47.5 6           10         6                    105                    52.5 7            4         7                    109                    54.5 8            5         8                    114                    57.0 9            3         9                    117                    58.5 10           5        10                    122                    61.0 11           8        11                    130                    65.0 12           7        12                    137                    68.5 13           7        13                    144                    72.0 14           6        14                    150                    75.0 15           6        15                    156                    78.0 16           4        16                    160                    80.0 17           0        17                    160                    80.0 18           2        18                    162                    81.0 19           0        19                    162                    81.0 20           2        20                    164                    82.0         DGS SumDGSbyN        GV 3  5.666667  5.666667  9.633333 4  9.250000  7.458333 27.595833 5  9.500000  8.138889 38.659722 6  8.750000  8.291667 43.531250 7  7.785714  8.190476 44.638095 8  7.125000  8.012897 45.673512 9  6.500000  7.796769 45.611097 10 6.100000  7.584673 46.266503 11 5.909091  7.398497 48.090230 12 5.708333  7.229481 49.521942 13 5.538462  7.075752 50.945411 14 5.357143  6.932534 51.994006 15 5.200000  6.799262 53.034246 16 5.000000  6.670744 53.365948 17 4.705882  6.539753 52.318022 18 4.500000  6.412268 51.939373 19 4.263158  6.285850 50.915385 20 4.100000  6.164414 50.548194  $testend [1] 16 GermValue(germ.counts = y, intervals = int, total.seeds = 200,           partial = FALSE, method = \"czabator\", from.onset = FALSE) $`Germination Value` [1] 38.95  [[2]]    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent 1            0         1                      0                     0.0 2            0         2                      0                     0.0 3           34         3                     34                    17.0 4           40         4                     74                    37.0 5           21         5                     95                    47.5 6           10         6                    105                    52.5 7            4         7                    109                    54.5 8            5         8                    114                    57.0 9            3         9                    117                    58.5 10           5        10                    122                    61.0 11           8        11                    130                    65.0 12           7        12                    137                    68.5 13           7        13                    144                    72.0 14           6        14                    150                    75.0 15           6        15                    156                    78.0 16           4        16                    160                    80.0 17           0        17                    160                    80.0 18           2        18                    162                    81.0 19           0        19                    162                    81.0 20           2        20                    164                    82.0         DGS 1  0.000000 2  0.000000 3  5.666667 4  9.250000 5  9.500000 6  8.750000 7  7.785714 8  7.125000 9  6.500000 10 6.100000 11 5.909091 12 5.708333 13 5.538462 14 5.357143 15 5.200000 16 5.000000 17 4.705882 18 4.500000 19 4.263158 20 4.100000 GermValue(germ.counts = y, intervals = int, total.seeds = 200,           partial = FALSE, method = \"dp\", k = 10, from.onset = FALSE) $`Germination Value` [1] 46.6952  [[2]]    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent 1            0         1                      0                     0.0 2            0         2                      0                     0.0 3           34         3                     34                    17.0 4           40         4                     74                    37.0 5           21         5                     95                    47.5 6           10         6                    105                    52.5 7            4         7                    109                    54.5 8            5         8                    114                    57.0 9            3         9                    117                    58.5 10           5        10                    122                    61.0 11           8        11                    130                    65.0 12           7        12                    137                    68.5 13           7        13                    144                    72.0 14           6        14                    150                    75.0 15           6        15                    156                    78.0 16           4        16                    160                    80.0 17           0        17                    160                    80.0 18           2        18                    162                    81.0 19           0        19                    162                    81.0 20           2        20                    164                    82.0         DGS SumDGSbyN        GV 1  0.000000  0.000000  0.000000 2  0.000000  0.000000  0.000000 3  5.666667  1.888889  3.211111 4  9.250000  3.729167 13.797917 5  9.500000  4.883333 23.195833 6  8.750000  5.527778 29.020833 7  7.785714  5.850340 31.884354 8  7.125000  6.009673 34.255134 9  6.500000  6.064153 35.475298 10 6.100000  6.067738 37.013202 11 5.909091  6.053316 39.346552 12 5.708333  6.024567 41.268285 13 5.538462  5.987174 43.107655 14 5.357143  5.942172 44.566291 15 5.200000  5.892694 45.963013 16 5.000000  5.836901 46.695205 17 4.705882  5.770370 46.162961 18 4.500000  5.699794 46.168331 19 4.263158  5.624182 45.555871 20 4.100000  5.547972 45.493374  $testend [1] 16"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"cugerm","dir":"Articles","previous_headings":"Single-value germination indices","what":"CUGerm()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- CUGerm(germ.counts = x, intervals = int) [1] 0.7092199 # From cumulative germination counts #---------------------------------------------------------------------------- CUGerm(germ.counts = y, intervals = int, partial = FALSE) [1] 0.7092199"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"germsynchrony-germuncertainty","dir":"Articles","previous_headings":"Single-value germination indices","what":"GermSynchrony(), GermUncertainty()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- GermSynchrony(germ.counts = x, intervals = int) [1] 0.2666667 GermUncertainty(germ.counts = x, intervals = int) [1] 2.062987 # From cumulative germination counts #---------------------------------------------------------------------------- GermSynchrony(germ.counts = y, intervals = int, partial = FALSE) [1] 0.2666667 GermUncertainty(germ.counts = y, intervals = int, partial = FALSE) [1] 2.062987"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"non-linear-regression-analysis","dir":"Articles","previous_headings":"","what":"Non-linear regression analysis","title":"The `germinationmetrics` Package: A Brief Introduction","text":"Several mathematical functions used fit cumulative germination count data describe germination process non-linear regression analysis. include functions Richard’s, Weibull, logistic, log-logistic, gaussian, four-parameter hill function etc. Currently germinationmetrics implements four-parameter hill function fit count data computed various associated metrics.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"four-parameter-hill-function","dir":"Articles","previous_headings":"Non-linear regression analysis","what":"Four-parameter hill function","title":"The `germinationmetrics` Package: A Brief Introduction","text":"four-parameter hill function defined follows (El-Kassaby et al., 2008). \\[ f(x) = y = y_0 + \\frac{ax^b}{x^b+c^b} \\] , \\(y\\) cumulative germination percentage time \\(x\\), \\(y_{0}\\) intercept y axis, \\(\\) asymptote, \\(b\\) mathematical parameter controlling shape steepness germination curve \\(c\\) “half-maximal activation level”. function can also reparameterized substituting \\(b\\) \\(e^{\\beta}\\) constraint \\(b\\) positive values . \\[ y = y_{0}+\\frac{ax^{e^{\\beta}}}{c^{e^{\\beta}}+x^{e^{\\beta}}} \\] , \\(b = e^{\\beta}\\) \\(\\beta = \\log_{e}(b)\\). details various parameters computed function given Table 4. Table 4 Germination parameters estimated four-parameter hill function.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"fourphffit","dir":"Articles","previous_headings":"Non-linear regression analysis > Four-parameter hill function","what":"FourPHFfit()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x) total.seeds = 50  # From partial germination counts #---------------------------------------------------------------------------- FourPHFfit(germ.counts = x, intervals = int, total.seeds = 50, tmax = 20) $data    gp csgp intervals 1   0    0         1 2   0    0         2 3   0    0         3 4   0    0         4 5   8    8         5 6  34   42         6 7  20   62         7 8  14   76         8 9   2   78         9 10  0   78        10 11  2   80        11 12  0   80        12 13  0   80        13 14  0   80        14  $Parameters   term estimate  std.error statistic      p.value 1  bta 2.290709 0.05602634  40.88628 2.965932e-14 2    c 6.034954 0.03872162 155.85488 3.270089e-21  $Fit     sigma isConv       finTol    logLik      AIC      BIC deviance df.residual 1 1.61522   TRUE 6.039613e-14 -25.49868 56.99736 58.91453 31.30723          12   nobs 1   14  $a [1] 80  $b [1] 9.881937  $c [1] 6.034954  $y0 [1] 0  $lag [1] 0  $Dlag50 [1] 6.034954  $t50.total [1] 6.355121  $txp.total       10       60  4.956264 6.744598   $t50.Germinated [1] 6.034954  $txp.Germinated       10       60  4.831807 6.287724   $Uniformity         90         10 uniformity    7.537690   4.831807   2.705882   $TMGR [1] 5.912194  $AUC [1] 1108.976  $MGT [1] 6.632252  $Skewness [1] 1.098973  $msg [1] \"#1. success \"  $isConv [1] TRUE  $model Nonlinear regression model   model: csgp ~ FourPHF_fixa_fixy0(x = intervals, a = max(csgp), bta,     c)    data: data   bta     c  2.291 6.035   residual sum-of-squares: 31.31  Algorithm: multifit/levenberg-marquardt, (scaling: levenberg, solver: qr)  Number of iterations to convergence: 9  Achieved convergence tolerance: 6.04e-14  attr(,\"class\") [1] \"FourPHFfit\" \"list\" # From cumulative germination counts #---------------------------------------------------------------------------- FourPHFfit(germ.counts = y, intervals = int, total.seeds = 50, tmax = 20,            partial = FALSE) $data    gp csgp intervals 1   0    0         1 2   0    0         2 3   0    0         3 4   0    0         4 5   8    8         5 6  34   42         6 7  20   62         7 8  14   76         8 9   2   78         9 10  0   78        10 11  2   80        11 12  0   80        12 13  0   80        13 14  0   80        14  $Parameters   term estimate  std.error statistic      p.value 1  bta 2.290709 0.05602634  40.88628 2.965932e-14 2    c 6.034954 0.03872162 155.85488 3.270089e-21  $Fit     sigma isConv       finTol    logLik      AIC      BIC deviance df.residual 1 1.61522   TRUE 6.039613e-14 -25.49868 56.99736 58.91453 31.30723          12   nobs 1   14  $a [1] 80  $b [1] 9.881937  $c [1] 6.034954  $y0 [1] 0  $lag [1] 0  $Dlag50 [1] 6.034954  $t50.total [1] 6.355121  $txp.total       10       60  4.956264 6.744598   $t50.Germinated [1] 6.034954  $txp.Germinated       10       60  4.831807 6.287724   $Uniformity         90         10 uniformity    7.537690   4.831807   2.705882   $TMGR [1] 5.912194  $AUC [1] 1108.976  $MGT [1] 6.632252  $Skewness [1] 1.098973  $msg [1] \"#1. success \"  $isConv [1] TRUE  $model Nonlinear regression model   model: csgp ~ FourPHF_fixa_fixy0(x = intervals, a = max(csgp), bta,     c)    data: data   bta     c  2.291 6.035   residual sum-of-squares: 31.31  Algorithm: multifit/levenberg-marquardt, (scaling: levenberg, solver: qr)  Number of iterations to convergence: 9  Achieved convergence tolerance: 6.04e-14  attr(,\"class\") [1] \"FourPHFfit\" \"list\" x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x) total.seeds = 50  # From partial germination counts #---------------------------------------------------------------------------- fit1 <- FourPHFfit(germ.counts = x, intervals = int,                    total.seeds = 50, tmax = 20)  # From cumulative germination counts #---------------------------------------------------------------------------- fit2 <- FourPHFfit(germ.counts = y, intervals = int,                    total.seeds = 50, tmax = 20, partial = FALSE)  # Default plots plot(fit1) Warning in geom_segment(aes(x = UfmMin, xend = UfmMax, y = ypos2, yend = ypos2), :  [1m [22mAll aesthetics have length 1, but the data has 14 rows.  [36mℹ [39m Please consider using `annotate()` or provide this layer with data containing   a single row. Warning in geom_segment(aes(x = UfmMax, xend = UfmMin, y = ypos2, yend = ypos2), :  [1m [22mAll aesthetics have length 1, but the data has 14 rows.  [36mℹ [39m Please consider using `annotate()` or provide this layer with data containing   a single row. plot(fit2) Warning in geom_segment(aes(x = UfmMin, xend = UfmMax, y = ypos2, yend = ypos2), :  [1m [22mAll aesthetics have length 1, but the data has 14 rows.  [36mℹ [39m Please consider using `annotate()` or provide this layer with data containing   a single row.  [1m [22mAll aesthetics have length 1, but the data has 14 rows.  [36mℹ [39m Please consider using `annotate()` or provide this layer with data containing   a single row. # No labels plot(fit1, plotlabels = FALSE) Warning in geom_segment(aes(x = UfmMin, xend = UfmMax, y = ypos2, yend = ypos2), :  [1m [22mAll aesthetics have length 1, but the data has 14 rows.  [36mℹ [39m Please consider using `annotate()` or provide this layer with data containing   a single row.  [1m [22mAll aesthetics have length 1, but the data has 14 rows.  [36mℹ [39m Please consider using `annotate()` or provide this layer with data containing   a single row. plot(fit2, plotlabels = FALSE) Warning in geom_segment(aes(x = UfmMin, xend = UfmMax, y = ypos2, yend = ypos2), :  [1m [22mAll aesthetics have length 1, but the data has 14 rows.  [36mℹ [39m Please consider using `annotate()` or provide this layer with data containing   a single row.  [1m [22mAll aesthetics have length 1, but the data has 14 rows.  [36mℹ [39m Please consider using `annotate()` or provide this layer with data containing   a single row. # Only the FPHF curve plot(fit1, rog = FALSE, t50.total = FALSE, t50.germ = FALSE,      tmgr = FALSE, mgt = FALSE, uniformity = FALSE) plot(fit2, rog = FALSE, t50.total = FALSE, t50.germ = FALSE,      tmgr = FALSE, mgt = FALSE, uniformity = FALSE) # Without y axis limits adjustment plot(fit1, limits = FALSE) Warning in geom_segment(aes(x = UfmMin, xend = UfmMax, y = ypos2, yend = ypos2), :  [1m [22mAll aesthetics have length 1, but the data has 14 rows.  [36mℹ [39m Please consider using `annotate()` or provide this layer with data containing   a single row.  [1m [22mAll aesthetics have length 1, but the data has 14 rows.  [36mℹ [39m Please consider using `annotate()` or provide this layer with data containing   a single row. plot(fit2, limits = FALSE) Warning in geom_segment(aes(x = UfmMin, xend = UfmMax, y = ypos2, yend = ypos2), :  [1m [22mAll aesthetics have length 1, but the data has 14 rows.  [36mℹ [39m Please consider using `annotate()` or provide this layer with data containing   a single row.  [1m [22mAll aesthetics have length 1, but the data has 14 rows.  [36mℹ [39m Please consider using `annotate()` or provide this layer with data containing   a single row."},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"wrapper-functions","dir":"Articles","previous_headings":"","what":"Wrapper functions","title":"The `germinationmetrics` Package: A Brief Introduction","text":"Wrapper functions germination.indices() FourPHFfit.bulk() available package computing results multiple samples batch data frame germination counts recorded specific time intervals.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"germination-indices","dir":"Articles","previous_headings":"Wrapper functions","what":"germination.indices()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"wrapper function can used compute several germination indices simultaneously multiple samples batch.","code":"data(gcdata)  counts.per.intervals <- c(\"Day01\", \"Day02\", \"Day03\", \"Day04\", \"Day05\",                           \"Day06\", \"Day07\", \"Day08\", \"Day09\", \"Day10\",                           \"Day11\", \"Day12\", \"Day13\", \"Day14\") germination.indices(gcdata, total.seeds.col = \"Total Seeds\",                     counts.intervals.cols = counts.per.intervals,                     intervals = 1:14, partial = TRUE, max.int = 5) Genotype Rep Day01 Day02 Day03 Day04 Day05 Day06 Day07 Day08 Day09 Day10 1        G1   1     0     0     0     0     4    17    10     7     1     0 2        G2   1     0     0     0     1     3    15    13     6     2     1 3        G3   1     0     0     0     2     3    18     9     8     2     1 4        G4   1     0     0     0     0     4    19    12     6     2     1 5        G5   1     0     0     0     0     5    20    12     8     1     0 6        G1   2     0     0     0     0     3    21    11     7     1     1 7        G2   2     0     0     0     0     4    18    11     7     1     0 8        G3   2     0     0     0     1     3    14    12     6     2     1 9        G4   2     0     0     0     1     3    19    10     8     1     1 10       G5   2     0     0     0     0     4    18    13     6     2     1 11       G1   3     0     0     0     0     5    21    11     8     1     0 12       G2   3     0     0     0     0     3    20    10     7     1     1 13       G3   3     0     0     0     0     4    19    12     8     1     1 14       G4   3     0     0     0     0     3    21    11     6     1     0 15       G5   3     0     0     0     0     4    17    10     8     1     1    Day11 Day12 Day13 Day14 Total Seeds GermPercent PeakGermPercent 1      1     0     0     0          50    80.00000        34.00000 2      0     1     0     0          51    82.35294        29.41176 3      1     1     0     0          48    93.75000        37.50000 4      1     1     0     0          51    90.19608        37.25490 5      0     1     1     0          50    96.00000        40.00000 6      1     1     0     0          49    93.87755        42.85714 7      1     0     0     0          48    87.50000        37.50000 8      0     1     0     0          47    85.10638        29.78723 9      1     1     0     0          52    86.53846        36.53846 10     0     1     0     0          50    90.00000        36.00000 11     0     1     1     0          51    94.11765        41.17647 12     1     1     0     0          51    86.27451        39.21569 13     0     1     1     0          49    95.91837        38.77551 14     1     1     0     0          48    91.66667        43.75000 15     1     0     0     0          48    87.50000        35.41667    FirstGermTime LastGermTime PeakGermTime TimeSpreadGerm t50_Coolbear 1              5           11            6              6     5.970588 2              4           12            6              8     6.192308 3              4           12            6              8     6.333333 4              5           12            6              7     6.041667 5              5           13            6              8     5.975000 6              5           12            6              7     5.976190 7              5           11            6              6     5.972222 8              4           12            6              8     6.208333 9              4           12            6              8     6.310345 10             5           12            6              7     6.076923 11             5           13            6              8     5.928571 12             5           12            6              7     5.975000 13             5           13            6              8     6.083333 14             5           12            6              7     5.928571 15             5           11            6              6     6.050000    t50_Farooq MeanGermTime VarGermTime SEGermTime CVGermTime MeanGermRate 1    5.941176     6.700000    1.446154  0.1901416  0.1794868    0.1492537 2    6.153846     6.857143    2.027875  0.2197333  0.2076717    0.1458333 3    5.972222     6.866667    2.572727  0.2391061  0.2335882    0.1456311 4    6.225806     6.891304    2.187923  0.2180907  0.2146419    0.1451104 5    5.950000     6.812500    2.368351  0.2221275  0.2259002    0.1467890 6    5.952381     6.869565    2.071498  0.2122088  0.2095140    0.1455696 7    5.944444     6.690476    1.389663  0.1818989  0.1761967    0.1494662 8    6.166667     6.875000    2.112179  0.2297923  0.2113940    0.1454545 9    5.973684     6.866667    2.300000  0.2260777  0.2208604    0.1456311 10   6.038462     6.822222    1.831313  0.2017321  0.1983606    0.1465798 11   5.904762     6.791667    2.381206  0.2227295  0.2272072    0.1472393 12   5.950000     6.886364    2.149577  0.2210295  0.2129053    0.1452145 13   6.041667     6.936170    2.539315  0.2324392  0.2297410    0.1441718 14   5.904762     6.772727    1.900634  0.2078370  0.2035568    0.1476510 15   6.259259     6.809524    1.670151  0.1994129  0.1897847    0.1468531     VarGermRate  SEGermRate      CVG GermRateRecip_Coolbear 1  0.0007176543 0.004235724 14.92537              0.1674877 2  0.0009172090 0.004673148 14.58333              0.1614907 3  0.0011572039 0.005071059 14.56311              0.1578947 4  0.0009701218 0.004592342 14.51104              0.1655172 5  0.0010995627 0.004786184 14.67890              0.1673640 6  0.0009301809 0.004496813 14.55696              0.1673307 7  0.0006935558 0.004063648 14.94662              0.1674419 8  0.0009454531 0.004861721 14.54545              0.1610738 9  0.0010345321 0.004794747 14.56311              0.1584699 10 0.0008453940 0.004334343 14.65798              0.1645570 11 0.0011191581 0.004828643 14.72393              0.1686747 12 0.0009558577 0.004660905 14.52145              0.1673640 13 0.0010970785 0.004831366 14.41718              0.1643836 14 0.0009033254 0.004531018 14.76510              0.1686747 15 0.0007767634 0.004300508 14.68531              0.1652893    GermRateRecip_Farooq GermSpeed_Count GermSpeed_Percent 1             0.1683168        6.138925          12.27785 2             0.1625000        6.362698          12.47588 3             0.1674419        6.882179          14.33787 4             0.1606218        6.927417          13.58317 5             0.1680672        7.318987          14.63797 6             0.1680000        6.931782          14.14649 7             0.1682243        6.448449          13.43427 8             0.1621622        6.053175          12.87909 9             0.1674009        6.830592          13.13575 10            0.1656051        6.812698          13.62540 11            0.1693548        7.342796          14.39764 12            0.1680672        6.622258          12.98482 13            0.1655172        7.052320          14.39249 14            0.1693548        6.706782          13.97246 15            0.1597633        6.363925          13.25818    GermSpeedAccumulated_Count GermSpeedAccumulated_Percent 1                    34.61567                     69.23134 2                    35.54058                     69.68741 3                    38.29725                     79.78594 4                    38.68453                     75.85202 5                    41.00786                     82.01571 6                    38.77620                     79.13509 7                    36.38546                     75.80304 8                    33.77079                     71.85275 9                    38.11511                     73.29829 10                   38.19527                     76.39054 11                   41.17452                     80.73436 12                   37.00640                     72.56158 13                   39.29399                     80.19182 14                   37.69490                     78.53103 15                   35.69697                     74.36868    GermSpeedCorrected_Normal GermSpeedCorrected_Accumulated WeightGermPercent 1                  0.1534731                      0.8653917          47.42857 2                  0.1514928                      0.8462043          47.89916 3                  0.1529373                      0.8510501          54.46429 4                  0.1505960                      0.8409680          52.24090 5                  0.1524789                      0.8543303          56.14286 6                  0.1506909                      0.8429608          54.51895 7                  0.1535345                      0.8663205          51.93452 8                  0.1513294                      0.8442698          49.39210 9                  0.1517909                      0.8470024          50.27473 10                 0.1513933                      0.8487837          52.57143 11                 0.1529749                      0.8578026          55.18207 12                 0.1505059                      0.8410547          50.00000 13                 0.1500494                      0.8360424          55.24781 14                 0.1524269                      0.8567022          53.86905 15                 0.1515220                      0.8499278          51.19048    MeanGermPercent MeanGermNumber TimsonsIndex TimsonsIndex_Labouriau 1         5.714286       2.857143     8.000000                   1.00 2         5.882353       3.000000     9.803922                   1.25 3         6.696429       3.214286    14.583333                   1.40 4         6.442577       3.285714     7.843137                   1.00 5         6.857143       3.428571    10.000000                   1.00 6         6.705539       3.285714     6.122449                   1.00 7         6.250000       3.000000     8.333333                   1.00 8         6.079027       2.857143    10.638298                   1.25 9         6.181319       3.214286     9.615385                   1.25 10        6.428571       3.214286     8.000000                   1.00 11        6.722689       3.428571     9.803922                   1.00 12        6.162465       3.142857     5.882353                   1.00 13        6.851312       3.357143     8.163265                   1.00 14        6.547619       3.142857     6.250000                   1.00 15        6.250000       3.000000     8.333333                   1.00    TimsonsIndex_KhanUngar GermRateGeorge GermIndex GermIndex_mod 1               0.5714286              4  5.840000      7.300000 2               0.7002801              5  5.882353      7.142857 3               1.0416667              7  6.687500      7.133333 4               0.5602241              4  6.411765      7.108696 5               0.7142857              5  6.900000      7.187500 6               0.4373178              3  6.693878      7.130435 7               0.5952381              4  6.395833      7.309524 8               0.7598784              5  6.063830      7.125000 9               0.6868132              5  6.173077      7.133333 10              0.5714286              4  6.460000      7.177778 11              0.7002801              5  6.784314      7.208333 12              0.4201681              3  6.137255      7.113636 13              0.5830904              4  6.775510      7.063830 14              0.4464286              3  6.625000      7.227273 15              0.5952381              4  6.291667      7.190476    EmergenceRateIndex_SG EmergenceRateIndex_SG_mod 1                    292                  7.300000 2                    300                  7.142857 3                    321                  7.133333 4                    327                  7.108696 5                    345                  7.187500 6                    328                  7.130435 7                    307                  7.309524 8                    285                  7.125000 9                    321                  7.133333 10                   323                  7.177778 11                   346                  7.208333 12                   313                  7.113636 13                   332                  7.063830 14                   318                  7.227273 15                   302                  7.190476    EmergenceRateIndex_BilbroWanjura EmergenceRateIndex_Fakorede PeakValue 1                          5.970149                    8.375000  9.500000 2                          6.125000                    8.326531  9.313725 3                          6.553398                    7.324444 10.416667 4                          6.675079                    7.640359 10.049020 5                          7.045872                    7.096354 11.250000 6                          6.696203                    7.317580 10.714286 7                          6.277580                    7.646259 10.416667 8                          5.818182                    8.078125  9.574468 9                          6.553398                    7.934815  9.855769 10                         6.596091                    7.580247 10.250000 11                         7.067485                    7.216146 11.029412 12                         6.389439                    7.981921  9.803922 13                         6.776074                    7.231326 10.969388 14                         6.496644                    7.388430 10.677083 15                         6.167832                    7.782313 10.156250    GermValue_Czabator GermValue_DP GermValue_Czabator_mod GermValue_DP_mod 1            54.28571     57.93890               54.28571         39.56076 2            54.78662     52.58713               54.78662         40.99260 3            69.75446     68.62289               69.75446         53.42809 4            64.74158     70.43331               64.74158         48.86825 5            77.14286     80.16914               77.14286         56.23935 6            71.84506     76.51983               71.84506         53.06435 7            65.10417     69.41325               65.10417         47.37690 8            58.20345     56.00669               58.20345         43.67948 9            60.92165     58.13477               60.92165         45.30801 10           65.89286     70.91875               65.89286         49.10820 11           74.14731     77.39782               74.14731         54.27520 12           60.41632     64.44988               60.41632         44.71582 13           75.15470     78.16335               75.15470         54.94192 14           69.90947     74.40140               69.90947         51.41913 15           63.47656     67.62031               63.47656         46.48043       CUGerm GermSynchrony GermUncertainty 1  0.7092199     0.2666667        2.062987 2  0.5051546     0.2346109        2.321514 3  0.3975265     0.2242424        2.462012 4  0.4672113     0.2502415        2.279215 5  0.4312184     0.2606383        2.146051 6  0.4934701     0.2792271        2.160545 7  0.7371500     0.2729384        2.040796 8  0.4855842     0.2256410        2.357249 9  0.4446640     0.2494949        2.321080 10 0.5584666     0.2555556        2.187983 11 0.4288905     0.2686170        2.128670 12 0.4760266     0.2737844        2.185245 13 0.4023679     0.2506938        2.241181 14 0.5383760     0.2991543        2.037680 15 0.6133519     0.2497096        2.185028"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"fourphffit-bulk","dir":"Articles","previous_headings":"Wrapper functions","what":"FourPHFfit.bulk()","title":"The `germinationmetrics` Package: A Brief Introduction","text":"wrapper function can used fit four-parameter hill function multiple samples batch. Multiple fitted curves generated batch can also plotted.","code":"data(gcdata)  counts.per.intervals <- c(\"Day01\", \"Day02\", \"Day03\", \"Day04\", \"Day05\",                           \"Day06\", \"Day07\", \"Day08\", \"Day09\", \"Day10\",                           \"Day11\", \"Day12\", \"Day13\", \"Day14\")  FourPHFfit.bulk(gcdata, total.seeds.col = \"Total Seeds\",                     counts.intervals.cols = counts.per.intervals,                     intervals = 1:14, partial = TRUE,                     fix.y0 = TRUE, fix.a = TRUE, xp = c(10, 60),                     tmax = 20, tries = 3, umax = 90, umin = 10) Genotype Rep Day01 Day02 Day03 Day04 Day05 Day06 Day07 Day08 Day09 Day10 1        G1   1     0     0     0     0     4    17    10     7     1     0 2        G2   1     0     0     0     1     3    15    13     6     2     1 3        G3   1     0     0     0     2     3    18     9     8     2     1 4        G4   1     0     0     0     0     4    19    12     6     2     1 5        G5   1     0     0     0     0     5    20    12     8     1     0 6        G1   2     0     0     0     0     3    21    11     7     1     1 7        G2   2     0     0     0     0     4    18    11     7     1     0 8        G3   2     0     0     0     1     3    14    12     6     2     1 9        G4   2     0     0     0     1     3    19    10     8     1     1 10       G5   2     0     0     0     0     4    18    13     6     2     1 11       G1   3     0     0     0     0     5    21    11     8     1     0 12       G2   3     0     0     0     0     3    20    10     7     1     1 13       G3   3     0     0     0     0     4    19    12     8     1     1 14       G4   3     0     0     0     0     3    21    11     6     1     0 15       G5   3     0     0     0     0     4    17    10     8     1     1    Day11 Day12 Day13 Day14 Total Seeds        a         b        c y0 lag 1      1     0     0     0          50 80.00000  9.881937 6.034954  0   0 2      0     1     0     0          51 82.35294  9.227666 6.175193  0   0 3      1     1     0     0          48 93.75000  7.793051 6.138110  0   0 4      1     1     0     0          51 90.19608  8.925655 6.125173  0   0 5      0     1     1     0          50 96.00000  9.419181 6.049642  0   0 6      1     1     0     0          49 93.87755  9.450149 6.097415  0   0 7      1     0     0     0          48 87.50000 10.172459 6.029851  0   0 8      0     1     0     0          47 85.10638  8.940696 6.189774  0   0 9      1     1     0     0          52 86.53846  8.617391 6.125122  0   0 10     0     1     0     0          50 90.00000  9.608844 6.109504  0   0 11     0     1     1     0          51 94.11765  9.400212 6.018760  0   0 12     1     1     0     0          51 86.27451  9.162526 6.108452  0   0 13     0     1     1     0          49 95.91837  8.995210 6.149012  0   0 14     1     1     0     0          48 91.66667 10.391845 6.015910  0   0 15     1     0     0     0          48 87.50000  9.136744 6.121579  0   0      Dlag50 t50.total t10.total t60.total t50.Germinated t10.Germinated 1  6.034954  6.355121  4.956264  6.744598       6.034954       4.831807 2  6.175193  6.473490  4.983236  6.872603       6.175193       4.866755 3  6.138110  6.244191  4.673022  6.608438       6.138110       4.630062 4  6.125173  6.276794  4.850875  6.614968       6.125173       4.788597 5  6.049642  6.103433  4.814125  6.386789       6.049642       4.790946 6  6.097415  6.182279  4.868632  6.477599       6.097415       4.832471 7  6.029851  6.202812  4.930422  6.510495       6.029851       4.858476 8  6.189774  6.439510  4.940057  6.823299       6.189774       4.841105 9  6.125122  6.352172  4.836658  6.733276       6.125122       4.746573 10 6.109504  6.253043  4.920629  6.566506       6.109504       4.860681 11 6.018760  6.099435  4.798627  6.391291       6.018760       4.764246 12 6.108452  6.326184  4.893596  6.684526       6.108452       4.806013 13 6.149012  6.207501  4.841308  6.509954       6.149012       4.816393 14 6.015910  6.122389  4.915140  6.397491       6.015910       4.869398 15 6.121579  6.317392  4.892502  6.667247       6.121579       4.813083    t60.Germinated Uniformity_90 Uniformity_10 Uniformity     TMGR      AUC 1        6.287724      7.537690      4.831807   2.705882 5.912194 1108.976 2        6.452582      7.835407      4.866755   2.968652 6.031282 1128.559 3        6.465924      8.137342      4.630062   3.507280 5.938180 1283.693 4        6.409838      7.834810      4.788597   3.046213 5.972686 1239.887 5        6.315746      7.639028      4.790946   2.848083 5.914289 1328.328 6        6.364722      7.693469      4.832471   2.860997 5.961879 1294.463 7        6.275050      7.483643      4.858476   2.625166 5.914057 1213.908 8        6.476945      7.914163      4.841105   3.073058 6.036192 1164.346 9        6.420208      7.904041      4.746573   3.157468 5.961631 1188.793 10       6.372823      7.679177      4.860681   2.818496 5.978115 1240.227 11       6.284051      7.603611      4.764246   2.839365 5.883557 1305.200 12       6.384836      7.763854      4.806013   2.957841 5.964080 1188.021 13       6.432524      7.850345      4.816393   3.033952 5.998270 1316.407 14       6.255276      7.432372      4.869398   2.562974 5.905180 1273.385 15       6.399357      7.785806      4.813083   2.972723 5.976087 1203.664         MGT Skewness          msg    sigma       finTol    logLik      AIC 1  6.632252 1.098973 #1. success  1.615220 6.039613e-14 -25.49868 56.99736 2  6.784407 1.098655 #1. success  1.115372 6.217249e-14 -20.31471 46.62943 3  6.772742 1.103392 #1. success  2.432704 1.790568e-12 -31.23213 68.46426 4  6.739666 1.100323 #1. success  2.396582 8.526513e-14 -31.02269 68.04538 5  6.654981 1.100062 #1. success  2.399662 1.094236e-12 -31.04067 68.08135 6  6.702473 1.099232 #1. success  3.034962 1.392664e-12 -34.32887 74.65774 7  6.622417 1.098272 #1. success  1.663019 7.105427e-14 -25.90697 57.81395 8  6.804000 1.099232 #1. success  1.120704 4.302336e-12 -20.38149 46.76298 9  6.745241 1.101242 #1. success  2.429960 8.810730e-13 -31.21633 68.43266 10 6.711900 1.098600 #1. success  1.686656 8.199663e-12 -26.10456 58.20911 11 6.624248 1.100600 #1. success  2.628113 2.984279e-13 -32.31381 70.62762 12 6.718639 1.099892 #1. success  2.878146 1.008971e-12 -33.58613 73.17227 13 6.762274 1.099733 #1. success  2.604588 3.126388e-13 -32.18793 70.37586 14 6.604967 1.097916 #1. success  2.764756 9.379164e-13 -33.02342 72.04684 15 6.732266 1.099760 #1. success  1.954008 7.602807e-13 -28.16444 62.32888         BIC  deviance df.residual nobs 1  58.91453  31.30723          12   14 2  48.54660  14.92865          12   14 3  70.38143  71.01658          12   14 4  69.96256  68.92324          12   14 5  69.99852  69.10052          12   14 6  76.57491 110.53195          12   14 7  59.73112  33.18760          12   14 8  48.68015  15.07174          12   14 9  70.34984  70.85647          12   14 10 60.12629  34.13771          12   14 11 72.54479  82.88372          12   14 12 75.08944  99.40469          12   14 13 72.29303  81.40654          12   14 14 73.96401  91.72652          12   14 15 64.24606  45.81777          12   14 data(gcdata)  counts.per.intervals <- c(\"Day01\", \"Day02\", \"Day03\", \"Day04\", \"Day05\",                           \"Day06\", \"Day07\", \"Day08\", \"Day09\", \"Day10\",                           \"Day11\", \"Day12\", \"Day13\", \"Day14\")  fits <- FourPHFfit.bulk(gcdata, total.seeds.col = \"Total Seeds\",                     counts.intervals.cols = counts.per.intervals,                     intervals = 1:14, partial = TRUE,                     fix.y0 = TRUE, fix.a = TRUE, xp = c(10, 60),                     tmax = 20, tries = 3, umax = 90, umin = 10)  # Plot FPHF curves plot(fits, group.col = \"Genotype\") # Plot ROG curves plot(fits, rog = TRUE, group.col = \"Genotype\") # Plot FPHF curves with points plot(fits, group.col = \"Genotype\", show.points = TRUE) # Plot FPHF curves with annotations plot(fits, group.col = \"Genotype\", annotate = \"t50.total\") plot(fits, group.col = \"Genotype\", annotate = \"t50.germ\") plot(fits, group.col = \"Genotype\", annotate = \"tmgr\") plot(fits, group.col = \"Genotype\", annotate = \"mgt\") plot(fits, group.col = \"Genotype\", annotate = \"uniformity\") # Plot ROG curves with annotations plot(fits, rog = TRUE, group.col = \"Genotype\", annotate = \"t50.total\") plot(fits, rog = TRUE, group.col = \"Genotype\", annotate = \"t50.germ\") plot(fits, rog = TRUE, group.col = \"Genotype\", annotate = \"tmgr\") plot(fits, rog = TRUE, group.col = \"Genotype\", annotate = \"mgt\") plot(fits, rog = TRUE, group.col = \"Genotype\", annotate = \"uniformity\") # Change colour of curves using ggplot2 options library(ggplot2) curvesplot <- plot(fits, group.col = \"Genotype\")  # 'Dark2' palette from RColorBrewer curvesplot + scale_colour_brewer(palette = \"Dark2\") # Manual colours curvesplot +   scale_colour_manual(values = c(\"Coral\", \"Brown\", \"Blue\",                                  \"Aquamarine\", \"Red\"))"},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"citing-germinationmetrics","dir":"Articles","previous_headings":"","what":"Citing germinationmetrics","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"To cite the R package 'germinationmetrics' in publications use:    Aravind, J., Vimala Devi, S., Radhamani, J., Jacob, S. R., and   Kalyani Srinivasan ().  germinationmetrics: Seed Germination Indices   and Curve Fitting. R package version 0.1.8.9000,   https://github.com/aravind-j/germinationmetricshttps://cran.r-project.org/package=germinationmetrics.  A BibTeX entry for LaTeX users is    @Manual{,     title = {germinationmetrics: Seed Germination Indices and Curve Fitting},     author = {J. Aravind and S. {Vimala Devi} and J. Radhamani and Sherry Rachel Jacob and {Kalyani Srinivasan}},     note = {R package version 0.1.8.9000 https://aravind-j.github.io/germinationmetrics/ https://CRAN.R-project.org/package=germinationmetrics},   }  This free and open-source software implements academic research by the authors and co-workers. If you use it, please support the project by citing the package."},{"path":"https://aravind-j.github.io/germinationmetrics/articles/Introduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"The `germinationmetrics` Package: A Brief Introduction","text":"","code":"sessionInfo() R version 4.5.1 (2025-06-13) Platform: aarch64-apple-darwin20 Running under: macOS Sequoia 15.5  Matrix products: default BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1  locale: [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8  time zone: UTC tzcode source: internal  attached base packages: [1] stats     graphics  grDevices utils     datasets  methods   base       other attached packages: [1] germinationmetrics_0.1.8.9000 ggplot2_3.5.2                  loaded via a namespace (and not attached):  [1] sass_0.4.10        generics_0.1.4     tidyr_1.3.1        bitops_1.0-9        [5] stringi_1.8.7      lattice_0.22-7     digest_0.6.37      magrittr_2.0.3      [9] evaluate_1.0.4     grid_4.5.1         RColorBrewer_1.1-3 fastmap_1.2.0      [13] plyr_1.8.9         jsonlite_2.0.0     Matrix_1.7-3       ggrepel_0.9.6      [17] backports_1.5.0    httr_1.4.7         pander_0.6.6       purrr_1.1.0        [21] scales_1.4.0       XML_3.99-0.18      textshaping_1.0.1  jquerylib_0.1.4    [25] Rdpack_2.6.4       cli_3.6.5          rlang_1.1.6        rbibutils_2.3      [29] withr_3.0.2        cachem_1.1.0       yaml_2.3.10        tools_4.5.1        [33] reshape2_1.4.4     dplyr_1.1.4        mathjaxr_1.8-0     curl_6.4.0         [37] broom_1.0.9        vctrs_0.6.5        R6_2.6.1           lifecycle_1.0.4    [41] gslnls_1.4.1       stringr_1.5.1      fs_1.6.6           htmlwidgets_1.6.4  [45] ragg_1.4.0         pkgconfig_2.0.3    desc_1.4.3         pkgdown_2.1.3      [49] pillar_1.11.0      bslib_0.9.0        gtable_0.3.6       data.table_1.17.8  [53] glue_1.8.0         Rcpp_1.1.0         systemfonts_1.2.3  xfun_0.52          [57] tibble_3.3.0       tidyselect_1.2.1   knitr_1.50         farver_2.1.2       [61] htmltools_0.5.8.1  labeling_0.4.3     rmarkdown_2.29     compiler_4.5.1     [65] RCurl_1.98-1.17"},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"J. Aravind. Author, maintainer. S. Vimala Devi. Author. J. Radhamani. Author. Sherry Rachel Jacob. Author. Kalyani Srinivasan. Author. ICAR-NBGPR. Copyright holder.           www.nbpgr.ernet.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aravind, J., Vimala Devi, S., Radhamani, J., Jacob, S. R., Kalyani Srinivasan ().  germinationmetrics: Seed Germination Indices Curve Fitting. R package version 0.1.8.9000, https://github.com/aravind-j/germinationmetricshttps://cran.r-project.org/package=germinationmetrics.","code":"@Manual{,   title = {germinationmetrics: Seed Germination Indices and Curve Fitting},   author = {J. Aravind and S. {Vimala Devi} and J. Radhamani and Sherry Rachel Jacob and {Kalyani Srinivasan}},   note = {R package version 0.1.8.9000 https://aravind-j.github.io/germinationmetrics/ https://CRAN.R-project.org/package=germinationmetrics}, }"},{"path":[]},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/index.html","id":"aravind-j-vimala-devi-s-radhamani-j-jacob-s-r-and-kalyani-srinivasan","dir":"","previous_headings":"germinationmetrics: Seed Germination Indices and Curve Fitting","what":"Aravind, J., Vimala Devi, S., Radhamani, J., Jacob, S. R., and Kalyani Srinivasan","title":"Seed Germination Indices and Curve Fitting","text":"ICAR-National Bureau Plant Genetic Resources, New Delhi","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Seed Germination Indices and Curve Fitting","text":"Provides functions compute various germination indices germinability, median germination time, mean germination time, mean germination rate, speed germination, Timson’s index, germination value, coefficient uniformity germination, uncertainty germination process, synchrony germination etc. germination count data. Includes functions fitting cumulative seed germination curves using four-parameter hill function computation associated parameters. See vignette , including full list citations methods implemented.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Seed Germination Indices and Curve Fitting","text":"package can installed CRAN follows: development version can installed github follows:","code":"if (!require('devtools')) install.packages('devtools') install.packages('germinationmetrics', dependencies=TRUE) devtools::install_github(\"aravind-j/germinationmetrics\")"},{"path":"https://aravind-j.github.io/germinationmetrics/index.html","id":"detailed-tutorial","dir":"","previous_headings":"","what":"Detailed tutorial","title":"Seed Germination Indices and Curve Fitting","text":"detailed tutorial (vignette) used package type: vignette latest version also available online.","code":"browseVignettes(package = 'germinationmetrics')"},{"path":"https://aravind-j.github.io/germinationmetrics/index.html","id":"whats-new","dir":"","previous_headings":"","what":"What’s new","title":"Seed Germination Indices and Curve Fitting","text":"know whats new version type:","code":"news(package='germinationmetrics')"},{"path":"https://aravind-j.github.io/germinationmetrics/index.html","id":"links","dir":"","previous_headings":"","what":"Links","title":"Seed Germination Indices and Curve Fitting","text":"CRAN page Github page Documentation website Zenodo DOI","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/index.html","id":"citing-germinationmetrics","dir":"","previous_headings":"","what":"Citing germinationmetrics","title":"Seed Germination Indices and Curve Fitting","text":"cite methods package use:","code":"citation(\"germinationmetrics\") To cite the R package 'germinationmetrics' in publications use:    Aravind, J., Vimala Devi, S., Radhamani, J., Jacob, S. R., and Kalyani Srinivasan ().  germinationmetrics: Seed Germination Indices and   Curve Fitting. R package version 0.1.8.9000,   https://github.com/aravind-j/germinationmetricshttps://cran.r-project.org/package=germinationmetrics.  A BibTeX entry for LaTeX users is    @Manual{,     title = {germinationmetrics: Seed Germination Indices and Curve Fitting},     author = {J. Aravind and S. {Vimala Devi} and J. Radhamani and Sherry Rachel Jacob and {Kalyani Srinivasan}},     note = {R package version 0.1.8.9000 https://aravind-j.github.io/germinationmetrics/ https://CRAN.R-project.org/package=germinationmetrics},   }  This free and open-source software implements academic research by the authors and co-workers. If you use it, please support the project by citing the package."},{"path":"https://aravind-j.github.io/germinationmetrics/reference/CUGerm.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficient of uniformity of germination — CUGerm","title":"Coefficient of uniformity of germination — CUGerm","text":"Compute Coefficient uniformity germination (CUG).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/CUGerm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficient of uniformity of germination — CUGerm","text":"","code":"CUGerm(germ.counts, intervals, partial = TRUE)"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/CUGerm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficient of uniformity of germination — CUGerm","text":"germ.counts Germination counts time interval. Can partial cumulative specified argument partial. intervals time intervals. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/CUGerm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficient of uniformity of germination — CUGerm","text":"value coefficient uniformity germination   \\(\\mathrm{time^{-2}}\\).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/CUGerm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coefficient of uniformity of germination — CUGerm","text":"CUG computed follows (Heydecker 1972; Bewley Black 1994) . \\[CUG = \\frac{\\sum_{=1}^{k}N_{}}{\\sum_{=1}^{k}(\\overline{T}-T_{})^{2}N_{}}\\] , \\(\\overline{T}\\) mean germination time, \\(T_{}\\) time start experiment \\(\\)th interval, \\(N_{}\\) number seeds germinated \\(\\)th time interval (accumulated number, number corresponding \\(\\)th interval), \\(k\\) total number time intervals.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/CUGerm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Coefficient of uniformity of germination — CUGerm","text":"Bewley JD, Black M (1994). Physiology Development Germination. Plenum Publishing Corporation, New York, USA. ISBN 0-306-44748-7, tex.ids= bewley_ seeds:_1994, bewley_ seeds:_1994-1, bewley_ seeds:_1994-2 googlebooksid: W6EbrewcpDwC. Heydecker W (1972). Seed Ecology. Proceedings Nineteenth Easter School Agricultural Science, University Nottingham, 1972. Pennsylvania State University Press, University Park, USA.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/reference/CUGerm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coefficient of uniformity of germination — CUGerm","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- CUGerm(germ.counts = x, intervals = int) #> [1] 0.7092199  # From cumulative germination counts #---------------------------------------------------------------------------- CUGerm(germ.counts = y, intervals = int, partial = FALSE) #> [1] 0.7092199"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/EmergenceRateIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Emergence Rate Index or Germination Rate Index — EmergenceRateIndex","title":"Emergence Rate Index or Germination Rate Index — EmergenceRateIndex","text":"Compute Emergence rate index Germination rate index according Shmueli Goldberg (1971)  modification de Santana Ranal (2004)  (Ranal de Santana 2006) ; Bilbro Wanjura (1982) ; Fakorede Ayoola (1980) , Fakorede Ojo (1981) , Fakorede Agbana (1983) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/EmergenceRateIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emergence Rate Index or Germination Rate Index — EmergenceRateIndex","text":"","code":"EmergenceRateIndex(   germ.counts,   intervals,   partial = TRUE,   total.seeds = NULL,   method = c(\"shmueligoldberg\", \"sgsantanaranal\", \"bilbrowanjura\", \"fakorede\") )"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/EmergenceRateIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emergence Rate Index or Germination Rate Index — EmergenceRateIndex","text":"germ.counts Germination counts time interval. Can partial cumulative specified argument partial. intervals time intervals. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE. total.seeds Total number seeds. method method used. Either \"shmueligoldberg\", \"sgsantanaranal\", \"bilbrowanjura\" \"fakorede\". Default \"shmueligoldberg\" (see Details).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/EmergenceRateIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Emergence Rate Index or Germination Rate Index — EmergenceRateIndex","text":"value Emergence rate index units according   method follows.  shmueligoldberg \\(\\mathrm{count}\\) sgsantanaranal \\(\\mathrm{\\, unit}\\) bilbrowanjura \\(\\mathrm{count} \\, time^{-1}\\) fakorede \\(time \\, \\mathrm{count}^{-1}\\)","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/EmergenceRateIndex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Emergence Rate Index or Germination Rate Index — EmergenceRateIndex","text":"Several germination indices referred Emergence   rate Index (\\(ERI\\)).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/EmergenceRateIndex.html","id":"shmueli-and-goldberg-","dir":"Reference","previous_headings":"","what":"Shmueli and Goldberg (1971)","title":"Emergence Rate Index or Germination Rate Index — EmergenceRateIndex","text":"argument method specified \"shmueligoldberg\"   \\(ERI\\) estimated follows. \\[ERI = \\sum_{=i_{0}}^{k-1}N_{}(k-)\\] , \\(N_{}\\) number seeds germinated \\(\\)th   time interval (accumulated number, number corresponding   \\(\\)th interval), \\(i_{0}\\) time interval   emergence/germination started, \\(k\\) total number time   intervals. modification suggested   de Santana Ranal (2004)    (Ranal de Santana 2006)  estimated   dividing Emergence rate index (\\(ERI\\)) total number emerged   seedlings (germinated seeds) follows argument method   specified \"sgsantanaranal\"). \\[ERI_{mod} = \\frac{\\sum_{=i_{0}}^{k-1}N_{}(k-)}{N_{g}} =   \\frac{ERI}{N_{g}}\\] , \\(N_{g}\\) total number germinated seeds end   test, \\(N_{}\\) number seeds germinated   \\(\\)th time interval (accumulated number, number   corresponding \\(\\)th interval), \\(i_{0}\\) time   interval emergence/germination started, \\(k\\) total   number time intervals.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/EmergenceRateIndex.html","id":"bilbro-and-wanjura-","dir":"Reference","previous_headings":"","what":"Bilbro and Wanjura (1982)","title":"Emergence Rate Index or Germination Rate Index — EmergenceRateIndex","text":"argument method specified \"bilbrowanjura\"   \\(ERI\\) estimated follows. \\[ERI = \\frac{\\sum_{=1}^{k}N_{}}{\\overline{T}} =   \\frac{N_{g}}{\\overline{T}}\\] , \\(N_{g}\\) total number germinated seeds end   test, \\(N_{}\\) number seeds germinated   \\(\\)th time interval (accumulated number, number   corresponding \\(\\)th interval), \\(\\overline{T}\\)   mean germination time mean emergence time.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/EmergenceRateIndex.html","id":"fakorede-and-ayoola-fakorede-and-ojo-fakorede-and-agbana-","dir":"Reference","previous_headings":"","what":"Fakorede and Ayoola (1980); Fakorede and Ojo (1981); Fakorede and Agbana (1983)","title":"Emergence Rate Index or Germination Rate Index — EmergenceRateIndex","text":"argument method specified \"fakorede\" \\(ERI\\)   estimated follows. \\[ERI = \\frac{\\overline{T}}{FGP/100}\\] , \\(\\overline{T}\\) Mean germination time \\(FGP\\)   final germination time.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/EmergenceRateIndex.html","id":"others","dir":"Reference","previous_headings":"","what":"Others","title":"Emergence Rate Index or Germination Rate Index — EmergenceRateIndex","text":"Apart , name Emergence   rate index (\\(ERI\\)) also used mathematical   expressions Speed germination   (GermSpeed)   (Allan et al. 1962; Erbach 1982) ,    Timson's index (TimsonsIndex)   (Chaudhary Ghildyal 1970) ,   George's index   (GermRateGeorge)   (Chopra Chaudhary 1980) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/EmergenceRateIndex.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Emergence Rate Index or Germination Rate Index — EmergenceRateIndex","text":"Allan RE, Vogel OA, Peterson CJ (1962). “Seedling emergence rate fall-sown wheat association plant height coleoptile length.” Agronomy Journal, 54(4), 347. Bilbro JD, Wanjura DF (1982). “Soil crusts cotton emergence relationships.” Transactions ASAE, 25(6), 1484–1487. Chaudhary TN, Ghildyal BP (1970). “Effect temperature associated levels bulk density rice seedling emergence.” Plant Soil, 33(1), 87–90. Chopra UK, Chaudhary TN (1980). “Effect soil temperature alteration soil covers seedling emergence wheat (Triticum aestivum L.) sown two dates.” Plant Soil, 57(1), 125–129. de Santana DG, Ranal MA (2004). Analise Da Germinacao: Um Enfoque Estatistico. Universidade de Brasilia, Brasilia. Erbach DC (1982). “Tillage continuous corn corn-soybean rotation.” Transactions ASAE, 25(4), 906–0911. Fakorede MAB, Agbana SB (1983). “Heterotic effects association seedling vigour mature characteristics grain yield tropical maize cultivars.” Maydica, 28, 327–338. Fakorede MAB, Ayoola AO (1980). “Relation seedling vigor selection yield improvement maize.” Maydica, 25(3), 135–147. Fakorede MAB, Ojo DK (1981). “Variability seedling vigour maize.” Experimental Agriculture, 17(2), 195–201. Ranal MA, de Santana DG (2006). “measure germination process?” Brazilian Journal Botany, 29(1), 1–11. Shmueli M, Goldberg D (1971). “Emergence, early growth, salinity five vegetable crops germinated sprinkle trickle irrigation arid zone.” HortScience, 6, 563–565.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/reference/EmergenceRateIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Emergence Rate Index or Germination Rate Index — EmergenceRateIndex","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- EmergenceRateIndex(germ.counts = x, intervals = int, total.seeds = 50) #> [1] 292 EmergenceRateIndex(germ.counts = x, intervals = int, total.seeds = 50,                    method = \"shmueligoldberg\") #> [1] 292 EmergenceRateIndex(germ.counts = x, intervals = int, total.seeds = 50,                    method = \"sgsantanaranal\") #> [1] 7.3 EmergenceRateIndex(germ.counts = x, intervals = int, total.seeds = 50,                    method = \"bilbrowanjura\") #> [1] 5.970149 EmergenceRateIndex(germ.counts = x, intervals = int, total.seeds = 50,                    method = \"fakorede\") #> [1] 8.375  # From cumulative germination counts #---------------------------------------------------------------------------- EmergenceRateIndex(germ.counts = y, intervals = int, total.seeds = 50,                    partial = FALSE) #> [1] 292 EmergenceRateIndex(germ.counts = y, intervals = int, total.seeds = 50,                    partial = FALSE,                    method = \"shmueligoldberg\") #> [1] 292 EmergenceRateIndex(germ.counts = y, intervals = int, total.seeds = 50,                    partial = FALSE,                    method = \"sgsantanaranal\") #> [1] 7.3 EmergenceRateIndex(germ.counts = y, intervals = int, total.seeds = 50,                    partial = FALSE,                    method = \"bilbrowanjura\") #> [1] 5.970149 EmergenceRateIndex(germ.counts = y, intervals = int, total.seeds = 50,                    partial = FALSE,                    method = \"fakorede\") #> [1] 8.375"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FirstGermTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Time for first, last and peak germination — FirstGermTime","title":"Time for first, last and peak germination — FirstGermTime","text":"Compute following metrics: FirstGermTime Time first germination Germination time lag (\\(t_{0}\\)) (Edwards 1932; Czabator 1962; Goloff Bazzaz 1975; Labouriau 1983; Ranal 1999; Quintanilla et al. 2000) . LastGermTime Time last germination (\\(t_{g}\\)) (Edwards 1932; Labouriau 1983; Ranal de Santana 2006) . TimeSpreadGerm Time spread germination (Al-Mudaris 1998; Kader 2005)  Germination distribution (Schrader Graves 2000) . PeakGermTime Peak time germination Modal time germination (\\(t_{peak}\\)) (Ranal de Santana 2006) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FirstGermTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time for first, last and peak germination — FirstGermTime","text":"","code":"FirstGermTime(germ.counts, intervals, partial = TRUE)  LastGermTime(germ.counts, intervals, partial = TRUE)  PeakGermTime(germ.counts, intervals, partial = TRUE)  TimeSpreadGerm(germ.counts, intervals, partial = TRUE)"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FirstGermTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time for first, last and peak germination — FirstGermTime","text":"germ.counts Germination counts time interval. Can partial cumulative specified argument partial. intervals time intervals. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FirstGermTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time for first, last and peak germination — FirstGermTime","text":"FirstGermTime, time first germination value   unit time specified argument intervals. LastGermTime, time last germination value   unit time specified argument intervals. TimeSpreadGerm, time spread germination value   unit time specified argument intervals. PeakGermTime, time(s) peak germination value(s)   numeric vector unit time specified argument   intervals.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FirstGermTime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time for first, last and peak germination — FirstGermTime","text":"Time first germination indicates time germination faster seeds seedlot. Lower value time first germination indicates faster initiation germination lower value time last germination indicates faster termination germination. \\[t_{0} = \\min \\lbrace T_{} : N_{} \\neq  0 \\rbrace\\] \\[t_{g} = \\max \\lbrace T_{} : N_{} \\neq  0 \\rbrace\\] , \\(T_{}\\) time start experiment \\(\\)th interval \\(N_{}\\) number seeds germinated \\(\\)th time interval (accumulated number, number corresponding \\(\\)th interval). Time spread germination (\\(t_{g}-t_{0}\\)) indicates difference faster slower germinating members sample. Peak time germination time highest frequency germinated seeds observed. Multiple peak times germination possible detected indicated warning message. \\[t_{peak} = \\lbrace T_{} : N_{} = N_{max} \\rbrace\\] , \\(N_{max}\\) maximum number seeds germinated per interval.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FirstGermTime.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Time for first, last and peak germination — FirstGermTime","text":"Al-Mudaris MA (1998). “Notes various parameters recording speed seed germination.” Der Tropenlandwirt - Journal Agriculture Tropics Subtropics, 99(2), 147–154. Czabator FJ (1962). “Germination value: index combining speed completeness pine seed germination.” Forest Science, 8(4), 386–396. Edwards TI (1932). “Temperature relations seed germination.” Quarterly Review Biology, 7(4), 428–443. Goloff AA, Bazzaz FA (1975). “germination model natural seed populations.” Journal Theoretical Biology, 52(2), 259–283. Kader MA (2005). “comparison seed germination calculation formulae associated interpretation resulting data.” Journal Proceedings Royal Society New South Wales, 138, 65–75. Labouriau LG (1983). Germinacao Das Sementes. Organizacao dos Estados Americanos. Programa Regional de Desenvolvimento Cientifico e Tecnologico. Serie de Biologia. Monografia 24. Quintanilla LG, Pajaron S, Pangua E, Amigo J (2000). “Effect temperature germination northernmost populations Culcita macrocarpa Woodwardia radicans.” Plant Biology, 2(6), 612–617. Ranal MA (1999). “Effects temperature spore germination fern species semideciduous mesophytic forest.” American Fern Journal, 89(2), 149. Ranal MA, de Santana DG (2006). “measure germination process?” Brazilian Journal Botany, 29(1), 1–11. Schrader JA, Graves WR (2000). “Seed germination seedling growth Alnus maritima three disjunct populations.” Journal American Society Horticultural Science, 125(1), 128–134.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FirstGermTime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time for first, last and peak germination — FirstGermTime","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) z <- c(0, 0, 0, 0, 11, 11, 9, 7, 1, 0, 1, 0, 0, 0) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- FirstGermTime(germ.counts = x, intervals = int) #> [1] 5 LastGermTime(germ.counts = x, intervals = int) #> [1] 11 TimeSpreadGerm(germ.counts = x, intervals = int) #> [1] 6 PeakGermTime(germ.counts = x, intervals = int) #> [1] 6 # For multiple peak germination times PeakGermTime(germ.counts = z, intervals = int) #> Warning: Multiple peak germination times exist. #> [1] 5 6  # From cumulative germination counts #---------------------------------------------------------------------------- FirstGermTime(germ.counts = y, intervals = int, partial = FALSE) #> [1] 5 LastGermTime(germ.counts = y, intervals = int, partial = FALSE) #> [1] 11 TimeSpreadGerm(germ.counts = y, intervals = int, partial = FALSE) #> [1] 6 PeakGermTime(germ.counts = y, intervals = int, partial = FALSE) #> [1] 6 # For multiple peak germination time PeakGermTime(germ.counts = cumsum(z), intervals = int, partial = FALSE) #> Warning: Multiple peak germination times exist. #> [1] 5 6"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHF.html","id":null,"dir":"Reference","previous_headings":"","what":"Four paramter hill function — FourPHF","title":"Four paramter hill function — FourPHF","text":"used FourPHFfit.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Four paramter hill function — FourPHF","text":"","code":"FourPHF(x, a, bta, c, y0)  FourPHF_fixa(x, a = 100, bta, c, y0)  FourPHF_fixy0(x, a, bta, c)  FourPHF_fixa_fixy0(x, a = 100, bta, c)  RateofGerm(x, a, b, c)"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Four paramter hill function — FourPHF","text":"x explanatory/independent variable value. Parameter \\(\\). bta Parameter \\(\\beta\\) \\(b = e^{\\beta}\\). c Parameter \\(c\\). y0 Parameter \\(y_{0}\\). b Parameter \\(b\\).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Four paramter hill function — FourPHF","text":"calculated response/dependent value value.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHFfit.bulk.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit four-parameter hill function for multiple samples — FourPHFfit.bulk","title":"Fit four-parameter hill function for multiple samples — FourPHFfit.bulk","text":"Fit four-parameter hill function data frame germination counts recorded specific time intervals multiple samples batch.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHFfit.bulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit four-parameter hill function for multiple samples — FourPHFfit.bulk","text":"","code":"FourPHFfit.bulk(   data,   total.seeds.col,   counts.intervals.cols,   intervals,   partial = TRUE,   fix.y0 = TRUE,   fix.a = TRUE,   tmax,   xp = c(10, 60),   umin = 10,   umax = 90,   tries = 3 )"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHFfit.bulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit four-parameter hill function for multiple samples — FourPHFfit.bulk","text":"data data frame germination count data. possess columns Partial cumulative germination counts per time interval (indicated argument counts.intervals.cols Total number seeds tested (indicated argument total.seeds.col). total.seeds.col name column data total number seeds tested. counts.intervals.cols names columns data germination counts (partial cumulative, indicated argument partial) per time interval (indicated argument intervals). intervals time intervals. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE. fix.y0 Force intercept y axis 0. fix.Fix actual maximum germination percentage end experiment. tmax time AUC computed. xp Germination percentage value(s) corresponding time computed numeric vector. Default c(10, 60). umin minimum germination percentage value computing uniformity. Default 10. Seed Details. umax maximum germination percentage value computing uniformity. Default 90. Seed Details. tries number tries attempted fit curve. Default 3.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHFfit.bulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit four-parameter hill function for multiple samples — FourPHFfit.bulk","text":"data frame original data along various parameters   respective fitted four-parameter hill function.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHFfit.bulk.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit four-parameter hill function for multiple samples — FourPHFfit.bulk","text":"El-Kassaby YA, Moss , Kolotelo D, Stoehr M (2008). “Seed germination: Mathematical representation parameters extraction.” Forest Science, 54(2), 220–227.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHFfit.bulk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit four-parameter hill function for multiple samples — FourPHFfit.bulk","text":"","code":"# \\donttest{ data(gcdata)  counts.per.intervals <- c(\"Day01\", \"Day02\", \"Day03\", \"Day04\", \"Day05\",                           \"Day06\", \"Day07\", \"Day08\", \"Day09\", \"Day10\",                           \"Day11\", \"Day12\", \"Day13\", \"Day14\")  FourPHFfit.bulk(gcdata, total.seeds.col = \"Total Seeds\",                     counts.intervals.cols = counts.per.intervals,                     intervals = 1:14, partial = TRUE,                     fix.y0 = TRUE, fix.a = TRUE, xp = c(10, 60),                     tmax = 20, tries = 3, umax = 90, umin = 10) #>    Genotype Rep Day01 Day02 Day03 Day04 Day05 Day06 Day07 Day08 Day09 Day10 #> 1        G1   1     0     0     0     0     4    17    10     7     1     0 #> 2        G2   1     0     0     0     1     3    15    13     6     2     1 #> 3        G3   1     0     0     0     2     3    18     9     8     2     1 #> 4        G4   1     0     0     0     0     4    19    12     6     2     1 #> 5        G5   1     0     0     0     0     5    20    12     8     1     0 #> 6        G1   2     0     0     0     0     3    21    11     7     1     1 #> 7        G2   2     0     0     0     0     4    18    11     7     1     0 #> 8        G3   2     0     0     0     1     3    14    12     6     2     1 #> 9        G4   2     0     0     0     1     3    19    10     8     1     1 #> 10       G5   2     0     0     0     0     4    18    13     6     2     1 #> 11       G1   3     0     0     0     0     5    21    11     8     1     0 #> 12       G2   3     0     0     0     0     3    20    10     7     1     1 #> 13       G3   3     0     0     0     0     4    19    12     8     1     1 #> 14       G4   3     0     0     0     0     3    21    11     6     1     0 #> 15       G5   3     0     0     0     0     4    17    10     8     1     1 #>    Day11 Day12 Day13 Day14 Total Seeds        a         b        c y0 lag #> 1      1     0     0     0          50 80.00000  9.881937 6.034954  0   0 #> 2      0     1     0     0          51 82.35294  9.227666 6.175193  0   0 #> 3      1     1     0     0          48 93.75000  7.793051 6.138110  0   0 #> 4      1     1     0     0          51 90.19608  8.925655 6.125173  0   0 #> 5      0     1     1     0          50 96.00000  9.419181 6.049642  0   0 #> 6      1     1     0     0          49 93.87755  9.450149 6.097415  0   0 #> 7      1     0     0     0          48 87.50000 10.172459 6.029851  0   0 #> 8      0     1     0     0          47 85.10638  8.940696 6.189774  0   0 #> 9      1     1     0     0          52 86.53846  8.617391 6.125122  0   0 #> 10     0     1     0     0          50 90.00000  9.608844 6.109504  0   0 #> 11     0     1     1     0          51 94.11765  9.400212 6.018760  0   0 #> 12     1     1     0     0          51 86.27451  9.162526 6.108452  0   0 #> 13     0     1     1     0          49 95.91837  8.995210 6.149012  0   0 #> 14     1     1     0     0          48 91.66667 10.391845 6.015910  0   0 #> 15     1     0     0     0          48 87.50000  9.136744 6.121579  0   0 #>      Dlag50 t50.total t10.total t60.total t50.Germinated t10.Germinated #> 1  6.034954  6.355121  4.956264  6.744598       6.034954       4.831807 #> 2  6.175193  6.473490  4.983236  6.872603       6.175193       4.866755 #> 3  6.138110  6.244191  4.673022  6.608438       6.138110       4.630062 #> 4  6.125173  6.276794  4.850875  6.614968       6.125173       4.788597 #> 5  6.049642  6.103433  4.814125  6.386789       6.049642       4.790946 #> 6  6.097415  6.182279  4.868632  6.477599       6.097415       4.832471 #> 7  6.029851  6.202812  4.930422  6.510495       6.029851       4.858476 #> 8  6.189774  6.439510  4.940057  6.823299       6.189774       4.841105 #> 9  6.125122  6.352172  4.836658  6.733276       6.125122       4.746573 #> 10 6.109504  6.253043  4.920629  6.566506       6.109504       4.860681 #> 11 6.018760  6.099435  4.798627  6.391291       6.018760       4.764246 #> 12 6.108452  6.326184  4.893596  6.684526       6.108452       4.806013 #> 13 6.149012  6.207501  4.841308  6.509954       6.149012       4.816393 #> 14 6.015910  6.122389  4.915140  6.397491       6.015910       4.869398 #> 15 6.121579  6.317392  4.892502  6.667247       6.121579       4.813083 #>    t60.Germinated Uniformity_90 Uniformity_10 Uniformity     TMGR      AUC #> 1        6.287724      7.537690      4.831807   2.705882 5.912194 1108.976 #> 2        6.452582      7.835407      4.866755   2.968652 6.031282 1128.559 #> 3        6.465924      8.137342      4.630062   3.507280 5.938180 1283.693 #> 4        6.409838      7.834810      4.788597   3.046213 5.972686 1239.887 #> 5        6.315746      7.639028      4.790946   2.848083 5.914289 1328.328 #> 6        6.364722      7.693469      4.832471   2.860997 5.961879 1294.463 #> 7        6.275050      7.483643      4.858476   2.625166 5.914057 1213.908 #> 8        6.476945      7.914163      4.841105   3.073058 6.036192 1164.346 #> 9        6.420208      7.904041      4.746573   3.157468 5.961631 1188.793 #> 10       6.372823      7.679177      4.860681   2.818496 5.978115 1240.227 #> 11       6.284051      7.603611      4.764246   2.839365 5.883557 1305.200 #> 12       6.384836      7.763854      4.806013   2.957841 5.964080 1188.021 #> 13       6.432524      7.850345      4.816393   3.033952 5.998270 1316.407 #> 14       6.255276      7.432372      4.869398   2.562974 5.905180 1273.385 #> 15       6.399357      7.785806      4.813083   2.972723 5.976087 1203.664 #>         MGT Skewness          msg    sigma       finTol    logLik      AIC #> 1  6.632252 1.098973 #1. success  1.615220 6.039613e-14 -25.49868 56.99736 #> 2  6.784407 1.098655 #1. success  1.115372 6.217249e-14 -20.31471 46.62943 #> 3  6.772742 1.103392 #1. success  2.432704 1.790568e-12 -31.23213 68.46426 #> 4  6.739666 1.100323 #1. success  2.396582 8.526513e-14 -31.02269 68.04538 #> 5  6.654981 1.100062 #1. success  2.399662 1.094236e-12 -31.04067 68.08135 #> 6  6.702473 1.099232 #1. success  3.034962 1.392664e-12 -34.32887 74.65774 #> 7  6.622417 1.098272 #1. success  1.663019 7.105427e-14 -25.90697 57.81395 #> 8  6.804000 1.099232 #1. success  1.120704 4.302336e-12 -20.38149 46.76298 #> 9  6.745241 1.101242 #1. success  2.429960 8.810730e-13 -31.21633 68.43266 #> 10 6.711900 1.098600 #1. success  1.686656 8.199663e-12 -26.10456 58.20911 #> 11 6.624248 1.100600 #1. success  2.628113 2.984279e-13 -32.31381 70.62762 #> 12 6.718639 1.099892 #1. success  2.878146 1.008971e-12 -33.58613 73.17227 #> 13 6.762274 1.099733 #1. success  2.604588 3.126388e-13 -32.18793 70.37586 #> 14 6.604967 1.097916 #1. success  2.764756 9.379164e-13 -33.02342 72.04684 #> 15 6.732266 1.099760 #1. success  1.954008 7.602807e-13 -28.16444 62.32888 #>         BIC  deviance df.residual nobs #> 1  58.91453  31.30723          12   14 #> 2  48.54660  14.92865          12   14 #> 3  70.38143  71.01658          12   14 #> 4  69.96256  68.92324          12   14 #> 5  69.99852  69.10052          12   14 #> 6  76.57491 110.53195          12   14 #> 7  59.73112  33.18760          12   14 #> 8  48.68015  15.07174          12   14 #> 9  70.34984  70.85647          12   14 #> 10 60.12629  34.13771          12   14 #> 11 72.54479  82.88372          12   14 #> 12 75.08944  99.40469          12   14 #> 13 72.29303  81.40654          12   14 #> 14 73.96401  91.72652          12   14 #> 15 64.24606  45.81777          12   14 # }"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHFfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit four-parameter hill function — FourPHFfit","title":"Fit four-parameter hill function — FourPHFfit","text":"Fit four-parameter hill function (El-Kassaby et al. 2008)  cumulative germination count data compute associated parameters.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHFfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit four-parameter hill function — FourPHFfit","text":"","code":"FourPHFfit(   germ.counts,   intervals,   total.seeds,   partial = TRUE,   fix.y0 = TRUE,   fix.a = TRUE,   tmax,   xp = c(10, 60),   umin = 10,   umax = 90,   tries = 3 )"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHFfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit four-parameter hill function — FourPHFfit","text":"germ.counts Germination counts time interval. Can partial cumulative specified argument partial. intervals time intervals. total.seeds Total number seeds. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE. fix.y0 Force intercept y axis 0. fix.Fix actual maximum germination percentage end experiment. tmax time AUC computed. xp Germination percentage value(s) corresponding time computed numeric vector. Default c(10, 60). umin minimum germination percentage value computing uniformity. Default 10. Seed Details. umax maximum germination percentage value computing uniformity. Default 90. Seed Details. tries number tries attempted fit curve. Default 3.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHFfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit four-parameter hill function — FourPHFfit","text":"list following components: data data frame   data used computing model. Parameters data frame   parameter estimates, standard errors p value. Fit one-row   data frame estimates model fitness log likelyhoods, Akaike   Information Criterion, Bayesian Information Criterion, deviance   residual degrees freedom. asymptote maximum   cumulative germination percentage. b mathematical parameter   controlling shape steepness germination curve. c   half-maximal activation level. y0 intercept y axis. lag Time germination onset. Dlag50 duration   time germination onset (lag) 50% germination. t50.total Time required 50% total seeds germinate.   NaN 50% total seeds germinate. txp.total Time required x% (specified argument xp)   total seeds germinate. NaN x% total   seeds germinate. t50.Germinated Time required 50%   viable/germinated seeds germinate. txp.Germinated Time   required x% (specified argument xp) viable/germinated   seeds germinate. Uniformity Time interval umin%   umax% viable seeds germinate. TMGR Time   maximum germination rate. AUC estimate area   curve. MGT Mean germination time. Skewness Skewness mean   germination time. msg message   gsl_nls. isConv Logical value indicating   whether convergence achieved. model raw fitted model output list class   gsl_nls.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHFfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit four-parameter hill function — FourPHFfit","text":"cumulative germination count data seed lot can modelled fit four-parameter hill function defined follows (El-Kassaby et al. 2008) . \\[y = y_{0}+\\frac{ax^{b}}{c^{b}+x^{b}}\\] , \\(y\\) cumulative germination percentage time \\(x\\), \\(y_{0}\\) intercept y axis, \\(\\) asymptote, maximum cumulative germination percentage, equivalent germination capacity, \\(b\\) mathematical parameter controlling shape steepness germination curve (larger \\(b\\) parameter, steeper rise toward asymptote \\(\\), shorter time germination onset maximum germination), \\(c\\) \"half-maximal activation level\" represents time required 50% viable seeds germinate (\\(c\\) equivalent germination speed). FourPHFfit, model reparameterized substituting \\(b\\) \\(e^{\\beta}\\) constraint \\(b\\) positive values . \\[y = y_{0}+\\frac{ax^{e^{\\beta}}}{c^{e^{\\beta}}+x^{e^{\\beta}}}\\] , \\(b = e^{\\beta}\\) \\(\\beta = \\log_{e}(b)\\). curve fitting performed nonlinear gslnls package, R interface least-squares optimization GNU Scientific Library (GSL) Levenberg-Marquardt algorithm (Chau 2023) . function fitted curve, FourPHFfit computes time 50% germination total seeds (t50.total) viable seeds (t50.Germinated). Similarly time percentage germination (terms total viable seeds) specified argument xp can computed. time germination onset (\\(lag\\)) can computed follows. \\[lag = b\\sqrt{\\frac{-y_{0}c^{b}}{+ y_{0}}}\\] value \\(D_{lag-50}\\) defined duration time germination onset (lag) 50% germination (\\(c\\)). time interval percentages viable seeds specified arguments umin umin germinate computed uniformity (\\(U_{t_{max}-t_{min}}\\)). \\[U_{t_{max}-t_{min}} = t_{max} - t_{min}\\] partial derivative four-parameter hill function gives instantaneous rate germination (\\(s\\)) follows. \\[s = \\frac{\\partial y}{\\partial x} = \\frac{abc^{b}x^{b-1}}{(c^{b}+x^{b})^{2}}\\] function instantaneous rate germination, time maximum germination rate (\\(TMGR\\)) can estimated follows. \\[TMGR = b \\sqrt{\\frac{c^{b}(b-1)}{b+1}}\\] TMGR represents point time instantaneous rate germination starts decline. area curve (\\(AUC\\)) obined integration fitted curve time 0 time specified argument `tmax`. Integration fitted curve gives value mean germination time (\\(MGT\\)) skewness germination curve computed ratio \\(MGT\\) time 50% viable seeds germinate (\\(t_{50}\\)). \\[Skewness = \\frac{MGT}{t_{50}}\\] final germination percentage less 10%, warning given, results may informative.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHFfit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit four-parameter hill function — FourPHFfit","text":"Chau J (2023). “gslnls: GSL Nonlinear Least-Squares Fitting.” El-Kassaby YA, Moss , Kolotelo D, Stoehr M (2008). “Seed germination: Mathematical representation parameters extraction.” Forest Science, 54(2), 220–227. Galassi M (ed.) (2009). GNU Scientific Library Reference Manual: GSL Version 1.12, 3. ed edition. Network Theory, Bristol. ISBN 978-0-9546120-7-8.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/FourPHFfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit four-parameter hill function — FourPHFfit","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x) total.seeds = 50  # From partial germination counts #---------------------------------------------------------------------------- FourPHFfit(germ.counts = x, intervals = int, total.seeds = 50, tmax = 20) #> $data #>    gp csgp intervals #> 1   0    0         1 #> 2   0    0         2 #> 3   0    0         3 #> 4   0    0         4 #> 5   8    8         5 #> 6  34   42         6 #> 7  20   62         7 #> 8  14   76         8 #> 9   2   78         9 #> 10  0   78        10 #> 11  2   80        11 #> 12  0   80        12 #> 13  0   80        13 #> 14  0   80        14 #>  #> $Parameters #>   term estimate  std.error statistic      p.value #> 1  bta 2.290709 0.05602634  40.88628 2.965932e-14 #> 2    c 6.034954 0.03872162 155.85488 3.270089e-21 #>  #> $Fit #>     sigma isConv       finTol    logLik      AIC      BIC deviance df.residual #> 1 1.61522   TRUE 6.039613e-14 -25.49868 56.99736 58.91453 31.30723          12 #>   nobs #> 1   14 #>  #> $a #> [1] 80 #>  #> $b #> [1] 9.881937 #>  #> $c #> [1] 6.034954 #>  #> $y0 #> [1] 0 #>  #> $lag #> [1] 0 #>  #> $Dlag50 #> [1] 6.034954 #>  #> $t50.total #> [1] 6.355121 #>  #> $txp.total #>       10       60  #> 4.956264 6.744598  #>  #> $t50.Germinated #> [1] 6.034954 #>  #> $txp.Germinated #>       10       60  #> 4.831807 6.287724  #>  #> $Uniformity #>         90         10 uniformity  #>   7.537690   4.831807   2.705882  #>  #> $TMGR #> [1] 5.912194 #>  #> $AUC #> [1] 1108.976 #>  #> $MGT #> [1] 6.632252 #>  #> $Skewness #> [1] 1.098973 #>  #> $msg #> [1] \"#1. success \" #>  #> $isConv #> [1] TRUE #>  #> $model #> Nonlinear regression model #>   model: csgp ~ FourPHF_fixa_fixy0(x = intervals, a = max(csgp), bta,     c) #>    data: data #>   bta     c  #> 2.291 6.035  #>  residual sum-of-squares: 31.31 #>  #> Algorithm: multifit/levenberg-marquardt, (scaling: levenberg, solver: qr) #>  #> Number of iterations to convergence: 9  #> Achieved convergence tolerance: 6.04e-14 #>  #> attr(,\"class\") #> [1] \"FourPHFfit\" \"list\"        # From cumulative germination counts #---------------------------------------------------------------------------- FourPHFfit(germ.counts = y, intervals = int, total.seeds = 50, tmax = 20,            partial = FALSE) #> $data #>    gp csgp intervals #> 1   0    0         1 #> 2   0    0         2 #> 3   0    0         3 #> 4   0    0         4 #> 5   8    8         5 #> 6  34   42         6 #> 7  20   62         7 #> 8  14   76         8 #> 9   2   78         9 #> 10  0   78        10 #> 11  2   80        11 #> 12  0   80        12 #> 13  0   80        13 #> 14  0   80        14 #>  #> $Parameters #>   term estimate  std.error statistic      p.value #> 1  bta 2.290709 0.05602634  40.88628 2.965932e-14 #> 2    c 6.034954 0.03872162 155.85488 3.270089e-21 #>  #> $Fit #>     sigma isConv       finTol    logLik      AIC      BIC deviance df.residual #> 1 1.61522   TRUE 6.039613e-14 -25.49868 56.99736 58.91453 31.30723          12 #>   nobs #> 1   14 #>  #> $a #> [1] 80 #>  #> $b #> [1] 9.881937 #>  #> $c #> [1] 6.034954 #>  #> $y0 #> [1] 0 #>  #> $lag #> [1] 0 #>  #> $Dlag50 #> [1] 6.034954 #>  #> $t50.total #> [1] 6.355121 #>  #> $txp.total #>       10       60  #> 4.956264 6.744598  #>  #> $t50.Germinated #> [1] 6.034954 #>  #> $txp.Germinated #>       10       60  #> 4.831807 6.287724  #>  #> $Uniformity #>         90         10 uniformity  #>   7.537690   4.831807   2.705882  #>  #> $TMGR #> [1] 5.912194 #>  #> $AUC #> [1] 1108.976 #>  #> $MGT #> [1] 6.632252 #>  #> $Skewness #> [1] 1.098973 #>  #> $msg #> [1] \"#1. success \" #>  #> $isConv #> [1] TRUE #>  #> $model #> Nonlinear regression model #>   model: csgp ~ FourPHF_fixa_fixy0(x = intervals, a = max(csgp), bta,     c) #>    data: data #>   bta     c  #> 2.291 6.035  #>  residual sum-of-squares: 31.31 #>  #> Algorithm: multifit/levenberg-marquardt, (scaling: levenberg, solver: qr) #>  #> Number of iterations to convergence: 9  #> Achieved convergence tolerance: 6.04e-14 #>  #> attr(,\"class\") #> [1] \"FourPHFfit\" \"list\""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Germination Index — GermIndex","title":"Germination Index — GermIndex","text":"Compute Germination index according Melville et al. (1980)  modification de Santana Ranal (2004)  (Ranal de Santana 2006) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Germination Index — GermIndex","text":"","code":"GermIndex(   germ.counts,   intervals,   partial = TRUE,   total.seeds,   modification = c(\"none\", \"santanaranal\") )"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Germination Index — GermIndex","text":"germ.counts Germination counts time interval. Can partial cumulative specified argument partial. intervals time intervals. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE. total.seeds Total number seeds. modification modification applied. Either \"none\" \"santanaranal\". Default \"none\" (see Details).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Germination Index — GermIndex","text":"value Germination index unit time   specified argument intervals.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermIndex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Germination Index — GermIndex","text":"Germination index (\\(GI\\)) computed follows (Melville et al. 1980) . \\[GI = \\sum_{=1}^{k}\\frac{\\left | \\left ( T_{k} - T_{} \\right ) N_{}\\right |}{N_{t}}\\] , \\(T_{}\\) time start experiment \\(\\)th interval (day example), \\(N_{}\\) number seeds germinated \\(\\)th time interval (accumulated number, number corresponding \\(\\)th interval), \\(N_{t}\\) total number seeds used test, \\(k\\) total number time intervals. modified germination index (\\(GI_{mod}\\)) proposed (de Santana Ranal 2004)  total number seeds tested (\\(N_{t}\\)) replaced total number germinated seeds (\\(N_{g}\\)) expression Melville et al. (1980)  remove effect sample size (Ranal de Santana 2006) . computed follows (Specified argument modification = \"santanaranal\"). \\[GI_{mod} = \\sum_{=1}^{k}\\frac{\\left | \\left ( T_{k} - T_{} \\right ) N_{}\\right |}{N_{g}}\\] term Germination index (\\(GI\\)) also used describe mathematical expression Speed germination (GermSpeed) AOSA (1983) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermIndex.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Germination Index — GermIndex","text":"AOSA (1983). Seed Vigor Testing Handbook. Association Official Seed Analysts, Ithaca, NY, USA. de Santana DG, Ranal MA (2004). Analise Da Germinacao: Um Enfoque Estatistico. Universidade de Brasilia, Brasilia. Melville AH, Galletta GJ, Draper AD, Ng TJ (1980). “Seed germination early seedling vigor progenies inbred strawberry selections.” HortScience, 15(6, ), 749–750. Ranal MA, de Santana DG (2006). “measure germination process?” Brazilian Journal Botany, 29(1), 1–11.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Germination Index — GermIndex","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- GermIndex(germ.counts = x, intervals = int, total.seeds = 50) #> [1] 5.84 GermIndex(germ.counts = x, intervals = int, total.seeds = 50,           modification = \"none\") #> [1] 5.84 GermIndex(germ.counts = x, intervals = int, total.seeds = 50,           modification = \"santanaranal\") #> [1] 7.3  # From cumulative germination counts #---------------------------------------------------------------------------- GermIndex(germ.counts = y, intervals = int, partial = FALSE,           total.seeds = 50) #> [1] 5.84 GermIndex(germ.counts = y, intervals = int, partial = FALSE,           total.seeds = 50,           modification = \"none\") #> [1] 5.84 GermIndex(germ.counts = y, intervals = int, partial = FALSE,           total.seeds = 50,           modification = \"santanaranal\") #> [1] 7.3"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermPercent.html","id":null,"dir":"Reference","previous_headings":"","what":"Germination percentage — GermPercent","title":"Germination percentage — GermPercent","text":"Compute following metrics: GermPercent Germination percentage Final germination percentage Germinability (ISTA 2015) . PeakGermPercent Peak germination percentage (Vallance 1950; Roh et al. 2004) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermPercent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Germination percentage — GermPercent","text":"","code":"GermPercent(germinated.seeds, germ.counts, total.seeds, partial = TRUE)  PeakGermPercent(germ.counts, intervals, total.seeds, partial = TRUE)"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermPercent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Germination percentage — GermPercent","text":"germinated.seeds Number germinated seeds germ.counts Germination counts time interval. Can partial cumulative specified argument partial. total.seeds Total number seeds. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE. intervals time intervals.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermPercent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Germination percentage — GermPercent","text":"germination percentage (%) value.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermPercent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Germination percentage — GermPercent","text":"Germination percentage computed follows (ISTA 2015) . \\[GP = \\frac{N_{g}}{N_{t}} \\times 100\\] , \\(N_{g}\\) number germinated seeds \\(N_{t}\\) total number seeds. value \\(N_{g}\\) can either specified using argument germinated.seeds computed germ.counts argument. Peak germination percentage computed follows (Vallance 1950; Roh et al. 2004) . \\[PGP = \\frac{N_{max}}{N_{t}} \\times 100\\] , \\(N_{max}\\) maximum number seeds germinated per interval.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermPercent.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Germination percentage — GermPercent","text":"ISTA (2015). “Chapter 5: germination test.” International Rules Seed Testing. International Seed Testing Association, Zurich, Switzerland., volume 2015, –5–56. International Seed Testing Association. Roh M, Bentz J, Wang P, Li E, Koshioka M (2004). “Maturity temperature stratification affect germination Styrax japonicus seeds.” Journal Horticultural Science Biotechnology, 79(4), 645–651. Vallance KB (1950). “Studies germination seeds Striga hermonthica . influence moisture-treatment, stimulant-dilution, -ripening germination.” Annals Botany, 14(55), 347–363.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermPercent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Germination percentage — GermPercent","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) z <- c(0, 0, 0, 0, 11, 11, 9, 7, 1, 0, 1, 0, 0, 0) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- GermPercent(germ.counts = x, total.seeds = 50) #> [1] 80 PeakGermPercent(germ.counts = x, intervals = int, total.seeds = 50) #> [1] 34 # For multiple peak germination times PeakGermPercent(germ.counts = z, intervals = int, total.seeds = 50) #> Warning: Multiple peak germination times exist. #> [1] 22  # From cumulative germination counts #---------------------------------------------------------------------------- GermPercent(germ.counts = y, total.seeds = 50, partial = FALSE) #> [1] 80 PeakGermPercent(germ.counts = y, intervals = int, total.seeds = 50,                 partial = FALSE) #> [1] 34 # For multiple peak germination times PeakGermPercent(germ.counts = cumsum(z), intervals = int, total.seeds = 50,                 partial = FALSE) #> Warning: Multiple peak germination times exist. #> [1] 22  # From number of germinated seeds #---------------------------------------------------------------------------- GermPercent(germinated.seeds = 40, total.seeds = 50) #> [1] 80"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSpeed.html","id":null,"dir":"Reference","previous_headings":"","what":"Speed of germination — GermSpeed","title":"Speed of germination — GermSpeed","text":"Compute following metrics: GermSpeed Speed germination (\\(S\\)) Germination rate index Index velocity germination Germination index Emergence rate index (Throneberry Smith 1955; Maguire 1962; Allan et al. 1962; Kendrick Frankland 1969; Bouton et al. 1976; Erbach 1982; AOSA 1983; Khandakar Bradbeer 1983; Hsu Nelson 1986; Bradbeer 1988; Wardle et al. 1991) . GermSpeedAccumulated Speed accumulated germination (\\(S_{accumulated}\\)) (Bradbeer 1988; Wardle et al. 1991; Haugland Brandsaeter 1996; de Santana Ranal 2004) . GermSpeedCorrected Corrected speed germination (\\(\\hat{S}\\)) Corrected germination rate index (Evetts Burnside 1972) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSpeed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Speed of germination — GermSpeed","text":"","code":"GermSpeed(   germ.counts,   intervals,   partial = TRUE,   percent = FALSE,   total.seeds = NULL )  GermSpeedAccumulated(   germ.counts,   intervals,   partial = TRUE,   percent = FALSE,   total.seeds = NULL )  GermSpeedCorrected(   germ.counts,   intervals,   partial = TRUE,   total.seeds,   method = c(\"normal\", \"accumulated\") )"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSpeed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Speed of germination — GermSpeed","text":"germ.counts Germination counts time interval. Can partial cumulative specified argument partial. intervals time intervals. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE. percent logical. TRUE, germination percentage used instead counts computation. Default FALSE. total.seeds Total number seeds. Mandatory computation percent = TRUE. method method computing germination speed GermSpeedCorrected. Either \"normal\" (GermSpeed) \"accumulated\" (GermSpeedAccumulated).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSpeed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Speed of germination — GermSpeed","text":"GermSpeed, value germination speed   \\(\\mathrm{count \\, time^{-1}}\\) % \\(\\mathrm{time^{-1}}\\). GermSpeedAccumulated, value accumulated germination speed   \\(\\mathrm{count \\, time^{-1}}\\) % \\(\\mathrm{time^{-1}}\\). GermSpeedCorrected, corrected speed germination   \\(\\mathrm{time^{-1}}\\).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSpeed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Speed of germination — GermSpeed","text":"GermSpeed computes speed germination according following formula (Throneberry Smith 1955; Maguire 1962; Allan et al. 1962; Kendrick Frankland 1969; Bouton et al. 1976; Erbach 1982; AOSA 1983; Khandakar Bradbeer 1983; Hsu Nelson 1986; Bradbeer 1988; Wardle et al. 1991) . \\[S = \\frac{N_{1}}{T_{1}} + \\frac{N_{2}}{T_{2}} + \\frac{N_{3}}{T_{3}} + \\cdots + \\frac{N_{k}}{T_{k}}\\] , \\(N_{1}\\), \\(N_{2}\\), \\(N_{3}\\), \\(\\cdots\\), \\(N_{k}\\) number germinated seeds observed time (days hours) \\(T_{1}\\), \\(T_{2}\\), \\(T_{3}\\), \\(\\cdots\\), \\(T_{k}\\) sowing (accumulated/cumulative number, number seeds germinated specific time) \\(k\\) total number time intervals. Emergence Rate Index (\\(ERI\\)) described Allan et al. (1962) , Erbach (1982)  Hsu Nelson (1986)  well Germination Index (\\(GI\\)) according AOSA (1983) . formula can also described follows. \\[S = \\sum_{=1}^{k}\\frac{N_{}}{T_{}}\\] , \\(T_{}\\) time start experiment \\(\\)th interval, \\(N_{}\\) number seeds germinated \\(\\)th time interval (accumulated number, number corresponding \\(\\)th interval), \\(k\\) total number time intervals. GermSpeedAccumulated computes speed accumulated germination follows (Bradbeer 1988; Wardle et al. 1991; Haugland Brandsaeter 1996; de Santana Ranal 2004) . \\[S_{accumulated} = \\frac{N_{1}}{T_{1}} + \\frac{N_{1} + N_{2}}{T_{2}} + \\frac{N_{1} + N_{2} + N_{3}}{T_{3}} + \\cdots +\\frac{N_{1} + N_{2} + \\cdots + N_{k}}{T_{k}}\\] , \\(N_{1}\\), \\(N_{2}\\), \\(N_{3}\\), \\(\\cdots\\), \\(N_{k}\\) number germinated seeds observed time (days hours) \\(T_{1}\\), \\(T_{2}\\), \\(T_{3}\\), \\(\\cdots\\), \\(T_{k}\\) sowing (accumulated/cumulative number, number seeds germinated specific time), \\(k\\) total number time intervals. formula can also described follows. \\[S_{accumulated} = \\sum_{=1}^{k}\\frac{\\sum_{j=1}^{}N_{j}}{T_{}}\\] , \\(T_{}\\) time start experiment \\(\\)th interval, \\(\\sum_{j=1}^{}N_{j}\\) cumuative/accumulated number seeds germinated \\(\\)th time interval, \\(k\\) total number time intervals. Speed germination expresses rate germination terms total number seeds germinate time interval. Higher values indicate greater faster germination. useful comparisons samples treatments possess similar germinabilities. overcome either using corrected speed germination using germination percentages instead counts computing speed. GermSpeedCorrected computes corrected speed germination \\(S\\) corrected speed accumulated germination \\(\\hat{S}\\) follows (Evetts Burnside 1972) . \\[\\hat{S} = \\frac{S}{FGP}\\] \\[\\hat{S}_{accumulated} = \\frac{S_{accumulated}}{FGP}\\] , \\(S\\) germination speed \\(\\hat{S}\\) accumulated speed germination (specified argument  method = \"normal\" method = \"accumulated\" respectively) computed germination percentage instead counts \\(FGP\\) final germination percentage germinability. percent = TRUE, germination percentage used instead counts computation GermSpeed GermSpeedAccumulated. case GermSpeedCorrected, germination percentage always used numerator.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSpeed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Speed of germination — GermSpeed","text":"Allan RE, Vogel OA, Peterson CJ (1962). “Seedling emergence rate fall-sown wheat association plant height coleoptile length.” Agronomy Journal, 54(4), 347. AOSA (1983). Seed Vigor Testing Handbook. Association Official Seed Analysts, Ithaca, NY, USA. Bouton JH, Dudeck AE, Smith RL (1976). “Germination freshly harvested seed centipedegrass.” Agronomy Journal, 68(6), 991. Bradbeer JW (1988). Seed Dormancy Germination. Blackie, Glasgow London. de Santana DG, Ranal MA (2004). Analise Da Germinacao: Um Enfoque Estatistico. Universidade de Brasilia, Brasilia. Erbach DC (1982). “Tillage continuous corn corn-soybean rotation.” Transactions ASAE, 25(4), 906–0911. Evetts LL, Burnside OC (1972). “Germination seedling development common milkweed species.” Weed Science, 20(4), 371–378. Haugland E, Brandsaeter LO (1996). “Experiments bioassay sensitivity study allelopathy.” Journal Chemical Ecology, 22(10), 1845–1859. Hsu FH, Nelson CJ (1986). “Planting date effects seedling development perennial warm-season forage grasses. . Field emergence.” Agronomy Journal, 78(1), 33–38. Kendrick RE, Frankland B (1969). “Photocontrol germination Amaranthus caudatus.” Planta, 85(4), 326–339. Khandakar AL, Bradbeer JW (1983). Jute seed quality. Bangladesh Agricultural Research Council, Dhaka. Maguire JD (1962). “Speed germination - Aid selection evaluation seedling emergence vigor.” Crop Science, 2(2), 176–177. Throneberry GO, Smith FG (1955). “Relation respiratory enzymatic activity corn seed viability.” Plant Physiology, 30(4), 337–343. Wardle DA, Ahmed M, Nicholson KS (1991). “Allelopathic influence nodding thistle (Carduus nutans L.) seeds germination radicle growth pasture plants.” New Zealand Journal Agricultural Research, 34(2), 185–191.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSpeed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Speed of germination — GermSpeed","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- GermSpeed(germ.counts = x, intervals = int) #> [1] 6.138925 GermSpeedAccumulated(germ.counts = x, intervals = int) #> [1] 34.61567 GermSpeedCorrected(germ.counts = x, intervals = int, total.seeds = 50,                    method = \"normal\") #> [1] 0.1534731 GermSpeedCorrected(germ.counts = x, intervals = int, total.seeds = 50,                    method = \"accumulated\") #> [1] 0.8653917  # From partial germination counts (with percentages instead of counts) #---------------------------------------------------------------------------- GermSpeed(germ.counts = x, intervals = int,           percent = TRUE, total.seeds = 50) #> [1] 12.27785 GermSpeedAccumulated(germ.counts = x, intervals = int,                      percent = TRUE, total.seeds = 50) #> [1] 69.23134  # From cumulative germination counts #---------------------------------------------------------------------------- GermSpeed(germ.counts = y, intervals = int, partial = FALSE) #> [1] 6.138925 GermSpeedAccumulated(germ.counts = y, intervals = int, partial = FALSE) #> [1] 34.61567 GermSpeedCorrected(germ.counts = y, intervals = int,                    partial = FALSE, total.seeds = 50, method = \"normal\") #> [1] 0.1534731 GermSpeedCorrected(germ.counts = y, intervals = int,                    partial = FALSE, total.seeds = 50, method = \"accumulated\") #> [1] 0.8653917  # From cumulative germination counts (with percentages instead of counts) #---------------------------------------------------------------------------- GermSpeed(germ.counts = y, intervals = int, partial = FALSE,           percent = TRUE, total.seeds = 50) #> [1] 12.27785 GermSpeedAccumulated(germ.counts = y, intervals = int, partial = FALSE,                      percent = TRUE, total.seeds = 50) #> [1] 69.23134"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSynchrony.html","id":null,"dir":"Reference","previous_headings":"","what":"Synchrony and uncertainty of germination — GermSynchrony","title":"Synchrony and uncertainty of germination — GermSynchrony","text":"Compute following metrics: GermSynchrony Synchrony germination (\\(Z\\) index) (Primack 1985; Ranal de Santana 2006) . GermUncertainty Synchronization index (\\(\\overline{E}\\)) Uncertainty germination process (\\(U\\)) Informational entropy (\\(H\\)) (Shannon 1948; Labouriau Valadares 1976; Labouriau 1983) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSynchrony.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synchrony and uncertainty of germination — GermSynchrony","text":"","code":"GermSynchrony(germ.counts, intervals, partial = TRUE)  GermUncertainty(germ.counts, intervals, partial = TRUE)"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSynchrony.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Synchrony and uncertainty of germination — GermSynchrony","text":"germ.counts Germination counts time interval. Can partial cumulative specified argument partial. intervals time intervals. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSynchrony.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Synchrony and uncertainty of germination — GermSynchrony","text":"GermUncertainty, value uncertainty germination   process \\(\\mathrm{bit}\\). GermSynchrony, value synchrony germination.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSynchrony.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synchrony and uncertainty of germination — GermSynchrony","text":"GermSynchrony computes value synchrony germination (\\(Z\\) index) follows (Primack 1985; Ranal de Santana 2006) . \\[Z=\\frac{\\sum_{=1}^{k}C_{N_{},2}}{C_{\\Sigma N_{},2}}\\] , \\(C_{N_{},2}\\) partial combination two germinated seeds among \\(N_{}\\), number seeds germinated \\(\\)th time interval (estimated \\(C_{N_{},2}=\\frac{N_{}(N_{}-1)}{2}\\)), \\(C_{\\Sigma N_{},2}\\) partial combination two germinated seeds among total number seeds germinated final count, assuming seeds germinated simultaneously. GermUncertainty computes value synchronization index (\\(\\overline{E}\\)) uncertainty germination process (\\(U\\)) informational entropy (\\(H\\)) follows (Shannon 1948; Labouriau Valadares 1976; Labouriau 1983) . \\[\\overline{E} = -\\sum_{=1}^{k}f_{}\\log_{2}f_{}\\] , \\(f_{}\\) relative frequency germination (estimated \\(f_{}=\\frac{N_{}}{\\sum_{=1}^{k}N_{}}\\)), \\(N_{}\\) number seeds germinated \\(\\)th time interval, \\(k\\) total number time intervals.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSynchrony.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Synchrony and uncertainty of germination — GermSynchrony","text":"Labouriau LG (1983). “Uma nova linha de pesquisa na fisiologia da germinacao das sementes.” Anais XXXIV Congresso Nacional de Botanica. SBB, Porto Alegre, 11–50. Labouriau LG, Valadares MEB (1976). “germination seeds Calotropis procera (Ait.) Ait. f.” Anais da Academia Brasileira de Ciencias, 48(263-284). Primack RB (1985). “Longevity individual flowers.” Annual Review Ecology Systematics, 16(1), 15–37. Ranal MA, de Santana DG (2006). “measure germination process?” Brazilian Journal Botany, 29(1), 1–11. Shannon CE (1948). “mathematical theory communication.” Bell System Technical Journal, 27(3), 379–423.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermSynchrony.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synchrony and uncertainty of germination — GermSynchrony","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- GermSynchrony(germ.counts = x, intervals = int) #> [1] 0.2666667 GermUncertainty(germ.counts = x, intervals = int) #> [1] 2.062987  # From cumulative germination counts #---------------------------------------------------------------------------- GermSynchrony(germ.counts = y, intervals = int, partial = FALSE) #> [1] 0.2666667 GermUncertainty(germ.counts = y, intervals = int, partial = FALSE) #> [1] 2.062987"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Peak value and germination value — GermValue","title":"Peak value and germination value — GermValue","text":"Compute Peak value (\\(PV\\)) Emergence Energy (\\(EE\\)) (Czabator 1962; Bonner 1967)  Germination value (\\(GV\\)) (Czabator 1962; Djavanshir Pourbeik 1976; Brown Mayer 1988) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Peak value and germination value — GermValue","text":"","code":"PeakValue(germ.counts, intervals, total.seeds, partial = TRUE)  GermValue(   germ.counts,   intervals,   total.seeds,   partial = TRUE,   method = c(\"czabator\", \"dp\"),   from.onset = TRUE,   k = 10 )"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Peak value and germination value — GermValue","text":"germ.counts Germination counts time interval. Can partial cumulative specified argument partial. intervals time intervals. total.seeds Total number seeds. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE. method method computing germination value. Either \"czabator\" \"dp\". .onset logical. TRUE, duration considered onset germination. FALSE, full duration germination test considered. Default TRUE. k Constant (See Details). Default 10.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Peak value and germination value — GermValue","text":"list following components: Germination Value   germination value. Calculations data frame calculations. testend end test value (method dp).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermValue.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Peak value and germination value — GermValue","text":"Peak value (\\(PV\\)) maximum quotient obtained dividing successive cumulative germination values relevant incubation time (Czabator 1962) . \\[PV = \\max\\left ( \\frac{G_{1}}{T_{1}},\\frac{G_{2}}{T_{2}},\\cdots \\frac{G_{k}}{T_{k}} \\right )\\] , \\(T_{}\\) time start experiment \\(\\)th interval, \\(G_{}\\) cumulative germination percentage \\(\\)th time interval, \\(k\\) total number time intervals. represents mean daily germination vigorous component seed lot, mathematical expression break, shoulder, typical sigmoid  germination curve (Djavanshir Pourbeik 1976) . accumulated number seeds germinated point germination curve rate germination starts decrease. also described Emergence energy (Bonner 1967) . daily germination counts, germination value (\\(GV\\)) computed follows (Czabator 1962)  (Specified argument method = \"czabator\"). \\[GV = PV \\times MDG\\] , \\(PV\\) peak value, \\(MDG\\) mean daily germination percentage onset germination. Germination value (\\(GV\\)) can also computed time intervals successive germination counts, replacing \\(MDG\\) mean germination percentage per unit time (\\(\\overline{GP}\\)). new estimation germination value given Djavanshir Pourbeik (1976)  follows (Specified argument method = \"dp\"). \\[GV = \\frac{\\sum DGS}{N} \\times GP \\times c\\] , \\(DGS\\) daily germination speed computed dividing cumulative germination percentage number days since onset germination, \\(N\\) frequency number DGS calculated test, \\(GP\\) germination percentage expressed 100, \\(c\\) constant. value \\(c\\) decided basis average daily speed germination (\\(\\frac{\\sum DGS}{N}\\)). less 10, \\(c\\) value 10 can used 10, value 7 8 can used \\(c\\). methods computing \\(GV\\), duration onset germination considered default. Alternatively, modified \\(GV\\) (\\(GV_{mod}\\)), entire duration beginning test considered can obtained using argument .onset = FALSE (Brown Mayer 1988) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermValue.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Peak value and germination value — GermValue","text":"Bonner FT (1967). “Ideal sowing depth sweetgum seed.” Tree Planters' Notes, 18(1), 1–1. Brown RF, Mayer DG (1988). “Representing cumulative germination. 1. critical analysis single-value germination indices.” Annals Botany, 61(2), 117–125. Czabator FJ (1962). “Germination value: index combining speed completeness pine seed germination.” Forest Science, 8(4), 386–396. Djavanshir K, Pourbeik H (1976). “Germination value-new formula.” Silvae Genetica, 25(2), 79–83.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/GermValue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Peak value and germination value — GermValue","text":"","code":"x <- c(0, 0, 34, 40, 21, 10, 4, 5, 3, 5, 8, 7, 7, 6, 6, 4, 0, 2, 0, 2) y <- c(0, 0, 34, 74, 95, 105, 109, 114, 117, 122, 130, 137, 144, 150,       156, 160, 160, 162, 162, 164) int <- 1:length(x) total.seeds = 200  # From partial germination counts #---------------------------------------------------------------------------- PeakValue(germ.counts = x, intervals = int, total.seeds = 200) #> [1] 9.5 GermValue(germ.counts = x, intervals = int, total.seeds = 200,           method = \"czabator\") #> $`Germination Value` #> [1] 38.95 #>  #> [[2]] #>    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent #> 3           34         3                     34                    17.0 #> 4           40         4                     74                    37.0 #> 5           21         5                     95                    47.5 #> 6           10         6                    105                    52.5 #> 7            4         7                    109                    54.5 #> 8            5         8                    114                    57.0 #> 9            3         9                    117                    58.5 #> 10           5        10                    122                    61.0 #> 11           8        11                    130                    65.0 #> 12           7        12                    137                    68.5 #> 13           7        13                    144                    72.0 #> 14           6        14                    150                    75.0 #> 15           6        15                    156                    78.0 #> 16           4        16                    160                    80.0 #> 17           0        17                    160                    80.0 #> 18           2        18                    162                    81.0 #> 19           0        19                    162                    81.0 #> 20           2        20                    164                    82.0 #>         DGS #> 3  5.666667 #> 4  9.250000 #> 5  9.500000 #> 6  8.750000 #> 7  7.785714 #> 8  7.125000 #> 9  6.500000 #> 10 6.100000 #> 11 5.909091 #> 12 5.708333 #> 13 5.538462 #> 14 5.357143 #> 15 5.200000 #> 16 5.000000 #> 17 4.705882 #> 18 4.500000 #> 19 4.263158 #> 20 4.100000 #>  GermValue(germ.counts = x, intervals = int, total.seeds = 200,           method = \"dp\", k = 10) #> $`Germination Value` #> [1] 53.36595 #>  #> [[2]] #>    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent #> 3           34         3                     34                    17.0 #> 4           40         4                     74                    37.0 #> 5           21         5                     95                    47.5 #> 6           10         6                    105                    52.5 #> 7            4         7                    109                    54.5 #> 8            5         8                    114                    57.0 #> 9            3         9                    117                    58.5 #> 10           5        10                    122                    61.0 #> 11           8        11                    130                    65.0 #> 12           7        12                    137                    68.5 #> 13           7        13                    144                    72.0 #> 14           6        14                    150                    75.0 #> 15           6        15                    156                    78.0 #> 16           4        16                    160                    80.0 #> 17           0        17                    160                    80.0 #> 18           2        18                    162                    81.0 #> 19           0        19                    162                    81.0 #> 20           2        20                    164                    82.0 #>         DGS SumDGSbyN        GV #> 3  5.666667  5.666667  9.633333 #> 4  9.250000  7.458333 27.595833 #> 5  9.500000  8.138889 38.659722 #> 6  8.750000  8.291667 43.531250 #> 7  7.785714  8.190476 44.638095 #> 8  7.125000  8.012897 45.673512 #> 9  6.500000  7.796769 45.611097 #> 10 6.100000  7.584673 46.266503 #> 11 5.909091  7.398497 48.090230 #> 12 5.708333  7.229481 49.521942 #> 13 5.538462  7.075752 50.945411 #> 14 5.357143  6.932534 51.994006 #> 15 5.200000  6.799262 53.034246 #> 16 5.000000  6.670744 53.365948 #> 17 4.705882  6.539753 52.318022 #> 18 4.500000  6.412268 51.939373 #> 19 4.263158  6.285850 50.915385 #> 20 4.100000  6.164414 50.548194 #>  #> $testend #> [1] 16 #>  GermValue(germ.counts = x, intervals = int, total.seeds = 200,           method = \"czabator\", from.onset = FALSE) #> $`Germination Value` #> [1] 38.95 #>  #> [[2]] #>    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent #> 1            0         1                      0                     0.0 #> 2            0         2                      0                     0.0 #> 3           34         3                     34                    17.0 #> 4           40         4                     74                    37.0 #> 5           21         5                     95                    47.5 #> 6           10         6                    105                    52.5 #> 7            4         7                    109                    54.5 #> 8            5         8                    114                    57.0 #> 9            3         9                    117                    58.5 #> 10           5        10                    122                    61.0 #> 11           8        11                    130                    65.0 #> 12           7        12                    137                    68.5 #> 13           7        13                    144                    72.0 #> 14           6        14                    150                    75.0 #> 15           6        15                    156                    78.0 #> 16           4        16                    160                    80.0 #> 17           0        17                    160                    80.0 #> 18           2        18                    162                    81.0 #> 19           0        19                    162                    81.0 #> 20           2        20                    164                    82.0 #>         DGS #> 1  0.000000 #> 2  0.000000 #> 3  5.666667 #> 4  9.250000 #> 5  9.500000 #> 6  8.750000 #> 7  7.785714 #> 8  7.125000 #> 9  6.500000 #> 10 6.100000 #> 11 5.909091 #> 12 5.708333 #> 13 5.538462 #> 14 5.357143 #> 15 5.200000 #> 16 5.000000 #> 17 4.705882 #> 18 4.500000 #> 19 4.263158 #> 20 4.100000 #>  GermValue(germ.counts = x, intervals = int, total.seeds = 200,           method = \"dp\", k = 10, from.onset = FALSE) #> $`Germination Value` #> [1] 46.6952 #>  #> [[2]] #>    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent #> 1            0         1                      0                     0.0 #> 2            0         2                      0                     0.0 #> 3           34         3                     34                    17.0 #> 4           40         4                     74                    37.0 #> 5           21         5                     95                    47.5 #> 6           10         6                    105                    52.5 #> 7            4         7                    109                    54.5 #> 8            5         8                    114                    57.0 #> 9            3         9                    117                    58.5 #> 10           5        10                    122                    61.0 #> 11           8        11                    130                    65.0 #> 12           7        12                    137                    68.5 #> 13           7        13                    144                    72.0 #> 14           6        14                    150                    75.0 #> 15           6        15                    156                    78.0 #> 16           4        16                    160                    80.0 #> 17           0        17                    160                    80.0 #> 18           2        18                    162                    81.0 #> 19           0        19                    162                    81.0 #> 20           2        20                    164                    82.0 #>         DGS SumDGSbyN        GV #> 1  0.000000  0.000000  0.000000 #> 2  0.000000  0.000000  0.000000 #> 3  5.666667  1.888889  3.211111 #> 4  9.250000  3.729167 13.797917 #> 5  9.500000  4.883333 23.195833 #> 6  8.750000  5.527778 29.020833 #> 7  7.785714  5.850340 31.884354 #> 8  7.125000  6.009673 34.255134 #> 9  6.500000  6.064153 35.475298 #> 10 6.100000  6.067738 37.013202 #> 11 5.909091  6.053316 39.346552 #> 12 5.708333  6.024567 41.268285 #> 13 5.538462  5.987174 43.107655 #> 14 5.357143  5.942172 44.566291 #> 15 5.200000  5.892694 45.963013 #> 16 5.000000  5.836901 46.695205 #> 17 4.705882  5.770370 46.162961 #> 18 4.500000  5.699794 46.168331 #> 19 4.263158  5.624182 45.555871 #> 20 4.100000  5.547972 45.493374 #>  #> $testend #> [1] 16 #>   # From cumulative germination counts #---------------------------------------------------------------------------- PeakValue(germ.counts = y, interval = int, total.seeds = 200,           partial = FALSE) #> [1] 9.5 GermValue(germ.counts = y, intervals = int, total.seeds = 200,           partial = FALSE, method = \"czabator\") #> $`Germination Value` #> [1] 38.95 #>  #> [[2]] #>    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent #> 3           34         3                     34                    17.0 #> 4           40         4                     74                    37.0 #> 5           21         5                     95                    47.5 #> 6           10         6                    105                    52.5 #> 7            4         7                    109                    54.5 #> 8            5         8                    114                    57.0 #> 9            3         9                    117                    58.5 #> 10           5        10                    122                    61.0 #> 11           8        11                    130                    65.0 #> 12           7        12                    137                    68.5 #> 13           7        13                    144                    72.0 #> 14           6        14                    150                    75.0 #> 15           6        15                    156                    78.0 #> 16           4        16                    160                    80.0 #> 17           0        17                    160                    80.0 #> 18           2        18                    162                    81.0 #> 19           0        19                    162                    81.0 #> 20           2        20                    164                    82.0 #>         DGS #> 3  5.666667 #> 4  9.250000 #> 5  9.500000 #> 6  8.750000 #> 7  7.785714 #> 8  7.125000 #> 9  6.500000 #> 10 6.100000 #> 11 5.909091 #> 12 5.708333 #> 13 5.538462 #> 14 5.357143 #> 15 5.200000 #> 16 5.000000 #> 17 4.705882 #> 18 4.500000 #> 19 4.263158 #> 20 4.100000 #>  GermValue(germ.counts = y, intervals = int, total.seeds = 200,           partial = FALSE, method = \"dp\", k = 10) #> $`Germination Value` #> [1] 53.36595 #>  #> [[2]] #>    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent #> 3           34         3                     34                    17.0 #> 4           40         4                     74                    37.0 #> 5           21         5                     95                    47.5 #> 6           10         6                    105                    52.5 #> 7            4         7                    109                    54.5 #> 8            5         8                    114                    57.0 #> 9            3         9                    117                    58.5 #> 10           5        10                    122                    61.0 #> 11           8        11                    130                    65.0 #> 12           7        12                    137                    68.5 #> 13           7        13                    144                    72.0 #> 14           6        14                    150                    75.0 #> 15           6        15                    156                    78.0 #> 16           4        16                    160                    80.0 #> 17           0        17                    160                    80.0 #> 18           2        18                    162                    81.0 #> 19           0        19                    162                    81.0 #> 20           2        20                    164                    82.0 #>         DGS SumDGSbyN        GV #> 3  5.666667  5.666667  9.633333 #> 4  9.250000  7.458333 27.595833 #> 5  9.500000  8.138889 38.659722 #> 6  8.750000  8.291667 43.531250 #> 7  7.785714  8.190476 44.638095 #> 8  7.125000  8.012897 45.673512 #> 9  6.500000  7.796769 45.611097 #> 10 6.100000  7.584673 46.266503 #> 11 5.909091  7.398497 48.090230 #> 12 5.708333  7.229481 49.521942 #> 13 5.538462  7.075752 50.945411 #> 14 5.357143  6.932534 51.994006 #> 15 5.200000  6.799262 53.034246 #> 16 5.000000  6.670744 53.365948 #> 17 4.705882  6.539753 52.318022 #> 18 4.500000  6.412268 51.939373 #> 19 4.263158  6.285850 50.915385 #> 20 4.100000  6.164414 50.548194 #>  #> $testend #> [1] 16 #>  GermValue(germ.counts = y, intervals = int, total.seeds = 200,           partial = FALSE, method = \"czabator\", from.onset = FALSE) #> $`Germination Value` #> [1] 38.95 #>  #> [[2]] #>    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent #> 1            0         1                      0                     0.0 #> 2            0         2                      0                     0.0 #> 3           34         3                     34                    17.0 #> 4           40         4                     74                    37.0 #> 5           21         5                     95                    47.5 #> 6           10         6                    105                    52.5 #> 7            4         7                    109                    54.5 #> 8            5         8                    114                    57.0 #> 9            3         9                    117                    58.5 #> 10           5        10                    122                    61.0 #> 11           8        11                    130                    65.0 #> 12           7        12                    137                    68.5 #> 13           7        13                    144                    72.0 #> 14           6        14                    150                    75.0 #> 15           6        15                    156                    78.0 #> 16           4        16                    160                    80.0 #> 17           0        17                    160                    80.0 #> 18           2        18                    162                    81.0 #> 19           0        19                    162                    81.0 #> 20           2        20                    164                    82.0 #>         DGS #> 1  0.000000 #> 2  0.000000 #> 3  5.666667 #> 4  9.250000 #> 5  9.500000 #> 6  8.750000 #> 7  7.785714 #> 8  7.125000 #> 9  6.500000 #> 10 6.100000 #> 11 5.909091 #> 12 5.708333 #> 13 5.538462 #> 14 5.357143 #> 15 5.200000 #> 16 5.000000 #> 17 4.705882 #> 18 4.500000 #> 19 4.263158 #> 20 4.100000 #>  GermValue(germ.counts = y, intervals = int, total.seeds = 200,           partial = FALSE, method = \"dp\", k = 10, from.onset = FALSE) #> $`Germination Value` #> [1] 46.6952 #>  #> [[2]] #>    germ.counts intervals Cumulative.germ.counts Cumulative.germ.percent #> 1            0         1                      0                     0.0 #> 2            0         2                      0                     0.0 #> 3           34         3                     34                    17.0 #> 4           40         4                     74                    37.0 #> 5           21         5                     95                    47.5 #> 6           10         6                    105                    52.5 #> 7            4         7                    109                    54.5 #> 8            5         8                    114                    57.0 #> 9            3         9                    117                    58.5 #> 10           5        10                    122                    61.0 #> 11           8        11                    130                    65.0 #> 12           7        12                    137                    68.5 #> 13           7        13                    144                    72.0 #> 14           6        14                    150                    75.0 #> 15           6        15                    156                    78.0 #> 16           4        16                    160                    80.0 #> 17           0        17                    160                    80.0 #> 18           2        18                    162                    81.0 #> 19           0        19                    162                    81.0 #> 20           2        20                    164                    82.0 #>         DGS SumDGSbyN        GV #> 1  0.000000  0.000000  0.000000 #> 2  0.000000  0.000000  0.000000 #> 3  5.666667  1.888889  3.211111 #> 4  9.250000  3.729167 13.797917 #> 5  9.500000  4.883333 23.195833 #> 6  8.750000  5.527778 29.020833 #> 7  7.785714  5.850340 31.884354 #> 8  7.125000  6.009673 34.255134 #> 9  6.500000  6.064153 35.475298 #> 10 6.100000  6.067738 37.013202 #> 11 5.909091  6.053316 39.346552 #> 12 5.708333  6.024567 41.268285 #> 13 5.538462  5.987174 43.107655 #> 14 5.357143  5.942172 44.566291 #> 15 5.200000  5.892694 45.963013 #> 16 5.000000  5.836901 46.695205 #> 17 4.705882  5.770370 46.162961 #> 18 4.500000  5.699794 46.168331 #> 19 4.263158  5.624182 45.555871 #> 20 4.100000  5.547972 45.493374 #>  #> $testend #> [1] 16 #>"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermPercent.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean germination percentage and number of seeds per time interval — MeanGermPercent","title":"Mean germination percentage and number of seeds per time interval — MeanGermPercent","text":"Compute following metrics: MeanGermPercent Mean/average germination percentage per unit time (\\(\\overline{GP}\\)) (Czabator 1962) . MeanGermNumber Number seeds germinated per unit time (\\(\\overline{N}\\)) (Khamassi et al. 2013) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermPercent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean germination percentage and number of seeds per time interval — MeanGermPercent","text":"","code":"MeanGermPercent(   germinated.seeds,   germ.counts,   total.seeds,   intervals,   partial = TRUE )  MeanGermNumber(germ.counts, intervals, partial = TRUE)"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermPercent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean germination percentage and number of seeds per time interval — MeanGermPercent","text":"germinated.seeds Number germinated seeds germ.counts Germination counts time interval. Can partial cumulative specified argument partial. total.seeds Total number seeds. intervals time intervals. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermPercent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean germination percentage and number of seeds per time interval — MeanGermPercent","text":"value mean germination percentage %   \\(\\mathrm{time^{-1}}\\) mean number seeds per time interval   \\(\\mathrm{count \\, time^{-1}}\\).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermPercent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean germination percentage and number of seeds per time interval — MeanGermPercent","text":"Mean germination percentage per unit time (\\(\\overline{GP}\\)) computed follows (Czabator 1962) . \\[\\overline{GP} = \\frac{GP}{T_{k}}\\] , \\(GP\\) final germination percentage, \\(T_{k}\\) time \\(k\\)th time interval, \\(k\\) total number time intervals required final germination. Mean number seeds germinated per unit time (\\(\\overline{N}\\)) computed follows (Khamassi et al. 2013) . \\[\\overline{N} = \\frac{N_{g}}{T_{k}}\\] , \\(N_{g}\\) number germinated seeds end germination test, \\(T_{k}\\) time \\(k\\)th time interval, \\(k\\) total number time intervals required final germination.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermPercent.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean germination percentage and number of seeds per time interval — MeanGermPercent","text":"Czabator FJ (1962). “Germination value: index combining speed completeness pine seed germination.” Forest Science, 8(4), 386–396. Khamassi K, Harbaoui K, Jaime ATdS, Jeddi FB (2013). “Optimal germination temperature assessed indices models field bean (Vicia faba L. var. minor).” Agriculturae Conspectus Scientificus, 78(2), 131–136.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermPercent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean germination percentage and number of seeds per time interval — MeanGermPercent","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- MeanGermPercent(germ.counts = x, total.seeds = 50, intervals = int) #> [1] 5.714286 MeanGermNumber(germ.counts = x, intervals = int) #> [1] 2.857143  # From cumulative germination counts #---------------------------------------------------------------------------- MeanGermPercent(germ.counts = y, total.seeds = 50, intervals = int, partial = FALSE) #> [1] 5.714286 MeanGermNumber(germ.counts = y, intervals = int, partial = FALSE) #> [1] 2.857143  # From number of germinated seeds #---------------------------------------------------------------------------- MeanGermPercent(germinated.seeds = 40, total.seeds = 50, intervals = int) #> [1] 5.714286"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermRate.html","id":null,"dir":"Reference","previous_headings":"","what":"Germination rate — MeanGermRate","title":"Germination rate — MeanGermRate","text":"Compute following metrics: MeanGermRate Mean germination rate (\\(\\overline{V}\\)) (Labouriau Valadares 1976; Labouriau 1983; Ranal de Santana 2006) . VarGermRate Variance germination rate (\\(s_{V}^{2}\\)) (Labouriau 1983; Ranal de Santana 2006) . SEGermRate Standard error germination rate (\\(s_{\\overline{V}}\\)) (Labouriau 1983; Ranal de Santana 2006) . CVG Coefficient velocity/rate germination Kotowski's coefficient velocity (\\(CVG\\)) (Kotowski 1926; Nichols Heydecker 1968; Labouriau 1983; Scott et al. 1984; Bewley Black 1994) . GermRateRecip Germination rate reciprocal median time (\\(v_{50}\\)) (Went 1957; Labouriau 1983; Ranal de Santana 2006) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermRate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Germination rate — MeanGermRate","text":"","code":"MeanGermRate(germ.counts, intervals, partial = TRUE)  CVG(germ.counts, intervals, partial = TRUE)  VarGermRate(germ.counts, intervals, partial = TRUE)  SEGermRate(germ.counts, intervals, partial = TRUE)  GermRateRecip(   germ.counts,   intervals,   partial = TRUE,   method = c(\"coolbear\", \"farooq\") )"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermRate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Germination rate — MeanGermRate","text":"germ.counts Germination counts time interval. Can partial cumulative specified argument partial. intervals time intervals. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE. method method computing median germination time. Either \"coolbear\" \"farooq\".","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermRate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Germination rate — MeanGermRate","text":"MeanGermRate, mean germination rate value   \\(\\mathrm{time^{-1}}\\). VarGermTime, variance germination rate value   \\(\\mathrm{time^{-2}}\\). SEGermTime, standard error germination rate   \\(\\mathrm{time^{-1}}\\). CVG, value Coefficient velocity/rate germination   Kotowski's coefficient velocity % \\(\\mathrm{time^{-1}}\\). GermRateRecip, value germination rate   \\(\\mathrm{time^{-1}}\\).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermRate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Germination rate — MeanGermRate","text":"MeanGermRate computes mean germination rate (\\(\\overline{V}\\)) according following formula (Labouriau Valadares 1976; Labouriau 1983; Ranal de Santana 2006) . \\[\\overline{V} = \\frac{\\sum_{=1}^{k}N_{}}{\\sum_{=1}^{k}N_{}T_{}}\\] , \\(T_{}\\) time start experiment \\(\\)th interval, \\(N_{}\\) number seeds germinated \\(\\)th time interval (accumulated number, number corresponding \\(\\)th interval), \\(k\\) total number time intervals. inverse mean germination time (\\(\\overline{T}\\)). \\[\\overline{V} = \\frac{1}{\\overline{T}}\\] VarGermRate computes variance germination rate (\\(s_{V}^{2}\\)) according following formula (Labouriau 1983; Ranal de Santana 2006) . \\[s_{V}^{2} = \\overline{V}^{4} \\times s_{T}^{2}\\] , \\(s_{T}^{2}\\) variance germination time. SEGermRate computes standard error germination time (\\(s_{\\overline{V}}\\)) according following formula (Labouriau 1983; Ranal de Santana 2006) . \\[s_{\\overline{V}} = \\sqrt{\\frac{s_{V}^{2}}{\\sum_{=1}^{k}N_{}}}\\] , \\(N_{}\\) number seeds germinated \\(\\)th time interval (accumulated number, number corresponding \\(\\)th interval), \\(k\\) total number time intervals. CVG computes coefficient velocity/rate germination Kotowski's coefficient velocity (\\(CVG\\)) according following formula (Kotowski 1926; Nichols Heydecker 1968; Labouriau 1983; Scott et al. 1984; Bewley Black 1994) . \\[CVG = \\frac{\\sum_{=1}^{k}N_{}}{\\sum_{=1}^{k}N_{}T_{}} \\times 100\\] \\[CVG = \\overline{V} \\times 100\\] , \\(T_{}\\) time start experiment \\(\\)th interval, \\(N_{}\\) number seeds germinated \\(\\)th time interval (accumulated number, number corresponding \\(\\)th interval), \\(k\\) total number time intervals. GermRateRecip computes germination rate (\\(v_{50}\\)) reciprocal median germination time (\\(t_{50}\\)) (Went 1957; Labouriau 1983; Ranal de Santana 2006)  according methods Coolbear et al. (1984)  (Specified argument method = \"coolbear\") Farooq et al. (2005)  (Specified argument method = \"farooq\") follows. \\[v_{50} = \\frac{1}{t_{50}}\\]","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermRate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Germination rate — MeanGermRate","text":"Bewley JD, Black M (1994). Physiology Development Germination. Plenum Publishing Corporation, New York, USA. ISBN 0-306-44748-7, tex.ids= bewley_ seeds:_1994, bewley_ seeds:_1994-1, bewley_ seeds:_1994-2 googlebooksid: W6EbrewcpDwC. Coolbear P, Francis , Grierson D (1984). “effect low temperature pre-sowing treatment germination performance membrane integrity artificially aged tomato seeds.” Journal Experimental Botany, 35(11), 1609–1617. Farooq M, Basra SMA, Ahmad N, Hafeez K (2005). “Thermal hardening: new seed vigor enhancement tool rice.” Journal Integrative Plant Biology, 47(2), 187–193. Kotowski F (1926). “Temperature relations germination vegetable seeds.” Proceedings American Society Horticultural Science, 23, 176–184. Labouriau LG (1983). “Uma nova linha de pesquisa na fisiologia da germinacao das sementes.” Anais XXXIV Congresso Nacional de Botanica. SBB, Porto Alegre, 11–50. Labouriau LG, Valadares MEB (1976). “germination seeds Calotropis procera (Ait.) Ait. f.” Anais da Academia Brasileira de Ciencias, 48(263-284). Nichols MA, Heydecker W (1968). “Two approaches study germination data.” Proceedings International Seed Testing Association, 33(3), 531–540. Ranal MA, de Santana DG (2006). “measure germination process?” Brazilian Journal Botany, 29(1), 1–11. Scott SJ, Jones RA, Williams WA (1984). “Review data analysis methods seed germination.” Crop Science, 24(6), 1192–1199. Went FW (1957). experimental control plant growth, volume 17. Chronica Botanica Co., Waltham, Mass., USA Ronald Press Co., New York, USA.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermRate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Germination rate — MeanGermRate","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- MeanGermRate(germ.counts = x, intervals = int) #> [1] 0.1492537 CVG(germ.counts = x, intervals = int) #> [1] 14.92537 VarGermRate(germ.counts = x, intervals = int) #> [1] 0.0007176543 SEGermRate(germ.counts = x, intervals = int) #> [1] 0.004235724 GermRateRecip(germ.counts = x, intervals = int, method = \"coolbear\") #> [1] 0.1674877 GermRateRecip(germ.counts = x, intervals = int, method = \"farooq\") #> [1] 0.1683168  # From cumulative germination counts #---------------------------------------------------------------------------- MeanGermRate(germ.counts = y, intervals = int, partial = FALSE) #> [1] 0.1492537 CVG(germ.counts = y, intervals = int, partial = FALSE) #> [1] 14.92537 VarGermRate(germ.counts = y, intervals = int, partial = FALSE) #> [1] 0.0007176543 SEGermRate(germ.counts = y, intervals = int, partial = FALSE) #> [1] 0.004235724 GermRateRecip(germ.counts = y, intervals = int,               method = \"coolbear\", partial = FALSE) #> [1] 0.1674877 GermRateRecip(germ.counts = y, intervals = int,               method = \"farooq\", partial = FALSE) #> [1] 0.1683168"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Germination time — MeanGermTime","title":"Germination time — MeanGermTime","text":"Compute following metrics: MeanGermTime Mean germination time (\\(\\overline{T}\\)) Mean length incubation time (Edmond Drapala 1958; Czabator 1962; Mock Eberhart 1972; Ellis Roberts 1980; Labouriau 1983; Ranal de Santana 2006) . VarGermTime Variance germination time (\\(s_{T}^{2}\\)) (Labouriau 1983; Ranal de Santana 2006) . SEGermTime Standard error germination time (\\(s_{\\overline{T}}\\)) (Labouriau 1983; Ranal de Santana 2006) . CVGermTime Coefficient variation germination time (\\(CV_{T}\\)) (Gomes 1960; Ranal de Santana 2006) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Germination time — MeanGermTime","text":"","code":"MeanGermTime(germ.counts, intervals, partial = TRUE)  VarGermTime(germ.counts, intervals, partial = TRUE)  SEGermTime(germ.counts, intervals, partial = TRUE)  CVGermTime(germ.counts, intervals, partial = TRUE)"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Germination time — MeanGermTime","text":"germ.counts Germination counts time interval. Can partial cumulative specified argument partial. intervals time intervals. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Germination time — MeanGermTime","text":"MeanGermTime, mean germination time value   unit time specified argument intervals. VarGermTime, variance germination time value   \\(\\mathrm{time^{2}}\\). SEGermTime, standard error germination time   unit time specified argument intervals. CVGermTime, value coefficient variation   germination time.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermTime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Germination time — MeanGermTime","text":"MeanGermTime computes mean germination time according following formula (Edmond Drapala 1958; Czabator 1962; Smith Millet 1964; Ellis Roberts 1980; Labouriau 1983; Ranal de Santana 2006) . \\[\\overline{T} = \\frac{\\sum_{=1}^{k}N_{}T_{}}{\\sum_{=1}^{k}N_{}}\\] , \\(T_{}\\) time start experiment \\(\\)th interval, \\(N_{}\\) number seeds germinated \\(\\)th time interval (accumulated number, number corresponding \\(\\)th interval), \\(k\\) total number time intervals. Sprouting Index (\\(SI\\)) Emergence Index (\\(EI\\)) described Smith Millet (1964)  Mock Eberhart (1972)  well Germination Resistance (\\(GR\\)) described Gordon (1969, 1971) . inverse mean germination rate (\\(\\overline{V}\\)). \\[\\overline{T} = \\frac{1}{\\overline{V}}\\] indicates average length time required maximum germination seed lot. Lower \\(\\overline{T}\\), faster sample germinated reflects seed vigor. VarGermTime computes variance germination time according following formula (Labouriau 1983; Ranal de Santana 2006) . \\[s_{T}^{2} = \\frac{\\sum_{=1}^{k}N_{}(T_{}-\\overline{T})^{2}}{\\sum_{=1}^{k}N_{}-1}\\] , \\(T_{}\\) time start experiment \\(\\)th interval, \\(N_{}\\) number seeds germinated \\(\\)th time interval (accumulated number, number corresponding \\(\\)th interval), \\(k\\) total number time intervals. SEGermTime computes standard error germination time (\\(s_{\\overline{T}}\\)) according following formula (Labouriau 1983; Ranal de Santana 2006) . \\[s_{\\overline{T}} = \\sqrt{\\frac{s_{T}^{2}}{\\sum_{=1}^{k}N_{}}}\\] , \\(N_{}\\) number seeds germinated \\(\\)th time interval (accumulated number, number corresponding \\(\\)th interval), \\(k\\) total number time intervals. signifies accuracy calculation mean germination time. CVGermTime computes coefficient variation germination time (\\(CV_{T}\\)) according following formula (Gomes 1960; Ranal de Santana 2006) . \\[CV_{T} = \\frac{\\sqrt{s_{T}^{2}}}{\\overline{T}}\\] indicates uniformity germination permits comparisons irrespective magnitude mean germination time (\\(\\overline{T}\\)).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermTime.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Germination time — MeanGermTime","text":"Czabator FJ (1962). “Germination value: index combining speed completeness pine seed germination.” Forest Science, 8(4), 386–396. Edmond JB, Drapala WJ (1958). “effects temperature, sand soil, acetone germination okra seed.” Proceedings American Society Horticultural Science, 71, 428–434. Ellis RH, Roberts EH (1980). “Improved equations prediction seed longevity.” Annals Botany, 45(1), 13–30. Gomes FP (1960). Curso De Estatistica Experimental. Escola Superior de Agricultura Luiz de Queiroz, Universidade de Sao Paulo. Gordon AG (1969). “observations germination energy tests cereals.” Proceedings Association Official Seed Analysts, 59, 58–72. Gordon AG (1971). “germination resistance test - new test measuring germination quality cereals.” Canadian Journal Plant Science, 51(2), 181–183. Labouriau LG (1983). Germinacao Das Sementes. Organizacao dos Estados Americanos. Programa Regional de Desenvolvimento Cientifico e Tecnologico. Serie de Biologia. Monografia 24. Mock JJ, Eberhart SA (1972). “Cold tolerance adapted maize populations.” Crop Science, 12(4), 466–469. Ranal MA, de Santana DG (2006). “measure germination process?” Brazilian Journal Botany, 29(1), 1–11. Smith PG, Millet AH (1964). “Germinating sprouting responses tomato low temperatures.” Proceedings American Society Horticultural Science, 84, 480–484.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/reference/MeanGermTime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Germination time — MeanGermTime","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- MeanGermTime(germ.counts = x, intervals = int) #> [1] 6.7 VarGermTime(germ.counts = x, intervals = int) #> [1] 1.446154 SEGermTime(germ.counts = x, intervals = int) #> [1] 0.1901416 CVGermTime(germ.counts = x, intervals = int) #> [1] 0.1794868  # From cumulative germination counts #---------------------------------------------------------------------------- MeanGermTime(germ.counts = y, intervals = int, partial = FALSE) #> [1] 6.7 VarGermTime(germ.counts = y, intervals = int, partial = FALSE) #> [1] 1.446154 SEGermTime(germ.counts = y, intervals = int, partial = FALSE) #> [1] 0.1901416 CVGermTime(germ.counts = y, intervals = int, partial = FALSE) #> [1] 0.1794868"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/TimsonsIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Timson's index — TimsonsIndex","title":"Timson's index — TimsonsIndex","text":"Compute George's index (George 1961; Tucker Wright 1965; Nichols Heydecker 1968; Chopra Chaudhary 1980) , Timson's index Timson's germination velocity index (Grose Zimmer 1958; Timson 1965; Lyon Coffelt 1966; Chaudhary Ghildyal 1970; Negm Smith 1978; Brown Mayer 1988; Baskin Baskin 1998)  modifications Labouriau (Ranal de Santana 2006)  (Khan Ungar 1984) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/TimsonsIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Timson's index — TimsonsIndex","text":"","code":"TimsonsIndex(   germ.counts,   intervals,   partial = TRUE,   total.seeds,   max,   modification = c(\"none\", \"labouriau\", \"khanungar\") )  GermRateGeorge(germ.counts, intervals, partial = TRUE, max)"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/TimsonsIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Timson's index — TimsonsIndex","text":"germ.counts Germination counts time interval. Can partial cumulative specified argument partial. intervals time intervals. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE. total.seeds Total number seeds. max maximum interval value Timson's index/George's germination rate computed. modification modification applied. Either \"none\", \"labouriau\" \"khanungar\". Default \"none\" (see Details).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/TimsonsIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Timson's index — TimsonsIndex","text":"TimsonsIndex, value Timson's index (%)   modification = \"none\". modification = \"labouriau\",   value unit modification = \"khanungar\", value   % \\(\\mathrm{time^{-1}}\\). GermRateGeorge value George's germination rate   \\(count time\\).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/TimsonsIndex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Timson's index — TimsonsIndex","text":"Timson's index (Timson 1965)  computed follows (Grose Zimmer 1958; Brown Mayer 1988; Baskin Baskin 1998) . \\[\\Sigma k = \\sum_{=1}^{k}G_{}\\] , \\(G_{}\\) cumulative germination percentage time interval \\(\\) \\(k\\) total number time intervals. example ten summation (\\(\\Sigma 10\\)) expressed follows. \\[\\Sigma 10 = G_{1}+G_{2}+\\cdots+G_{10}\\] \\(G_{1},G_{2},\\cdots G_{10}\\) cumulative germination percentage day 1, 2, 3, \\(\\cdots\\), 10 respectively. Similarly \\(\\Sigma 5\\) \\(\\Sigma 20\\) can estimated. \\(\\Sigma 10\\), value can range 0 (germination) 1,000 (100% germination 24 hours). progressive total cumulative germination percentage recorded specific intervals set period time.  combines onset, rate total percentage germination estimates area cumulative germination percentage curve. indices area time course curve germination described Lyon Coffelt (1966)  well Negm Smith (1978) . also described Emergence Rate Index (\\(ERI\\)) Chaudhary Ghildyal (1970) . Goodchild Walker (1971) , described terms partial germination percentage follows. \\[\\Sigma k = \\sum_{=1}^{k}g_{}(k-j)\\] , \\(g_{}\\) germination (cumulative, partial germination) time interval \\(\\) (\\(\\) varying \\(0\\) \\(k\\)), \\(k\\) total number time intervals, \\(j = - 1\\). Timson's index equivalent Germination Energy Index \\(GEI\\) proposed Grose Zimmer (1958) . Timson's index useful comparison samples similar germinabilities final germination percentage, following modification suggested Labouriau (Ranal de Santana 2006)  (Specified argument modification = \"labouriau\"). \\[\\Sigma k_{mod} = \\frac{\\Sigma k}{\\sum_{=1}^{k}g_{}}\\] Timson's index (\\(\\Sigma k\\)) divided sum partial germination percentages. Similarly another modification proposed (Khan Ungar 1984) , Timson's index (\\(\\Sigma k\\)) divided total time period germination (\\(T_{k}\\)) (Specified argument modification = \"khanungar\"). \\[\\Sigma k_{mod} = \\frac{\\Sigma k}{T_{k}}\\] Timson's index similar Germination Rate (\\(GR\\)) proposed George (1961)  follows (Tucker Wright 1965; Nichols Heydecker 1968) . \\[GR = \\sum_{=1}^{k}N_{}K_{}\\] \\(N_{}\\) number seeds germinated \\(\\)th interval, \\(K_{}\\) number intervals(e.g. days) end test, \\(k\\) total number time intervals. index uses number seeds germinated instead germination percentage. also described Emergence Rate Index (\\(ERI\\)) Chopra Chaudhary (1980) . germination rate (\\(GR\\)) can also described terms partial (\\(N_{}\\)) cumulative (\\(\\sum_{j=1}^{}N_{j}\\)) number seeds germinated time interval (\\(\\)) follows. \\[GR = \\sum_{=1}^{k}\\sum_{j=1}^{}N_{j}\\] \\[GR = \\sum_{=1}^{k}N_{}(k-j)\\]","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/TimsonsIndex.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Timson's index — TimsonsIndex","text":"Baskin CC, Baskin JM (1998). Seeds: Ecology, Biogeography, Evolution Dormancy Germination. Academic Press, San Diego. ISBN 0-12-080260-0. Brown RF, Mayer DG (1988). “Representing cumulative germination. 1. critical analysis single-value germination indices.” Annals Botany, 61(2), 117–125. Chaudhary TN, Ghildyal BP (1970). “Effect temperature associated levels bulk density rice seedling emergence.” Plant Soil, 33(1), 87–90. Chopra UK, Chaudhary TN (1980). “Effect soil temperature alteration soil covers seedling emergence wheat (Triticum aestivum L.) sown two dates.” Plant Soil, 57(1), 125–129. George DW (1961). “Influence germination temperature expression post-harvest dormancy wheat.” Crop Science Abstracts; Western Society Crop Science Annual Meeting, 1961, 15. Goodchild NA, Walker MG (1971). “method measuring seed germination physiological studies.” Annals Botany, 35(141), 615–621. Grose RJ, Zimmer WJ (1958). “laboratory germination responses seeds river red gum, Eucalyptus camaldulensis Dehn. Syn. Eucalyptus rostrata Schlecht.” Australian Journal Botany, 6(2), 129. Khan MA, Ungar IA (1984). “effect salinity temperature germination polymorphic seeds growth Atriplex triangularis Willd.” American Journal Botany, 71(4), 481–489. Lyon JL, Coffelt RJ (1966). “Rapid method determining numerical indexes time-course curves.” Nature, 211(5046), 330–330. Negm FB, Smith OE (1978). “Effects ethylene carbon dioxide germination osmotically inhibited lettuce seed.” Plant Physiology, 62(4), 473–476. Nichols MA, Heydecker W (1968). “Two approaches study germination data.” Proceedings International Seed Testing Association, 33(3), 531–540. Ranal MA, de Santana DG (2006). “measure germination process?” Brazilian Journal Botany, 29(1), 1–11. Timson J (1965). “New method recording germination data.” Nature, 207(4993), 216. Tucker H, Wright LN (1965). “Estimating rapidity germination.” Crop Science, 5(5), 398–399.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/TimsonsIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Timson's index — TimsonsIndex","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- # Without max specified TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50) #> [1] 664 TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50,              modification = \"none\") #> [1] 664 TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50,              modification = \"labouriau\") #> [1] 8.3 TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50,              modification = \"khanungar\") #> [1] 47.42857 GermRateGeorge(germ.counts = x, intervals = int) #> [1] 332  # With max specified TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50, max = 10) #> [1] 344 TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50,              max = 10, modification = \"none\") #> [1] 344 TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50,              max = 10, modification = \"labouriau\") #> [1] 4.410256 TimsonsIndex(germ.counts = x, intervals = int, total.seeds = 50,              max = 10, modification = \"khanungar\") #> [1] 24.57143 GermRateGeorge(germ.counts = x, intervals = int, max = 10) #> [1] 172 GermRateGeorge(germ.counts = x, intervals = int, max = 14) #> [1] 332   # From cumulative germination counts #---------------------------------------------------------------------------- # Without max specified TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50) #> [1] 664 TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50,              modification = \"none\") #> [1] 664 TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50,              modification = \"labouriau\") #> [1] 8.3 TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50,              modification = \"khanungar\") #> [1] 47.42857 GermRateGeorge(germ.counts = y, intervals = int, partial = FALSE) #> [1] 332  # With max specified TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50, max = 10) #> [1] 344 TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50,              max = 10, modification = \"none\") #> [1] 344 TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50,              max = 10, modification = \"labouriau\") #> [1] 4.410256 TimsonsIndex(germ.counts = y, intervals = int, partial = FALSE,              total.seeds = 50,              max = 10, modification = \"khanungar\") #> [1] 24.57143 GermRateGeorge(germ.counts = y, intervals = int, partial = FALSE,                max = 10) #> [1] 172 GermRateGeorge(germ.counts = y, intervals = int, partial = FALSE,                max = 14) #> [1] 332"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/WeightGermPercent.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted germination percentage — WeightGermPercent","title":"Weighted germination percentage — WeightGermPercent","text":"Compute Weighted germination percentage \\(WGP\\) Weighted germination index \\(WGI\\) (Reddy 1978; Reddy et al. 1985) .","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/WeightGermPercent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted germination percentage — WeightGermPercent","text":"","code":"WeightGermPercent(germ.counts, total.seeds, intervals, partial = TRUE)"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/WeightGermPercent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted germination percentage — WeightGermPercent","text":"germ.counts Germination counts time interval. Can partial cumulative specified argument partial. total.seeds Total number seeds tested. intervals time intervals. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/WeightGermPercent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted germination percentage — WeightGermPercent","text":"weighted germination percentage (%) value.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/WeightGermPercent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted germination percentage — WeightGermPercent","text":"Weighted germination percentage calculated giving maximum weight seeds germinate first decreasing weight seeds germinate subsequently. computed follows (Reddy 1978; Reddy et al. 1985) . \\[WGP = \\frac{\\sum_{=1}^{k}(k-+1)N_{}}{k \\times N} \\times 100\\] , \\(N_{}\\)   number seeds germinated time interval \\(\\) (cumulative, partial count), \\(N\\) total number seeds tested, \\(k\\)  total number time intervals.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/WeightGermPercent.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weighted germination percentage — WeightGermPercent","text":"Reddy LV (1978). Effect temperature seed dormancy alpha-amylase activity kernel maturation germination wheat (Triticum aestivum L.) cultivars. Ph.D. Thesis, Oregon State University. Reddy LV, Metzger RJ, Ching TM (1985). “Effect temperature seed dormancy wheat.” Crop Science, 25(3), 455.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/WeightGermPercent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted germination percentage — WeightGermPercent","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- WeightGermPercent(germ.counts = x, total.seeds = 50, intervals = int) #> [1] 47.42857  # From cumulative germination counts #---------------------------------------------------------------------------- WeightGermPercent(germ.counts = y, total.seeds = 50, intervals = int,                   partial = FALSE) #> [1] 47.42857"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/gcdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Germination count data — gcdata","title":"Germination count data — gcdata","text":"example germination count dataset. includes germination count data 14 days five genotypes (G1 G5) three replications","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/gcdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Germination count data — gcdata","text":"","code":"gcdata"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/gcdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Germination count data — gcdata","text":"data frame 17 columns: Genotype   genotype. Rep Replication. Day01 Number seeds   germinated (germination counts) Day 1. Day02 Number seeds   germinated (germination counts) Day 2. Day03 Number   seeds germinated (germination counts) Day 3. Day04 Number   seeds germinated (germination counts) Day 4. Day05 Number seeds germinated (germination counts) Day   5. Day06 Number seeds germinated (germination counts)   Day 6. Day07 Number seeds germinated (germination counts)   Day 7. Day08 Number seeds germinated (germination   counts) Day 8. Day09 Number seeds germinated   (germination counts) Day 9. Day10 Number seeds   germinated (germination counts) Day 10. Day11 Number seeds   germinated (germination counts) Day 11. Day12 Number   seeds germinated (germination counts) Day 12. Day13 Number   seeds germinated (germination counts) Day 13. Day14 Number seeds germinated (germination counts) Day   14. Total Seeds Total number seeds tested.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/gcdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Germination count data — gcdata","text":"","code":"# \\donttest{ data(gcdata) library(ggplot2) library(reshape2)  # Plot partial germination counts over time #---------------------------------------------------------------------------- # Convert wide-from to long-form gcdatamelt <- melt(gcdata[, !names(gcdata) %in% c(\"Total Seeds\")],                    id.vars = c(\"Genotype\", \"Rep\"))  ggplot(gcdatamelt, aes(x = variable, y = value,                        group = interaction(Genotype, Rep),                        colour = Genotype)) +   geom_point(alpha = 0.7) +   geom_line(alpha = 0.7) +   ylab(\"Germination count (Partial)\") +   xlab(\"Intervals\") +   theme_bw()   # Plot partial germination counts over time #----------------------------------------------------------------------------  # Convert wide-from to long-form # Compute cumulative germination counts gcdata2 <- gcdata gcdata2[, !names(gcdata2) %in% c(\"Genotype\", \"Rep\", \"Total Seeds\")] <-   t(apply(gcdata2[, !names(gcdata2) %in% c(\"Genotype\", \"Rep\", \"Total Seeds\")], 1, cumsum))   gcdatamelt2 <- melt(gcdata2[, !names(gcdata2) %in% c(\"Total Seeds\")],                     id.vars = c(\"Genotype\", \"Rep\"))  ggplot(gcdatamelt2, aes(x = variable, y = value,                         group = interaction(Genotype, Rep),                         colour = Genotype)) +   geom_point(alpha = 0.7) +   geom_line(alpha = 0.7) +   ylab(\"Germination count (Cumulative)\") +   xlab(\"Intervals\") +   theme_bw()   # Compute germination indices #----------------------------------------------------------------------------  counts.per.intervals <- c(\"Day01\", \"Day02\", \"Day03\", \"Day04\", \"Day05\",                           \"Day06\", \"Day07\", \"Day08\", \"Day09\", \"Day10\",                           \"Day11\", \"Day12\", \"Day13\", \"Day14\") germination.indices(gcdata, total.seeds.col = \"Total Seeds\",                     counts.intervals.cols = counts.per.intervals,                     intervals = 1:14, partial = TRUE, max.int = 5) #>    Genotype Rep Day01 Day02 Day03 Day04 Day05 Day06 Day07 Day08 Day09 Day10 #> 1        G1   1     0     0     0     0     4    17    10     7     1     0 #> 2        G2   1     0     0     0     1     3    15    13     6     2     1 #> 3        G3   1     0     0     0     2     3    18     9     8     2     1 #> 4        G4   1     0     0     0     0     4    19    12     6     2     1 #> 5        G5   1     0     0     0     0     5    20    12     8     1     0 #> 6        G1   2     0     0     0     0     3    21    11     7     1     1 #> 7        G2   2     0     0     0     0     4    18    11     7     1     0 #> 8        G3   2     0     0     0     1     3    14    12     6     2     1 #> 9        G4   2     0     0     0     1     3    19    10     8     1     1 #> 10       G5   2     0     0     0     0     4    18    13     6     2     1 #> 11       G1   3     0     0     0     0     5    21    11     8     1     0 #> 12       G2   3     0     0     0     0     3    20    10     7     1     1 #> 13       G3   3     0     0     0     0     4    19    12     8     1     1 #> 14       G4   3     0     0     0     0     3    21    11     6     1     0 #> 15       G5   3     0     0     0     0     4    17    10     8     1     1 #>    Day11 Day12 Day13 Day14 Total Seeds GermPercent PeakGermPercent #> 1      1     0     0     0          50    80.00000        34.00000 #> 2      0     1     0     0          51    82.35294        29.41176 #> 3      1     1     0     0          48    93.75000        37.50000 #> 4      1     1     0     0          51    90.19608        37.25490 #> 5      0     1     1     0          50    96.00000        40.00000 #> 6      1     1     0     0          49    93.87755        42.85714 #> 7      1     0     0     0          48    87.50000        37.50000 #> 8      0     1     0     0          47    85.10638        29.78723 #> 9      1     1     0     0          52    86.53846        36.53846 #> 10     0     1     0     0          50    90.00000        36.00000 #> 11     0     1     1     0          51    94.11765        41.17647 #> 12     1     1     0     0          51    86.27451        39.21569 #> 13     0     1     1     0          49    95.91837        38.77551 #> 14     1     1     0     0          48    91.66667        43.75000 #> 15     1     0     0     0          48    87.50000        35.41667 #>    FirstGermTime LastGermTime PeakGermTime TimeSpreadGerm t50_Coolbear #> 1              5           11            6              6     5.970588 #> 2              4           12            6              8     6.192308 #> 3              4           12            6              8     6.333333 #> 4              5           12            6              7     6.041667 #> 5              5           13            6              8     5.975000 #> 6              5           12            6              7     5.976190 #> 7              5           11            6              6     5.972222 #> 8              4           12            6              8     6.208333 #> 9              4           12            6              8     6.310345 #> 10             5           12            6              7     6.076923 #> 11             5           13            6              8     5.928571 #> 12             5           12            6              7     5.975000 #> 13             5           13            6              8     6.083333 #> 14             5           12            6              7     5.928571 #> 15             5           11            6              6     6.050000 #>    t50_Farooq MeanGermTime VarGermTime SEGermTime CVGermTime MeanGermRate #> 1    5.941176     6.700000    1.446154  0.1901416  0.1794868    0.1492537 #> 2    6.153846     6.857143    2.027875  0.2197333  0.2076717    0.1458333 #> 3    5.972222     6.866667    2.572727  0.2391061  0.2335882    0.1456311 #> 4    6.225806     6.891304    2.187923  0.2180907  0.2146419    0.1451104 #> 5    5.950000     6.812500    2.368351  0.2221275  0.2259002    0.1467890 #> 6    5.952381     6.869565    2.071498  0.2122088  0.2095140    0.1455696 #> 7    5.944444     6.690476    1.389663  0.1818989  0.1761967    0.1494662 #> 8    6.166667     6.875000    2.112179  0.2297923  0.2113940    0.1454545 #> 9    5.973684     6.866667    2.300000  0.2260777  0.2208604    0.1456311 #> 10   6.038462     6.822222    1.831313  0.2017321  0.1983606    0.1465798 #> 11   5.904762     6.791667    2.381206  0.2227295  0.2272072    0.1472393 #> 12   5.950000     6.886364    2.149577  0.2210295  0.2129053    0.1452145 #> 13   6.041667     6.936170    2.539315  0.2324392  0.2297410    0.1441718 #> 14   5.904762     6.772727    1.900634  0.2078370  0.2035568    0.1476510 #> 15   6.259259     6.809524    1.670151  0.1994129  0.1897847    0.1468531 #>     VarGermRate  SEGermRate      CVG GermRateRecip_Coolbear #> 1  0.0007176543 0.004235724 14.92537              0.1674877 #> 2  0.0009172090 0.004673148 14.58333              0.1614907 #> 3  0.0011572039 0.005071059 14.56311              0.1578947 #> 4  0.0009701218 0.004592342 14.51104              0.1655172 #> 5  0.0010995627 0.004786184 14.67890              0.1673640 #> 6  0.0009301809 0.004496813 14.55696              0.1673307 #> 7  0.0006935558 0.004063648 14.94662              0.1674419 #> 8  0.0009454531 0.004861721 14.54545              0.1610738 #> 9  0.0010345321 0.004794747 14.56311              0.1584699 #> 10 0.0008453940 0.004334343 14.65798              0.1645570 #> 11 0.0011191581 0.004828643 14.72393              0.1686747 #> 12 0.0009558577 0.004660905 14.52145              0.1673640 #> 13 0.0010970785 0.004831366 14.41718              0.1643836 #> 14 0.0009033254 0.004531018 14.76510              0.1686747 #> 15 0.0007767634 0.004300508 14.68531              0.1652893 #>    GermRateRecip_Farooq GermSpeed_Count GermSpeed_Percent #> 1             0.1683168        6.138925          12.27785 #> 2             0.1625000        6.362698          12.47588 #> 3             0.1674419        6.882179          14.33787 #> 4             0.1606218        6.927417          13.58317 #> 5             0.1680672        7.318987          14.63797 #> 6             0.1680000        6.931782          14.14649 #> 7             0.1682243        6.448449          13.43427 #> 8             0.1621622        6.053175          12.87909 #> 9             0.1674009        6.830592          13.13575 #> 10            0.1656051        6.812698          13.62540 #> 11            0.1693548        7.342796          14.39764 #> 12            0.1680672        6.622258          12.98482 #> 13            0.1655172        7.052320          14.39249 #> 14            0.1693548        6.706782          13.97246 #> 15            0.1597633        6.363925          13.25818 #>    GermSpeedAccumulated_Count GermSpeedAccumulated_Percent #> 1                    34.61567                     69.23134 #> 2                    35.54058                     69.68741 #> 3                    38.29725                     79.78594 #> 4                    38.68453                     75.85202 #> 5                    41.00786                     82.01571 #> 6                    38.77620                     79.13509 #> 7                    36.38546                     75.80304 #> 8                    33.77079                     71.85275 #> 9                    38.11511                     73.29829 #> 10                   38.19527                     76.39054 #> 11                   41.17452                     80.73436 #> 12                   37.00640                     72.56158 #> 13                   39.29399                     80.19182 #> 14                   37.69490                     78.53103 #> 15                   35.69697                     74.36868 #>    GermSpeedCorrected_Normal GermSpeedCorrected_Accumulated WeightGermPercent #> 1                  0.1534731                      0.8653917          47.42857 #> 2                  0.1514928                      0.8462043          47.89916 #> 3                  0.1529373                      0.8510501          54.46429 #> 4                  0.1505960                      0.8409680          52.24090 #> 5                  0.1524789                      0.8543303          56.14286 #> 6                  0.1506909                      0.8429608          54.51895 #> 7                  0.1535345                      0.8663205          51.93452 #> 8                  0.1513294                      0.8442698          49.39210 #> 9                  0.1517909                      0.8470024          50.27473 #> 10                 0.1513933                      0.8487837          52.57143 #> 11                 0.1529749                      0.8578026          55.18207 #> 12                 0.1505059                      0.8410547          50.00000 #> 13                 0.1500494                      0.8360424          55.24781 #> 14                 0.1524269                      0.8567022          53.86905 #> 15                 0.1515220                      0.8499278          51.19048 #>    MeanGermPercent MeanGermNumber TimsonsIndex TimsonsIndex_Labouriau #> 1         5.714286       2.857143     8.000000                   1.00 #> 2         5.882353       3.000000     9.803922                   1.25 #> 3         6.696429       3.214286    14.583333                   1.40 #> 4         6.442577       3.285714     7.843137                   1.00 #> 5         6.857143       3.428571    10.000000                   1.00 #> 6         6.705539       3.285714     6.122449                   1.00 #> 7         6.250000       3.000000     8.333333                   1.00 #> 8         6.079027       2.857143    10.638298                   1.25 #> 9         6.181319       3.214286     9.615385                   1.25 #> 10        6.428571       3.214286     8.000000                   1.00 #> 11        6.722689       3.428571     9.803922                   1.00 #> 12        6.162465       3.142857     5.882353                   1.00 #> 13        6.851312       3.357143     8.163265                   1.00 #> 14        6.547619       3.142857     6.250000                   1.00 #> 15        6.250000       3.000000     8.333333                   1.00 #>    TimsonsIndex_KhanUngar GermRateGeorge GermIndex GermIndex_mod #> 1               0.5714286              4  5.840000      7.300000 #> 2               0.7002801              5  5.882353      7.142857 #> 3               1.0416667              7  6.687500      7.133333 #> 4               0.5602241              4  6.411765      7.108696 #> 5               0.7142857              5  6.900000      7.187500 #> 6               0.4373178              3  6.693878      7.130435 #> 7               0.5952381              4  6.395833      7.309524 #> 8               0.7598784              5  6.063830      7.125000 #> 9               0.6868132              5  6.173077      7.133333 #> 10              0.5714286              4  6.460000      7.177778 #> 11              0.7002801              5  6.784314      7.208333 #> 12              0.4201681              3  6.137255      7.113636 #> 13              0.5830904              4  6.775510      7.063830 #> 14              0.4464286              3  6.625000      7.227273 #> 15              0.5952381              4  6.291667      7.190476 #>    EmergenceRateIndex_SG EmergenceRateIndex_SG_mod #> 1                    292                  7.300000 #> 2                    300                  7.142857 #> 3                    321                  7.133333 #> 4                    327                  7.108696 #> 5                    345                  7.187500 #> 6                    328                  7.130435 #> 7                    307                  7.309524 #> 8                    285                  7.125000 #> 9                    321                  7.133333 #> 10                   323                  7.177778 #> 11                   346                  7.208333 #> 12                   313                  7.113636 #> 13                   332                  7.063830 #> 14                   318                  7.227273 #> 15                   302                  7.190476 #>    EmergenceRateIndex_BilbroWanjura EmergenceRateIndex_Fakorede PeakValue #> 1                          5.970149                    8.375000  9.500000 #> 2                          6.125000                    8.326531  9.313725 #> 3                          6.553398                    7.324444 10.416667 #> 4                          6.675079                    7.640359 10.049020 #> 5                          7.045872                    7.096354 11.250000 #> 6                          6.696203                    7.317580 10.714286 #> 7                          6.277580                    7.646259 10.416667 #> 8                          5.818182                    8.078125  9.574468 #> 9                          6.553398                    7.934815  9.855769 #> 10                         6.596091                    7.580247 10.250000 #> 11                         7.067485                    7.216146 11.029412 #> 12                         6.389439                    7.981921  9.803922 #> 13                         6.776074                    7.231326 10.969388 #> 14                         6.496644                    7.388430 10.677083 #> 15                         6.167832                    7.782313 10.156250 #>    GermValue_Czabator GermValue_DP GermValue_Czabator_mod GermValue_DP_mod #> 1            54.28571     57.93890               54.28571         39.56076 #> 2            54.78662     52.58713               54.78662         40.99260 #> 3            69.75446     68.62289               69.75446         53.42809 #> 4            64.74158     70.43331               64.74158         48.86825 #> 5            77.14286     80.16914               77.14286         56.23935 #> 6            71.84506     76.51983               71.84506         53.06435 #> 7            65.10417     69.41325               65.10417         47.37690 #> 8            58.20345     56.00669               58.20345         43.67948 #> 9            60.92165     58.13477               60.92165         45.30801 #> 10           65.89286     70.91875               65.89286         49.10820 #> 11           74.14731     77.39782               74.14731         54.27520 #> 12           60.41632     64.44988               60.41632         44.71582 #> 13           75.15470     78.16335               75.15470         54.94192 #> 14           69.90947     74.40140               69.90947         51.41913 #> 15           63.47656     67.62031               63.47656         46.48043 #>       CUGerm GermSynchrony GermUncertainty #> 1  0.7092199     0.2666667        2.062987 #> 2  0.5051546     0.2346109        2.321514 #> 3  0.3975265     0.2242424        2.462012 #> 4  0.4672113     0.2502415        2.279215 #> 5  0.4312184     0.2606383        2.146051 #> 6  0.4934701     0.2792271        2.160545 #> 7  0.7371500     0.2729384        2.040796 #> 8  0.4855842     0.2256410        2.357249 #> 9  0.4446640     0.2494949        2.321080 #> 10 0.5584666     0.2555556        2.187983 #> 11 0.4288905     0.2686170        2.128670 #> 12 0.4760266     0.2737844        2.185245 #> 13 0.4023679     0.2506938        2.241181 #> 14 0.5383760     0.2991543        2.037680 #> 15 0.6133519     0.2497096        2.185028 # }"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/germination.indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Germination Indices — germination.indices","title":"Germination Indices — germination.indices","text":"Compute germination indices data frame germination counts recorded specific time intervals multiple samples batch.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/germination.indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Germination Indices — germination.indices","text":"","code":"germination.indices(   data,   total.seeds.col,   counts.intervals.cols,   intervals,   partial = TRUE,   PeakGermPercent = TRUE,   FirstGermTime = TRUE,   LastGermTime = TRUE,   PeakGermTime = TRUE,   TimeSpreadGerm = TRUE,   t50 = TRUE,   MeanGermTime = TRUE,   VarGermTime = TRUE,   SEGermTime = TRUE,   CVGermTime = TRUE,   MeanGermRate = TRUE,   CVG = TRUE,   VarGermRate = TRUE,   SEGermRate = TRUE,   GermRateRecip = TRUE,   GermSpeed = TRUE,   GermSpeedAccumulated = TRUE,   GermSpeedCorrected = TRUE,   WeightGermPercent = TRUE,   MeanGermPercent = TRUE,   MeanGermNumber = TRUE,   TimsonsIndex = TRUE,   GermRateGeorge = TRUE,   max.int,   GermIndex = TRUE,   EmergenceRateIndex = TRUE,   PeakValue = TRUE,   GermValue = TRUE,   gv.k = 10,   CUGerm = TRUE,   GermSynchrony = TRUE,   GermUncertainty = TRUE )"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/germination.indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Germination Indices — germination.indices","text":"data data frame germination count data. possess columns Partial cumulative germination counts per time interval (indicated argument counts.intervals.cols Total number seeds tested (indicated argument total.seeds.col). total.seeds.col name column data total number seeds tested. counts.intervals.cols names columns data germination counts (partial cumulative, indicated argument partial) per time interval (indicated argument intervals). intervals time intervals germination counts (columns specified argument counts.intervals.cols)  recorded. partial logical. TRUE, germination counts counts.intervals.cols considered partial FALSE, considered cumulative. Default TRUE. PeakGermPercent logical. TRUE, Peak germination percentage (Vallance 1950; Roh et al. 2004)  computed. Default TRUE. FirstGermTime logical. TRUE, Time first germination Germination time lag (\\(t_{0}\\)) (Edwards 1932; Czabator 1962; Goloff Bazzaz 1975; Labouriau 1983; Ranal 1999; Quintanilla et al. 2000)   computed. Default TRUE. LastGermTime logical. TRUE, Time last germination (\\(t_{g}\\)) (Edwards 1932; Labouriau 1983; Ranal de Santana 2006) .  computed. Default TRUE. PeakGermTime logical. TRUE, Peak time germination Modal time germination (Ranal de Santana 2006)  computed. Default TRUE. TimeSpreadGerm logical. TRUE, Time spread germination (Al-Mudaris 1998; Kader 2005)   Germination distribution (Schrader Graves 2000) . computed. Default TRUE. t50 logical. TRUE, Median germination time (\\(t_{50}\\)) (Coolbear et al. 1984; Farooq et al. 2005)  computed. Default TRUE. MeanGermTime logical. TRUE, Mean germination time (\\(\\overline{T}\\)) Mean length incubation time (Edmond Drapala 1958; Czabator 1962; Ellis Roberts 1980; Labouriau 1983; Ranal de Santana 2006) .  Sprouting index (\\(SI\\)) (Smith Millet 1964)  Germination Resistance (\\(GR\\)) Gordon (1969, 1971)   computed. Default TRUE. VarGermTime logical. TRUE, Variance germination time (\\(s_{T}^{2}\\)) (Labouriau 1983; Ranal de Santana 2006)  computed. Default TRUE. SEGermTime logical. TRUE, Standard error germination time (\\(s_{\\overline{T}}\\)) (Labouriau 1983; Ranal de Santana 2006) . computed. Default TRUE. CVGermTime logical. TRUE, Coefficient variation germination time (\\(CV_{T}\\)) (Ranal de Santana 2006)  computed. Default TRUE. MeanGermRate logical. TRUE, Mean germination rate (\\(\\overline{V}\\)) (Labouriau Valadares 1976; Labouriau 1983; Ranal de Santana 2006) .  computed. Default TRUE. CVG logical. TRUE, Coefficient velocity/rate germination Kotowski's coefficient velocity (\\(CVG\\)) (Kotowski 1926; Nichols Heydecker 1968; Labouriau 1983; Scott et al. 1984; Bewley Black 1994) .  computed. Default TRUE. VarGermRate logical. TRUE, Variance germination rate (\\(s_{V}^{2}\\)) (Labouriau 1983; Ranal de Santana 2006)  computed. Default TRUE. SEGermRate logical. TRUE, Standard error germination rate (\\(s_{\\overline{V}}\\)) (Labouriau 1983; Ranal de Santana 2006)  computed. Default TRUE. GermRateRecip logical. TRUE, Germination rate reciprocal median time (\\(v_{50}\\)) (Went 1957; Labouriau 1983; Ranal de Santana 2006)   computed. GermSpeed logical. TRUE, Speed germination Germination rate index Index velocity germination Germination index Emergence rate index (Throneberry Smith 1955; Maguire 1962; Allan et al. 1962; Kendrick Frankland 1969; Bouton et al. 1976; AOSA 1983; Khandakar Bradbeer 1983; Bradbeer 1988; Wardle et al. 1991)   considering counts percentages computed. GermSpeedAccumulated logical. TRUE, Speed accumulated germination (Bradbeer 1988; Wardle et al. 1991; Haugland Brandsaeter 1996; de Santana Ranal 2004)   considering counts percentages computed. GermSpeedCorrected logical. TRUE, Corrected speed germination Corrected germination rate index Corrected speed accumulated germination (Evetts Burnside 1972)  computed. WeightGermPercent logical. TRUE, Weighted germination percentage \\(WGP\\) Weighted germination index \\(WGI\\) (Reddy 1978; Reddy et al. 1985)  computed. MeanGermPercent logical. TRUE, Mean/average germination percentage per unit time (\\(\\overline{GP}\\)) (Czabator 1962)  computed. MeanGermNumber logical. TRUE, Number seeds germinated per unit time (\\(\\overline{N}\\)) (Khamassi et al. 2013)  computed. TimsonsIndex logical. TRUE, Timson's index Timson's germination velocity index (Grose Zimmer 1958; Timson 1965; Brown Mayer 1988; Baskin Baskin 1998)   modifications Labouriau (Ranal de Santana 2006)  (Khan Ungar 1984)  computed. GermRateGeorge logical. TRUE, George's index George (1961)  computed. max.int maximum interval value Timson's index/George's germination rate computed. GermIndex logical. TRUE, Germination index according Melville et al. (1980)  modification de Santana Ranal (2004)  (Ranal de Santana 2006)  computed. EmergenceRateIndex logical. TRUE, Emergence rate index Germination rate index computed according Shmueli Goldberg (1971)  modification de Santana Ranal (2004)  (Ranal de Santana 2006) ; Bilbro Wanjura (1982) ; Fakorede Ayoola (1980) , Fakorede Ojo (1981) ,  Fakorede Agbana (1983) . PeakValue logical. TRUE, Peak value (\\(PV\\)) Emergence Energy (\\(EE\\)) (Czabator 1962; Bonner 1967)   computed. GermValue logical. TRUE, Germination value (Czabator 1962; Djavanshir Pourbeik 1976)   modification considering duration start test instead onset germination (Brown Mayer 1988)  computed. gv.k k Constant computation germination value. Default 10. CUGerm logical. TRUE, Coefficient uniformity germination (CUG) (Heydecker 1972; Bewley Black 1994)  computed. GermSynchrony logical. TRUE, Synchrony germination (\\(Z\\) index) (Primack 1985; Ranal de Santana 2006)  computed. GermUncertainty logical. TRUE, Synchronization index (\\(\\overline{E}\\)) Uncertainty germination process (\\(U\\)) Informational entropy (\\(H\\)) (Shannon 1948; Labouriau Valadares 1976; Labouriau 1983)   computed.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/germination.indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Germination Indices — germination.indices","text":"data frame original data along various   single-value germination indices specified function arguments.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/germination.indices.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Germination Indices — germination.indices","text":"Al-Mudaris MA (1998). “Notes various parameters recording speed seed germination.” Der Tropenlandwirt - Journal Agriculture Tropics Subtropics, 99(2), 147–154. Allan RE, Vogel OA, Peterson CJ (1962). “Seedling emergence rate fall-sown wheat association plant height coleoptile length.” Agronomy Journal, 54(4), 347. AOSA (1983). Seed Vigor Testing Handbook. Association Official Seed Analysts, Ithaca, NY, USA. Baskin CC, Baskin JM (1998). Seeds: Ecology, Biogeography, Evolution Dormancy Germination. Academic Press, San Diego. ISBN 0-12-080260-0. Bewley JD, Black M (1994). Physiology Development Germination. Plenum Publishing Corporation, New York, USA. ISBN 0-306-44748-7, tex.ids= bewley_ seeds:_1994, bewley_ seeds:_1994-1, bewley_ seeds:_1994-2 googlebooksid: W6EbrewcpDwC. Bilbro JD, Wanjura DF (1982). “Soil crusts cotton emergence relationships.” Transactions ASAE, 25(6), 1484–1487. Bonner FT (1967). “Ideal sowing depth sweetgum seed.” Tree Planters' Notes, 18(1), 1–1. Bouton JH, Dudeck AE, Smith RL (1976). “Germination freshly harvested seed centipedegrass.” Agronomy Journal, 68(6), 991. Bradbeer JW (1988). Seed Dormancy Germination. Blackie, Glasgow London. Brown RF, Mayer DG (1988). “Representing cumulative germination. 1. critical analysis single-value germination indices.” Annals Botany, 61(2), 117–125. Coolbear P, Francis , Grierson D (1984). “effect low temperature pre-sowing treatment germination performance membrane integrity artificially aged tomato seeds.” Journal Experimental Botany, 35(11), 1609–1617. Czabator FJ (1962). “Germination value: index combining speed completeness pine seed germination.” Forest Science, 8(4), 386–396. de Santana DG, Ranal MA (2004). Analise Da Germinacao: Um Enfoque Estatistico. Universidade de Brasilia, Brasilia. Djavanshir K, Pourbeik H (1976). “Germination value-new formula.” Silvae Genetica, 25(2), 79–83. Edmond JB, Drapala WJ (1958). “effects temperature, sand soil, acetone germination okra seed.” Proceedings American Society Horticultural Science, 71, 428–434. Edwards TI (1932). “Temperature relations seed germination.” Quarterly Review Biology, 7(4), 428–443. Ellis RH, Roberts EH (1980). “Improved equations prediction seed longevity.” Annals Botany, 45(1), 13–30. Evetts LL, Burnside OC (1972). “Germination seedling development common milkweed species.” Weed Science, 20(4), 371–378. Fakorede MAB, Agbana SB (1983). “Heterotic effects association seedling vigour mature characteristics grain yield tropical maize cultivars.” Maydica, 28, 327–338. Fakorede MAB, Ayoola AO (1980). “Relation seedling vigor selection yield improvement maize.” Maydica, 25(3), 135–147. Fakorede MAB, Ojo DK (1981). “Variability seedling vigour maize.” Experimental Agriculture, 17(2), 195–201. Farooq M, Basra SMA, Ahmad N, Hafeez K (2005). “Thermal hardening: new seed vigor enhancement tool rice.” Journal Integrative Plant Biology, 47(2), 187–193. George DW (1961). “Influence germination temperature expression post-harvest dormancy wheat.” Crop Science Abstracts; Western Society Crop Science Annual Meeting, 1961, 15. Goloff AA, Bazzaz FA (1975). “germination model natural seed populations.” Journal Theoretical Biology, 52(2), 259–283. Gordon AG (1969). “observations germination energy tests cereals.” Proceedings Association Official Seed Analysts, 59, 58–72. Gordon AG (1971). “germination resistance test - new test measuring germination quality cereals.” Canadian Journal Plant Science, 51(2), 181–183. Grose RJ, Zimmer WJ (1958). “laboratory germination responses seeds river red gum, Eucalyptus camaldulensis Dehn. Syn. Eucalyptus rostrata Schlecht.” Australian Journal Botany, 6(2), 129. Haugland E, Brandsaeter LO (1996). “Experiments bioassay sensitivity study allelopathy.” Journal Chemical Ecology, 22(10), 1845–1859. Heydecker W (1972). Seed Ecology. Proceedings Nineteenth Easter School Agricultural Science, University Nottingham, 1972. Pennsylvania State University Press, University Park, USA. Kader MA (2005). “comparison seed germination calculation formulae associated interpretation resulting data.” Journal Proceedings Royal Society New South Wales, 138, 65–75. Kendrick RE, Frankland B (1969). “Photocontrol germination Amaranthus caudatus.” Planta, 85(4), 326–339. Khamassi K, Harbaoui K, Jaime ATdS, Jeddi FB (2013). “Optimal germination temperature assessed indices models field bean (Vicia faba L. var. minor).” Agriculturae Conspectus Scientificus, 78(2), 131–136. Khan MA, Ungar IA (1984). “effect salinity temperature germination polymorphic seeds growth Atriplex triangularis Willd.” American Journal Botany, 71(4), 481–489. Khandakar AL, Bradbeer JW (1983). Jute seed quality. Bangladesh Agricultural Research Council, Dhaka. Kotowski F (1926). “Temperature relations germination vegetable seeds.” Proceedings American Society Horticultural Science, 23, 176–184. Labouriau LG (1983). Germinacao Das Sementes. Organizacao dos Estados Americanos. Programa Regional de Desenvolvimento Cientifico e Tecnologico. Serie de Biologia. Monografia 24. Labouriau LG (1983). “Uma nova linha de pesquisa na fisiologia da germinacao das sementes.” Anais XXXIV Congresso Nacional de Botanica. SBB, Porto Alegre, 11–50. Labouriau LG, Valadares MEB (1976). “germination seeds Calotropis procera (Ait.) Ait. f.” Anais da Academia Brasileira de Ciencias, 48(263-284). Maguire JD (1962). “Speed germination - Aid selection evaluation seedling emergence vigor.” Crop Science, 2(2), 176–177. Melville AH, Galletta GJ, Draper AD, Ng TJ (1980). “Seed germination early seedling vigor progenies inbred strawberry selections.” HortScience, 15(6, ), 749–750. Nichols MA, Heydecker W (1968). “Two approaches study germination data.” Proceedings International Seed Testing Association, 33(3), 531–540. Primack RB (1985). “Longevity individual flowers.” Annual Review Ecology Systematics, 16(1), 15–37. Quintanilla LG, Pajaron S, Pangua E, Amigo J (2000). “Effect temperature germination northernmost populations Culcita macrocarpa Woodwardia radicans.” Plant Biology, 2(6), 612–617. Ranal MA (1999). “Effects temperature spore germination fern species semideciduous mesophytic forest.” American Fern Journal, 89(2), 149. Ranal MA, de Santana DG (2006). “measure germination process?” Brazilian Journal Botany, 29(1), 1–11. Reddy LV (1978). Effect temperature seed dormancy alpha-amylase activity kernel maturation germination wheat (Triticum aestivum L.) cultivars. Ph.D. Thesis, Oregon State University. Reddy LV, Metzger RJ, Ching TM (1985). “Effect temperature seed dormancy wheat.” Crop Science, 25(3), 455. Roh M, Bentz J, Wang P, Li E, Koshioka M (2004). “Maturity temperature stratification affect germination Styrax japonicus seeds.” Journal Horticultural Science Biotechnology, 79(4), 645–651. Schrader JA, Graves WR (2000). “Seed germination seedling growth Alnus maritima three disjunct populations.” Journal American Society Horticultural Science, 125(1), 128–134. Scott SJ, Jones RA, Williams WA (1984). “Review data analysis methods seed germination.” Crop Science, 24(6), 1192–1199. Shannon CE (1948). “mathematical theory communication.” Bell System Technical Journal, 27(3), 379–423. Shmueli M, Goldberg D (1971). “Emergence, early growth, salinity five vegetable crops germinated sprinkle trickle irrigation arid zone.” HortScience, 6, 563–565. Smith PG, Millet AH (1964). “Germinating sprouting responses tomato low temperatures.” Proceedings American Society Horticultural Science, 84, 480–484. Throneberry GO, Smith FG (1955). “Relation respiratory enzymatic activity corn seed viability.” Plant Physiology, 30(4), 337–343. Timson J (1965). “New method recording germination data.” Nature, 207(4993), 216. Vallance KB (1950). “Studies germination seeds Striga hermonthica . influence moisture-treatment, stimulant-dilution, -ripening germination.” Annals Botany, 14(55), 347–363. Wardle DA, Ahmed M, Nicholson KS (1991). “Allelopathic influence nodding thistle (Carduus nutans L.) seeds germination radicle growth pasture plants.” New Zealand Journal Agricultural Research, 34(2), 185–191. Went FW (1957). experimental control plant growth, volume 17. Chronica Botanica Co., Waltham, Mass., USA Ronald Press Co., New York, USA.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/reference/germination.indices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Germination Indices — germination.indices","text":"","code":"# \\donttest{ data(gcdata)  counts.per.intervals <- c(\"Day01\", \"Day02\", \"Day03\", \"Day04\", \"Day05\",                           \"Day06\", \"Day07\", \"Day08\", \"Day09\", \"Day10\",                           \"Day11\", \"Day12\", \"Day13\", \"Day14\") germination.indices(gcdata, total.seeds.col = \"Total Seeds\",                     counts.intervals.cols = counts.per.intervals,                     intervals = 1:14, partial = TRUE, max.int = 5) #>    Genotype Rep Day01 Day02 Day03 Day04 Day05 Day06 Day07 Day08 Day09 Day10 #> 1        G1   1     0     0     0     0     4    17    10     7     1     0 #> 2        G2   1     0     0     0     1     3    15    13     6     2     1 #> 3        G3   1     0     0     0     2     3    18     9     8     2     1 #> 4        G4   1     0     0     0     0     4    19    12     6     2     1 #> 5        G5   1     0     0     0     0     5    20    12     8     1     0 #> 6        G1   2     0     0     0     0     3    21    11     7     1     1 #> 7        G2   2     0     0     0     0     4    18    11     7     1     0 #> 8        G3   2     0     0     0     1     3    14    12     6     2     1 #> 9        G4   2     0     0     0     1     3    19    10     8     1     1 #> 10       G5   2     0     0     0     0     4    18    13     6     2     1 #> 11       G1   3     0     0     0     0     5    21    11     8     1     0 #> 12       G2   3     0     0     0     0     3    20    10     7     1     1 #> 13       G3   3     0     0     0     0     4    19    12     8     1     1 #> 14       G4   3     0     0     0     0     3    21    11     6     1     0 #> 15       G5   3     0     0     0     0     4    17    10     8     1     1 #>    Day11 Day12 Day13 Day14 Total Seeds GermPercent PeakGermPercent #> 1      1     0     0     0          50    80.00000        34.00000 #> 2      0     1     0     0          51    82.35294        29.41176 #> 3      1     1     0     0          48    93.75000        37.50000 #> 4      1     1     0     0          51    90.19608        37.25490 #> 5      0     1     1     0          50    96.00000        40.00000 #> 6      1     1     0     0          49    93.87755        42.85714 #> 7      1     0     0     0          48    87.50000        37.50000 #> 8      0     1     0     0          47    85.10638        29.78723 #> 9      1     1     0     0          52    86.53846        36.53846 #> 10     0     1     0     0          50    90.00000        36.00000 #> 11     0     1     1     0          51    94.11765        41.17647 #> 12     1     1     0     0          51    86.27451        39.21569 #> 13     0     1     1     0          49    95.91837        38.77551 #> 14     1     1     0     0          48    91.66667        43.75000 #> 15     1     0     0     0          48    87.50000        35.41667 #>    FirstGermTime LastGermTime PeakGermTime TimeSpreadGerm t50_Coolbear #> 1              5           11            6              6     5.970588 #> 2              4           12            6              8     6.192308 #> 3              4           12            6              8     6.333333 #> 4              5           12            6              7     6.041667 #> 5              5           13            6              8     5.975000 #> 6              5           12            6              7     5.976190 #> 7              5           11            6              6     5.972222 #> 8              4           12            6              8     6.208333 #> 9              4           12            6              8     6.310345 #> 10             5           12            6              7     6.076923 #> 11             5           13            6              8     5.928571 #> 12             5           12            6              7     5.975000 #> 13             5           13            6              8     6.083333 #> 14             5           12            6              7     5.928571 #> 15             5           11            6              6     6.050000 #>    t50_Farooq MeanGermTime VarGermTime SEGermTime CVGermTime MeanGermRate #> 1    5.941176     6.700000    1.446154  0.1901416  0.1794868    0.1492537 #> 2    6.153846     6.857143    2.027875  0.2197333  0.2076717    0.1458333 #> 3    5.972222     6.866667    2.572727  0.2391061  0.2335882    0.1456311 #> 4    6.225806     6.891304    2.187923  0.2180907  0.2146419    0.1451104 #> 5    5.950000     6.812500    2.368351  0.2221275  0.2259002    0.1467890 #> 6    5.952381     6.869565    2.071498  0.2122088  0.2095140    0.1455696 #> 7    5.944444     6.690476    1.389663  0.1818989  0.1761967    0.1494662 #> 8    6.166667     6.875000    2.112179  0.2297923  0.2113940    0.1454545 #> 9    5.973684     6.866667    2.300000  0.2260777  0.2208604    0.1456311 #> 10   6.038462     6.822222    1.831313  0.2017321  0.1983606    0.1465798 #> 11   5.904762     6.791667    2.381206  0.2227295  0.2272072    0.1472393 #> 12   5.950000     6.886364    2.149577  0.2210295  0.2129053    0.1452145 #> 13   6.041667     6.936170    2.539315  0.2324392  0.2297410    0.1441718 #> 14   5.904762     6.772727    1.900634  0.2078370  0.2035568    0.1476510 #> 15   6.259259     6.809524    1.670151  0.1994129  0.1897847    0.1468531 #>     VarGermRate  SEGermRate      CVG GermRateRecip_Coolbear #> 1  0.0007176543 0.004235724 14.92537              0.1674877 #> 2  0.0009172090 0.004673148 14.58333              0.1614907 #> 3  0.0011572039 0.005071059 14.56311              0.1578947 #> 4  0.0009701218 0.004592342 14.51104              0.1655172 #> 5  0.0010995627 0.004786184 14.67890              0.1673640 #> 6  0.0009301809 0.004496813 14.55696              0.1673307 #> 7  0.0006935558 0.004063648 14.94662              0.1674419 #> 8  0.0009454531 0.004861721 14.54545              0.1610738 #> 9  0.0010345321 0.004794747 14.56311              0.1584699 #> 10 0.0008453940 0.004334343 14.65798              0.1645570 #> 11 0.0011191581 0.004828643 14.72393              0.1686747 #> 12 0.0009558577 0.004660905 14.52145              0.1673640 #> 13 0.0010970785 0.004831366 14.41718              0.1643836 #> 14 0.0009033254 0.004531018 14.76510              0.1686747 #> 15 0.0007767634 0.004300508 14.68531              0.1652893 #>    GermRateRecip_Farooq GermSpeed_Count GermSpeed_Percent #> 1             0.1683168        6.138925          12.27785 #> 2             0.1625000        6.362698          12.47588 #> 3             0.1674419        6.882179          14.33787 #> 4             0.1606218        6.927417          13.58317 #> 5             0.1680672        7.318987          14.63797 #> 6             0.1680000        6.931782          14.14649 #> 7             0.1682243        6.448449          13.43427 #> 8             0.1621622        6.053175          12.87909 #> 9             0.1674009        6.830592          13.13575 #> 10            0.1656051        6.812698          13.62540 #> 11            0.1693548        7.342796          14.39764 #> 12            0.1680672        6.622258          12.98482 #> 13            0.1655172        7.052320          14.39249 #> 14            0.1693548        6.706782          13.97246 #> 15            0.1597633        6.363925          13.25818 #>    GermSpeedAccumulated_Count GermSpeedAccumulated_Percent #> 1                    34.61567                     69.23134 #> 2                    35.54058                     69.68741 #> 3                    38.29725                     79.78594 #> 4                    38.68453                     75.85202 #> 5                    41.00786                     82.01571 #> 6                    38.77620                     79.13509 #> 7                    36.38546                     75.80304 #> 8                    33.77079                     71.85275 #> 9                    38.11511                     73.29829 #> 10                   38.19527                     76.39054 #> 11                   41.17452                     80.73436 #> 12                   37.00640                     72.56158 #> 13                   39.29399                     80.19182 #> 14                   37.69490                     78.53103 #> 15                   35.69697                     74.36868 #>    GermSpeedCorrected_Normal GermSpeedCorrected_Accumulated WeightGermPercent #> 1                  0.1534731                      0.8653917          47.42857 #> 2                  0.1514928                      0.8462043          47.89916 #> 3                  0.1529373                      0.8510501          54.46429 #> 4                  0.1505960                      0.8409680          52.24090 #> 5                  0.1524789                      0.8543303          56.14286 #> 6                  0.1506909                      0.8429608          54.51895 #> 7                  0.1535345                      0.8663205          51.93452 #> 8                  0.1513294                      0.8442698          49.39210 #> 9                  0.1517909                      0.8470024          50.27473 #> 10                 0.1513933                      0.8487837          52.57143 #> 11                 0.1529749                      0.8578026          55.18207 #> 12                 0.1505059                      0.8410547          50.00000 #> 13                 0.1500494                      0.8360424          55.24781 #> 14                 0.1524269                      0.8567022          53.86905 #> 15                 0.1515220                      0.8499278          51.19048 #>    MeanGermPercent MeanGermNumber TimsonsIndex TimsonsIndex_Labouriau #> 1         5.714286       2.857143     8.000000                   1.00 #> 2         5.882353       3.000000     9.803922                   1.25 #> 3         6.696429       3.214286    14.583333                   1.40 #> 4         6.442577       3.285714     7.843137                   1.00 #> 5         6.857143       3.428571    10.000000                   1.00 #> 6         6.705539       3.285714     6.122449                   1.00 #> 7         6.250000       3.000000     8.333333                   1.00 #> 8         6.079027       2.857143    10.638298                   1.25 #> 9         6.181319       3.214286     9.615385                   1.25 #> 10        6.428571       3.214286     8.000000                   1.00 #> 11        6.722689       3.428571     9.803922                   1.00 #> 12        6.162465       3.142857     5.882353                   1.00 #> 13        6.851312       3.357143     8.163265                   1.00 #> 14        6.547619       3.142857     6.250000                   1.00 #> 15        6.250000       3.000000     8.333333                   1.00 #>    TimsonsIndex_KhanUngar GermRateGeorge GermIndex GermIndex_mod #> 1               0.5714286              4  5.840000      7.300000 #> 2               0.7002801              5  5.882353      7.142857 #> 3               1.0416667              7  6.687500      7.133333 #> 4               0.5602241              4  6.411765      7.108696 #> 5               0.7142857              5  6.900000      7.187500 #> 6               0.4373178              3  6.693878      7.130435 #> 7               0.5952381              4  6.395833      7.309524 #> 8               0.7598784              5  6.063830      7.125000 #> 9               0.6868132              5  6.173077      7.133333 #> 10              0.5714286              4  6.460000      7.177778 #> 11              0.7002801              5  6.784314      7.208333 #> 12              0.4201681              3  6.137255      7.113636 #> 13              0.5830904              4  6.775510      7.063830 #> 14              0.4464286              3  6.625000      7.227273 #> 15              0.5952381              4  6.291667      7.190476 #>    EmergenceRateIndex_SG EmergenceRateIndex_SG_mod #> 1                    292                  7.300000 #> 2                    300                  7.142857 #> 3                    321                  7.133333 #> 4                    327                  7.108696 #> 5                    345                  7.187500 #> 6                    328                  7.130435 #> 7                    307                  7.309524 #> 8                    285                  7.125000 #> 9                    321                  7.133333 #> 10                   323                  7.177778 #> 11                   346                  7.208333 #> 12                   313                  7.113636 #> 13                   332                  7.063830 #> 14                   318                  7.227273 #> 15                   302                  7.190476 #>    EmergenceRateIndex_BilbroWanjura EmergenceRateIndex_Fakorede PeakValue #> 1                          5.970149                    8.375000  9.500000 #> 2                          6.125000                    8.326531  9.313725 #> 3                          6.553398                    7.324444 10.416667 #> 4                          6.675079                    7.640359 10.049020 #> 5                          7.045872                    7.096354 11.250000 #> 6                          6.696203                    7.317580 10.714286 #> 7                          6.277580                    7.646259 10.416667 #> 8                          5.818182                    8.078125  9.574468 #> 9                          6.553398                    7.934815  9.855769 #> 10                         6.596091                    7.580247 10.250000 #> 11                         7.067485                    7.216146 11.029412 #> 12                         6.389439                    7.981921  9.803922 #> 13                         6.776074                    7.231326 10.969388 #> 14                         6.496644                    7.388430 10.677083 #> 15                         6.167832                    7.782313 10.156250 #>    GermValue_Czabator GermValue_DP GermValue_Czabator_mod GermValue_DP_mod #> 1            54.28571     57.93890               54.28571         39.56076 #> 2            54.78662     52.58713               54.78662         40.99260 #> 3            69.75446     68.62289               69.75446         53.42809 #> 4            64.74158     70.43331               64.74158         48.86825 #> 5            77.14286     80.16914               77.14286         56.23935 #> 6            71.84506     76.51983               71.84506         53.06435 #> 7            65.10417     69.41325               65.10417         47.37690 #> 8            58.20345     56.00669               58.20345         43.67948 #> 9            60.92165     58.13477               60.92165         45.30801 #> 10           65.89286     70.91875               65.89286         49.10820 #> 11           74.14731     77.39782               74.14731         54.27520 #> 12           60.41632     64.44988               60.41632         44.71582 #> 13           75.15470     78.16335               75.15470         54.94192 #> 14           69.90947     74.40140               69.90947         51.41913 #> 15           63.47656     67.62031               63.47656         46.48043 #>       CUGerm GermSynchrony GermUncertainty #> 1  0.7092199     0.2666667        2.062987 #> 2  0.5051546     0.2346109        2.321514 #> 3  0.3975265     0.2242424        2.462012 #> 4  0.4672113     0.2502415        2.279215 #> 5  0.4312184     0.2606383        2.146051 #> 6  0.4934701     0.2792271        2.160545 #> 7  0.7371500     0.2729384        2.040796 #> 8  0.4855842     0.2256410        2.357249 #> 9  0.4446640     0.2494949        2.321080 #> 10 0.5584666     0.2555556        2.187983 #> 11 0.4288905     0.2686170        2.128670 #> 12 0.4760266     0.2737844        2.185245 #> 13 0.4023679     0.2506938        2.241181 #> 14 0.5383760     0.2991543        2.037680 #> 15 0.6133519     0.2497096        2.185028 # }"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/plot.FourPHFfit.bulk.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the multiple four-parameter hill function fitted cumulative germination curves from a FourPHFfit.bulk object — plot.FourPHFfit.bulk","title":"Plot the multiple four-parameter hill function fitted cumulative germination curves from a FourPHFfit.bulk object — plot.FourPHFfit.bulk","text":"plot.FourPHFfit plots multiple four-parameter hill function fitted cumulative germination curves (FPHF curves)  rate germination curves (RoG curves) FourPHFfit.bulk object object class ggplot. , either one parameters time required 50% total seeds germinate (\\(\\textrm{t}_{\\textrm{50}_\\textrm{Total}}\\)), time required 50% viable/germinated seeds germinate (\\(\\textrm{t}_{\\textrm{50}_\\textrm{Germ}}\\)), Time Maximum Germination Rate (TMGR), Mean Germination Time (MGT), uniformity value (\\(\\textrm{U}_{\\textrm{t}_{\\textrm{max}}-\\textrm{t}_{\\textrm{min}}}\\)) can also annotated plot specified annotate argument.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/plot.FourPHFfit.bulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the multiple four-parameter hill function fitted cumulative germination curves from a FourPHFfit.bulk object — plot.FourPHFfit.bulk","text":"","code":"# S3 method for class 'FourPHFfit.bulk' plot(   x,   rog = FALSE,   annotate = c(\"none\", \"t50.total\", \"t50.germ\", \"tmgr\", \"mgt\", \"uniformity\"),   limits = TRUE,   group.col,   show.points = FALSE,   ... )"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/plot.FourPHFfit.bulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the multiple four-parameter hill function fitted cumulative germination curves from a FourPHFfit.bulk object — plot.FourPHFfit.bulk","text":"x data frame object class FourPHFfit.bulk obtained output FourPHFfit.bulk function. rog TRUE, plots Rate Germination curves (RoG) instead Four-Parameter Hill Function fitted cumulative germination curves (FPHF). Default FALSE. annotate parameter annotated plot. Either \"t50.total\" (\\(\\textrm{t}_{\\textrm{50}_\\textrm{Total}}\\)), \"t50.germ\" (\\(\\textrm{t}_{\\textrm{50}_\\textrm{Germ}}\\)), \"tmgr\" (TMGR), \"mgt\" (MGT), \"uniformity\" (\\(\\textrm{U}_{\\textrm{t}_{\\textrm{max}}-\\textrm{t}_{\\textrm{min}}}\\)).  parameters annotated vertical lines, except (\\(\\textrm{U}_{\\textrm{t}_{\\textrm{max}}-\\textrm{t}_{\\textrm{min}}}\\)),  annotated horizontal lines. limits logical. TRUE, set limits y axis (germination percentage) 0 100 germination curve plot. FALSE, limits set according data. Default TRUE. group.col names column data frame x according grouping done. show.points logical. TRUE, shows original data points (FPHF curve). Default TRUE. ... Default plot arguments.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/plot.FourPHFfit.bulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the multiple four-parameter hill function fitted cumulative germination curves from a FourPHFfit.bulk object — plot.FourPHFfit.bulk","text":"plot cumulative germination curve object class   ggplot.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/reference/plot.FourPHFfit.bulk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the multiple four-parameter hill function fitted cumulative germination curves from a FourPHFfit.bulk object — plot.FourPHFfit.bulk","text":"","code":"# \\donttest{ data(gcdata)  counts.per.intervals <- c(\"Day01\", \"Day02\", \"Day03\", \"Day04\", \"Day05\",                           \"Day06\", \"Day07\", \"Day08\", \"Day09\", \"Day10\",                           \"Day11\", \"Day12\", \"Day13\", \"Day14\")  fits <- FourPHFfit.bulk(gcdata, total.seeds.col = \"Total Seeds\",                     counts.intervals.cols = counts.per.intervals,                     intervals = 1:14, partial = TRUE,                     fix.y0 = TRUE, fix.a = TRUE, xp = c(10, 60),                     tmax = 20, tries = 3, umax = 90, umin = 10)  # Plot FPHF curves plot(fits, group.col = \"Genotype\")   # Plot ROG curves plot(fits, rog = TRUE, group.col = \"Genotype\")   # Plot FPHF curves with points plot(fits, group.col = \"Genotype\", show.points = TRUE)   # Plot FPHF curves with annotations plot(fits, group.col = \"Genotype\", annotate = \"t50.total\")  plot(fits, group.col = \"Genotype\", annotate = \"t50.germ\")  plot(fits, group.col = \"Genotype\", annotate = \"tmgr\")  plot(fits, group.col = \"Genotype\", annotate = \"mgt\")  plot(fits, group.col = \"Genotype\", annotate = \"uniformity\")   # Plot ROG curves with annotations plot(fits, rog = TRUE, group.col = \"Genotype\", annotate = \"t50.total\")  plot(fits, rog = TRUE, group.col = \"Genotype\", annotate = \"t50.germ\")  plot(fits, rog = TRUE, group.col = \"Genotype\", annotate = \"tmgr\")  plot(fits, rog = TRUE, group.col = \"Genotype\", annotate = \"mgt\")  plot(fits, rog = TRUE, group.col = \"Genotype\", annotate = \"uniformity\")     # Change colour of curves using ggplot2 options library(ggplot2) curvesplot <- plot(fits, group.col = \"Genotype\")  # 'Dark2' palette from RColorBrewer curvesplot + scale_colour_brewer(palette = \"Dark2\")   # Manual colours curvesplot +   scale_colour_manual(values = c(\"Coral\", \"Brown\", \"Blue\",                                  \"Aquamarine\", \"Red\"))  # }"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/plot.FourPHFfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the four-parameter hill function fitted cumulative germination curve from a FourPHFfit object — plot.FourPHFfit","title":"Plot the four-parameter hill function fitted cumulative germination curve from a FourPHFfit object — plot.FourPHFfit","text":"plot.FourPHFfit plots four-parameter hill function fitted cumulative germination curve (FPHF curve) FourPHFfit object object class ggplot. , rate germination curve (RoG curve) plotted different parameters annotated specified different arguments.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/plot.FourPHFfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the four-parameter hill function fitted cumulative germination curve from a FourPHFfit object — plot.FourPHFfit","text":"","code":"# S3 method for class 'FourPHFfit' plot(   x,   rog = TRUE,   t50.total = TRUE,   t50.germ = TRUE,   tmgr = TRUE,   mgt = TRUE,   uniformity = TRUE,   limits = TRUE,   plotlabels = TRUE,   ... )"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/plot.FourPHFfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the four-parameter hill function fitted cumulative germination curve from a FourPHFfit object — plot.FourPHFfit","text":"x object class FourPHFfit obtained output FourPHFfit function. rog TRUE, plots Rate Germination curve (RoG). Default TRUE. t50.total TRUE, highlights time required 50% total seeds germinate (\\(\\textrm{t}_{\\textrm{50}_\\textrm{Total}}\\)) vertical line. Default TRUE. t50.germ TRUE, highlights time required 50% viable/germinated seeds germinate (\\(\\textrm{t}_{\\textrm{50}_\\textrm{Germ}}\\)) vertical line. Default TRUE. tmgr TRUE, highlights Time Maximum Germination Rate (TMGR) vertical line. Default TRUE. mgt TRUE, highlights Mean Germination Time (MGT) vertical line. Default TRUE. uniformity TRUE, highlights uniformity value (\\(\\textrm{U}_{\\textrm{t}_{\\textrm{max}}-\\textrm{t}_{\\textrm{min}}}\\)) horizontal line. Default TRUE. limits logical. TRUE, set limits y axis (germination percentage) 0 100 germination curve plot. FALSE, limits set according data. Default TRUE. plotlabels logical. TRUE, adds labels germination curve plot. Default TRUE. ... Default plot arguments.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/plot.FourPHFfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the four-parameter hill function fitted cumulative germination curve from a FourPHFfit object — plot.FourPHFfit","text":"plot cumulative germination curve object class   ggplot.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/reference/plot.FourPHFfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the four-parameter hill function fitted cumulative germination curve from a FourPHFfit object — plot.FourPHFfit","text":"","code":"# \\donttest{ x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x) total.seeds = 50  # From partial germination counts #---------------------------------------------------------------------------- fit1 <- FourPHFfit(germ.counts = x, intervals = int,                    total.seeds = 50, tmax = 20)  # From cumulative germination counts #---------------------------------------------------------------------------- fit2 <- FourPHFfit(germ.counts = y, intervals = int,                    total.seeds = 50, tmax = 20, partial = FALSE)  # Default plots plot(fit1) #> Warning: All aesthetics have length 1, but the data has 14 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 14 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row.  plot(fit2) #> Warning: All aesthetics have length 1, but the data has 14 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 14 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row.   # No labels plot(fit1, plotlabels = FALSE) #> Warning: All aesthetics have length 1, but the data has 14 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 14 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row.  plot(fit2, plotlabels = FALSE) #> Warning: All aesthetics have length 1, but the data has 14 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 14 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row.   # Only the FPHF curve plot(fit1, rog = FALSE, t50.total = FALSE, t50.germ = FALSE,      tmgr = FALSE, mgt = FALSE, uniformity = FALSE)  plot(fit2, rog = FALSE, t50.total = FALSE, t50.germ = FALSE,      tmgr = FALSE, mgt = FALSE, uniformity = FALSE)   # Without y axis limits adjustment plot(fit1, limits = FALSE) #> Warning: All aesthetics have length 1, but the data has 14 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 14 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row.  plot(fit2, limits = FALSE) #> Warning: All aesthetics have length 1, but the data has 14 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: All aesthetics have length 1, but the data has 14 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row.  # }"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/t50.html","id":null,"dir":"Reference","previous_headings":"","what":"Median germination time — t50","title":"Median germination time — t50","text":"Compute median germination time (\\(t_{50}\\)). Median germination time time reach 50% final/maximum germination.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/t50.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median germination time — t50","text":"","code":"t50(germ.counts, intervals, partial = TRUE, method = c(\"coolbear\", \"farooq\"))"},{"path":"https://aravind-j.github.io/germinationmetrics/reference/t50.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median germination time — t50","text":"germ.counts Germination counts time interval. Can partial cumulative specified argument partial. intervals time intervals. partial logical. TRUE, germ.counts considered partial FALSE, considered cumulative. Default TRUE. method method computing median germination time. Either \"coolbear\" \"farooq\".","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/t50.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Median germination time — t50","text":"median germination time (\\(t_{50}\\)) value unit   time specified argument intervals.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/t50.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Median germination time — t50","text":"argument method specified \"coolbear\", median germination time computed according formula Coolbear et al. (1984)  follows. \\[t_{50}=T_{}+ \\frac{(\\frac{N+1}{2}-N_{})(T_{j}-T_{})}{N_{j}-N_{}}\\] , \\(t_{50}\\) median germination time, \\(N\\) final number germinated seeds, \\(N_{}\\) \\(N_{j}\\) total number seeds germinated adjacent counts time \\(T_{}\\) \\(T_{j}\\) respectively, \\(N_{} Similarly argument method specified \"farooq\", median germination time computed according formula  Farooq et al. (2005)  follows. \\[t_{50}=T_{}+ \\frac{(\\frac{N}{2}-N_{})(T_{j}-T_{})}{N_{j}-N_{}}\\] , \\(t_{50}\\) median germination time, \\(N\\) final number germinated seeds, \\(N_{}\\) \\(N_{j}\\) total number seeds germinated adjacent counts time \\(T_{}\\) \\(T_{j}\\) respectively, \\(N_{}","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/reference/t50.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Median germination time — t50","text":"Coolbear P, Francis , Grierson D (1984). “effect low temperature pre-sowing treatment germination performance membrane integrity artificially aged tomato seeds.” Journal Experimental Botany, 35(11), 1609–1617. Farooq M, Basra SMA, Ahmad N, Hafeez K (2005). “Thermal hardening: new seed vigor enhancement tool rice.” Journal Integrative Plant Biology, 47(2), 187–193.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/reference/t50.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Median germination time — t50","text":"","code":"x <- c(0, 0, 0, 0, 4, 17, 10, 7, 1, 0, 1, 0, 0, 0) y <- c(0, 0, 0, 0, 4, 21, 31, 38, 39, 39, 40, 40, 40, 40) int <- 1:length(x)  # From partial germination counts #---------------------------------------------------------------------------- t50(germ.counts = x, intervals = int, method = \"coolbear\") #> [1] 5.970588 t50(germ.counts = x, intervals = int, method = \"farooq\") #> [1] 5.941176  # From cumulative germination counts #---------------------------------------------------------------------------- t50(germ.counts = y, intervals = int, partial = FALSE, method = \"coolbear\") #> [1] 5.970588 t50(germ.counts = y, intervals = int, partial = FALSE, method = \"farooq\") #> [1] 5.941176"},{"path":[]},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"new-functions-0-1-9","dir":"Changelog","previous_headings":"","what":"NEW FUNCTIONS:","title":"germinationmetrics 0.1.9","text":"geom_line2 - modification ggplot2::geom_line plot lines points together.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"updated-functions-0-1-9","dir":"Changelog","previous_headings":"","what":"UPDATED FUNCTIONS:","title":"germinationmetrics 0.1.9","text":"FourPHFfit - Added better error handling. Now gracefully fails returning empty output due convergence errors fitting possible. FourPHFfit.bulk - Added better convergence error handling. Added grid search finding starting values. plot.FourPHFfit.bulk - Now uses geom_errorbar showing uniformity. Added better plotting without overlap using geom_line2. t50 - Fixes bug causing incorrect results multiple values Ni Nj present (Thanks Aude Maugarny @amaugarn). GermValue & GermSpeed - Updated calculations ignroe NaN values. EmergenceRateIndex - Fix error due missing total.seeds argument.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"germinationmetrics-018","dir":"Changelog","previous_headings":"","what":"germinationmetrics 0.1.8","title":"germinationmetrics 0.1.8","text":"CRAN release: 2023-08-18","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"updated-functions-0-1-8","dir":"Changelog","previous_headings":"","what":"UPDATED FUNCTIONS:","title":"germinationmetrics 0.1.8","text":"FirstGermTime, LastGermTime, TimeSpreadGerm - Fixed issue incorrect display results case intervals days (Thanks D. Vijay Dunna.Vijay[]icar.gov.). FourPHFfit, plot.FourPHFfit FourPHFfit.bulk plot.FourPHFfit.bulk - Replaced fitting using minpack.lm::nlsLM gslnls::gsl_nls. FourPHFfit.bulk plot.FourPHFfit.bulk - Fixed issue plotting cumulative data show.points = TRUE (Thanks D. Vijay Dunna.Vijay[]icar.gov.). FourPHFfit.bulk - Added fit quality evaluation output. VarGermTime, SEGermTime, SEGermRate, CUGerm - Fixed calculation bug cumulative data.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"other-notes-0-1-8","dir":"Changelog","previous_headings":"","what":"OTHER NOTES:","title":"germinationmetrics 0.1.8","text":"Added unit tests testthat. Fixed inst/CITATION.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"germinationmetrics-017","dir":"Changelog","previous_headings":"","what":"germinationmetrics 0.1.7","title":"germinationmetrics 0.1.7","text":"CRAN release: 2022-08-28","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"updated-functions-0-1-7","dir":"Changelog","previous_headings":"","what":"UPDATED FUNCTIONS:","title":"germinationmetrics 0.1.7","text":"FourPHFfit.bulk - Fixed false “total number seeds tested less total number germinated seeds” warning germination count data cumulative (Thanks D. Vijay Dunna.Vijay[]icar.gov.). FourPHFfit - Updated computation starting values.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"vignette-0-1-7","dir":"Changelog","previous_headings":"","what":"VIGNETTE:","title":"germinationmetrics 0.1.7","text":"Resolved duplicate chunk labels.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"other-notes-0-1-7","dir":"Changelog","previous_headings":"","what":"OTHER NOTES:","title":"germinationmetrics 0.1.7","text":"Updated documentation WeightGermPercent germination.indices fix HTML validation problems.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"germinationmetrics-016","dir":"Changelog","previous_headings":"","what":"germinationmetrics 0.1.6","title":"germinationmetrics 0.1.6","text":"CRAN release: 2022-06-15","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"new-functions-0-1-6","dir":"Changelog","previous_headings":"","what":"NEW FUNCTIONS:","title":"germinationmetrics 0.1.6","text":"PeakGermPercent - Compute peak germination percentage.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"updated-functions-0-1-6","dir":"Changelog","previous_headings":"","what":"UPDATED FUNCTIONS:","title":"germinationmetrics 0.1.6","text":"FirstGermTime, LastGermTime PeakGermTime - Updated documentation formula. EmergenceRateIndex - Depreciate erroneous method argument options melville melvillesantanaranal replace shmueligoldberg sgsantanaranal respectively. GermSpeedCorrected - Use germination percentage instead counts. EmergenceRateIndex, GermIndex, GermSpeedCorrected, GermValue, GermRateRecip TimsonsIndex - Minor documentation update.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"vignette-0-1-6","dir":"Changelog","previous_headings":"","what":"VIGNETTE:","title":"germinationmetrics 0.1.6","text":"Fixed fetching CRAN page version history fail gracefully access . Updated units Table 3.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"germinationmetrics-015","dir":"Changelog","previous_headings":"","what":"germinationmetrics 0.1.5","title":"germinationmetrics 0.1.5","text":"CRAN release: 2021-02-17","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"new-functions-0-1-5","dir":"Changelog","previous_headings":"","what":"NEW FUNCTIONS:","title":"germinationmetrics 0.1.5","text":"plot.FourPHFfit.bulk - Wrapper function around FourPHFfit multiple samples.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"updated-functions-0-1-5","dir":"Changelog","previous_headings":"","what":"UPDATED FUNCTIONS:","title":"germinationmetrics 0.1.5","text":"FourPHFfit - Added warning low germination percentages. Modified return NA output zero total germination inputs non-converging fits break FourPHFfit.bulk.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"vignette-0-1-5","dir":"Changelog","previous_headings":"","what":"VIGNETTE:","title":"germinationmetrics 0.1.5","text":"Removed cairo dependency.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"germinationmetrics-014","dir":"Changelog","previous_headings":"","what":"germinationmetrics 0.1.4","title":"germinationmetrics 0.1.4","text":"CRAN release: 2020-06-16","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"new-functions-0-1-4","dir":"Changelog","previous_headings":"","what":"NEW FUNCTIONS:","title":"germinationmetrics 0.1.4","text":"FourPHFfit.bulk - Wrapper function around FourPHFfit multiple samples. GermIndex - Compute germination index according Melville et al., (1980). EmergenceRateIndex - Compute emergence rate index according Shmueli Goldberg (1971), Bilbro Wanjura (1982), Fakorede Ayoola (1980).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"updated-functions-0-1-4","dir":"Changelog","previous_headings":"","what":"UPDATED FUNCTIONS:","title":"germinationmetrics 0.1.4","text":"FourPHFfit - Added checks input arguments umax, umin, xp, tries tmax. MeanGermPercent, MeanGermNumber, GermSynchrony, GermUncertainty, TimsonsIndex, GermRateGeorge, GermSpeed, GermSpeedAccumulated, FirstGermTime, GermValue, PeakValue, WeightGermPercent, t50, MeanGermRate, MeanGermTime, germination.indices, FourPHFfit FourPHFfit.bulk - Fixed check uniformity intervals handle non-integer values correctly. Closes issue #3.(Thanks Jonas Ohlsson [@jonasoh]) TimsonsIndex GermRateGeorge- Fixed handle interval data days.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"vignette-0-1-4","dir":"Changelog","previous_headings":"","what":"VIGNETTE:","title":"germinationmetrics 0.1.4","text":"Fixed details Median germination time Table 3. Fixed typo formula CUG Table 3. Added reference Coefficient variation germination time Table 3. Reverted using system certificates instead RCurl ones fetching displaying version history suggested Prof. Brian Ripley (ripley@stats.ox.ac.uk).","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"other-notes-0-1-4","dir":"Changelog","previous_headings":"","what":"OTHER NOTES:","title":"germinationmetrics 0.1.4","text":"Error case non-uniform intervals converted warning. Fixed documentation errors FourPHFfit CVGermTime. Updated documentation GermSpeed, GermSpeedAccumulated, CUGerm MeanGermRate, SEGermRate, CVG, MeanGermTime, VarGermTime, SEGermTime, GermUncertainty, GermSynchrony, MeanGermPercent, MeanGermNumber, WeightGermPercent, TimsonsIndex, GermRateGeorge GermSynchrony. Converted equations Rd files MathJaxusing mathjaxr Added long running examples \\donttest germination.indices, plot.FourPHFfit, gcdata FourPHFfit.bulk.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"germinationmetrics-013","dir":"Changelog","previous_headings":"","what":"germinationmetrics 0.1.3","title":"germinationmetrics 0.1.3","text":"CRAN release: 2019-01-19","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"new-functions-0-1-3","dir":"Changelog","previous_headings":"","what":"NEW FUNCTIONS:","title":"germinationmetrics 0.1.3","text":"WeightGermPercent - Compute Weighted germination percentage. germination.indices - wrapper function compute germination indices batch.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"updated-functions-0-1-3","dir":"Changelog","previous_headings":"","what":"UPDATED FUNCTIONS:","title":"germinationmetrics 0.1.3","text":"CVGermTime - Fixed error function name (CVSEGermTime). TimsonsIndex - Fixed error method name (khanungar). GermSpeed GermSpeedAccumulated - Updated option use percentage germination addition germination counts. GermSpeedCorrected - Updated option use GermSpeedAccumulated addition GermSpeed. GermValue - Updated option consider time start test addition time onset germination.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"vignette-0-1-3","dir":"Changelog","previous_headings":"","what":"VIGNETTE:","title":"germinationmetrics 0.1.3","text":"Fixed LATEX xcolor options clash issue vignette.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"other-notes-0-1-3","dir":"Changelog","previous_headings":"","what":"OTHER NOTES:","title":"germinationmetrics 0.1.3","text":"Updated documentation - GermValue, MeanGermTime TimsonsIndex.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"germinationmetrics-012","dir":"Changelog","previous_headings":"","what":"germinationmetrics 0.1.2","title":"germinationmetrics 0.1.2","text":"CRAN release: 2018-10-31","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"other-notes-0-1-2","dir":"Changelog","previous_headings":"","what":"OTHER NOTES:","title":"germinationmetrics 0.1.2","text":"Removed non-ASCII symbols inst/REFERENCES.bib used Rdpack macro enforce UTF-8 encoding. Added inline citations documentation Rdpack \\insertCite{}{} replaced \\insertRef{}{} \\insertAllCited{}. Fixed https link issue vignette. Added mirror set command vignette. Added XML, RCurl httr suggests.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"germinationmetrics-011","dir":"Changelog","previous_headings":"","what":"germinationmetrics 0.1.1","title":"germinationmetrics 0.1.1","text":"CRAN release: 2018-07-26","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"new-functions-0-1-1","dir":"Changelog","previous_headings":"","what":"NEW FUNCTIONS:","title":"germinationmetrics 0.1.1","text":"plot.FourPHFfit - plot method FourPHFfit.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"updated-functions-0-1-1","dir":"Changelog","previous_headings":"","what":"UPDATED FUNCTIONS:","title":"germinationmetrics 0.1.1","text":"FourPHFfit - Fixed code accommodate changes new release broom package. FourPHFfit - Separated plot method new function plot.FourPHFfit.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"vignette-0-1-1","dir":"Changelog","previous_headings":"","what":"VIGNETTE:","title":"germinationmetrics 0.1.1","text":"Fixed LATEX xcolor options clash issue vignette. Fixed issue missing pandoc case r-release-osx-x86_64.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"other-notes-0-1-1","dir":"Changelog","previous_headings":"","what":"OTHER NOTES:","title":"germinationmetrics 0.1.1","text":"Fixed citation information. Added zenodo rdocumentation badges. Added CRAN installation instructions Readme. Added logo.","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"germinationmetrics-010","dir":"Changelog","previous_headings":"","what":"germinationmetrics 0.1.0","title":"germinationmetrics 0.1.0","text":"CRAN release: 2018-04-17 First release","code":""},{"path":"https://aravind-j.github.io/germinationmetrics/news/index.html","id":"germinationmetrics-0009000","dir":"Changelog","previous_headings":"","what":"germinationmetrics 0.0.0.9000","title":"germinationmetrics 0.0.0.9000","text":"Pre-release","code":""}]
